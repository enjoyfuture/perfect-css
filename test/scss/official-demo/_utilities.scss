// Utility Tests
// =============


@include test-module('True Error [function]') {
  @include test('Allow errors to return without blocking compilation') {
    @include assert-equal(
      _true-error('This is a test error message', '_true-error test'),
      'ERROR [_true-error test] This is a test error message');
  }
}


@include test-module('True Error [mixin]') {
  @include test('Allow errors to output without blocking compilation') {
    @include assert {
      @include output {
        @include _true-error('This is a test error message', '_true-error test');
      }
      @include expect {
        @include _true-message('ERROR [_true-error test] This is a test error message', 'comments');
      }
    }
  }
}


@include test-module('Map Add [function]') {
  @include test('Returns a map with the sum-values of two numeric maps') {
    $base: (one: 1, two: 1, three: 1);
    $add: (one: 1, two: 2, three: -1);

    // _true-map-increment 函数功能为两个 map 对象相加合并
    $test: _true-map-increment($base, $add);
    $expect: (one: 2, two: 3, three: 0);
    @include assert-equal(
      _true-map-increment($base, $add),
      $expect);
  }
}


@include test-module('Join Multiple [function') {
  $one: ('one', 'two', 'three');
  $two: ('four' 'five' 'six');
  $three: ('seven', 'eight', 'nine');
  $joined: (
    'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'
    );

  @include test('Combines multiple lists') {
    @include assert-equal(
      _true-join-multiple($one, $two, $three),
      $joined);
  }

  @include test('Sets new list-separator') {
    @include assert-equal(
      _true-join-multiple($one, $two, $three, 'space'),
      join((), $joined, 'space'));
  }
}
