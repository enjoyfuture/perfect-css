// Report Tests
// ============


$fake-stats: (
  'modules': 4,
  'tests': 6,
  'assertions': 25
);

$single-stats: '4 Modules, 6 Tests, 25 Assertions';
$multi-stats: ('Stats:', '- 4 Modules', '- 6 Tests', '- 25 Assertions');

$fake-results: (
  'run': 6,
  'pass': 5,
  'fail': 1,
  'output-to-css': 0,
);

$single-results: '6 Tests, 5 Passed, 1 Failed';
$multi-results: ('6 Tests:', '- 5 Passed', '- 1 Failed');

$single: ($single-results, $single-stats);
$multi: _true-join-multiple(
  '# SUMMARY ----------',
  $multi-results,
  $multi-stats,
  '--------------------'
  );


@include test-module('report [mixin]') {
  @include test('Output Message') {
    @include assert {
      @include output {
        @include report(false, false, $fake-results, $fake-stats);
      }
      @include expect {
        @include _true-message($multi, 'comments');
      }
    }
  }

  @include test('Fail on Error') {
    @include assert {
      @include output {
        @include report(false, 'fail on error', $fake-results, $fake-stats);
      }
      @include expect {
        @include _true-message($multi, 'comments');
        @include _true-error('1 test failed', 'report');
      }
    }
  }

  @include test('Bad results') {
    $bad-results: map-merge($fake-results, ('pass': 4));
    $bad-lines: ('6 Tests:', '- 4 Passed', '- 1 Failed');
    $bad: _true-join-multiple(
      '# SUMMARY ----------',
      $bad-lines,
      $multi-stats,
      '--------------------'
      );

    @include assert {
      @include output {
        @include report(false, false, $bad-results, $fake-stats);
      }
      @include expect {
        @include _true-message($bad, 'comments');
        @include _true-error('The results donâ€™t add up. Are all your tests properly structured?', 'report');
      }
    }
  }
}


@include test-module('report-message [function]') {
  @include test('Single Line') {
    @include assert-equal(
      _true-report-message(not 'linebreaks', $fake-results, $fake-stats),
      $single);
  }

  @include test('Linebreaks') {
    @include assert-equal(
      _true-report-message('linebreaks', $fake-results, $fake-stats),
      $multi);
  }
}
