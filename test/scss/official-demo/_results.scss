// Test Results
// ============


@include test-module('Get Result') {
  @include test('Equal Pass') {
    @include assert-equal(
      _true-get-result(1em, 1em),
      'pass');
  }

  @include test('Equal Fail') {
    @include assert-equal(
      _true-get-result(1em, true),
      'fail');
  }

  @include test('Unequal pass') {
    @include assert-equal(
      _true-get-result(true, 'hello', 'unequal'),
      'pass');
  }

  @include test('Unequal fail') {
    @include assert-equal(
      _true-get-result('hello', 'hello', 'unequal'),
      'fail');
  }
}


@include test-module('Update Results') {
  $before: $_true-results;
  @include _true-update('pass');
  $actual: $_true-results;
  $_true-results: $before !global;

  @include test('Add one run') {
    @include assert-equal(
      map-get($actual, 'run'),
      map-get($before, 'run') + 1);
  }

  @include test('Add one pass') {
    @include assert-equal(
      map-get($actual, 'pass'),
      map-get($before, 'pass') + 1);
  }

  @include test('Fail counts are left as-is') {
    @include assert-equal(
      map-get($actual, 'fail'),
      map-get($before, 'fail'));
  }

  @include test('Output counts are left as-is') {
    @include assert-equal(
      map-get($actual, 'output-to-css'),
      map-get($before, 'output-to-css'));
  }
}


@include test-module('Update Test') {
  $before: $_true-test-result;
  @include _true-update-test('pass');
  $pass: $_true-test-result;
  @include _true-update-test('output-to-css');
  $css: $_true-test-result;
  @include _true-update-test('pass');
  $css2: $_true-test-result;
  @include _true-update-test('fail');
  $fail: $_true-test-result;
  @include _true-update-test('pass');
  @include _true-update-test('output-to-css');
  $fail2: $_true-test-result;
  $_true-test-result: $before !global;

  @include test('Updates global test-result') {
    @include assert-equal(
      $before,
      null,
      'confirm the default state');
    @include assert-equal(
      $pass,
      'pass',
      'confirm updated test-result');
  }

  @include test('Output-to-css overrides pass') {
    @include assert-equal(
      $css,
      'output-to-css');
  }

  @include test('Pass does not override output-to-css') {
    @include assert-equal(
      $css,
      $css2);
  }

  @include test('Fail overrides everything') {
    @include assert-equal(
      $fail,
      'fail');
  }

  @include test('Nothing overrides fail') {
    @include assert-equal(
      $fail,
      $fail2);
  }
}


@include test-module('results-message [function]') {
  $test-map: (
    'run': 10,
    'pass': 6,
    'fail': 1,
    'output-to-css': 3,
  );

  @include test('Single Line') {
    @include assert-equal(
      _true-results-message($results: $test-map),
      '10 Tests, 6 Passed, 1 Failed, 3 Output to CSS');
  }

  @include test('Linebreaks') {
    $message: ('10 Tests:', '- 6 Passed', '- 1 Failed', '- 3 Output to CSS');
    @include assert-equal(
      _true-results-message('linebreaks', $test-map),
      $message);
  }

  $test-map: map-merge($test-map, ('output-to-css': 0));

  @include test('No output tests') {
    @include assert-equal(
      _true-results-message($results: $test-map),
      '10 Tests, 6 Passed, 1 Failed');
  }

  $test-map: map-merge($test-map, ('run': 1));

  @include test('Single test') {
    @include assert-equal(
      _true-results-message($results: $test-map),
      '1 Test, 6 Passed, 1 Failed');
  }
}
