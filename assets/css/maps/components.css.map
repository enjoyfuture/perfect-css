{"version":3,"sources":["common/_header.scss","../../../scss/theme/_mixin.scss","../../../scss/theme/_variable.scss","common/_footer.scss","common/_menu.scss","components.css","components/_main.scss","../../../scss/shadow/_mixin.scss","components/_base.scss","../../../scss/shadow/_variable.scss","components.scss"],"names":[],"mappings":"AAEA,+BCiCI,yBC0CkC,ADzClC,qDAA8F,CD/B/F,AAHH,qCCiCI,WCyCgB,ADxChB,qCAA8F,CD3B7F,AGLL,eAEE,kBAAmB,CACpB,AAED,QACE,kBAAkB,AAClB,SAAS,AACT,WAAW,AACX,eAAe,AACf,qCDgQuB,AC/PvB,qBDwD+B,CCvDhC,ACbD,uCAEI,aAAc,CACf,AAHH,0BAKI,kBAAmB,CACpB,AANH,oCHiBI,cCbmB,ADcnB,kCAAqF,CGPpF,AAXL,qCAcM,uBAAuB,AHGzB,cCQ0B,ADP1B,0CAAqF,AADrF,yBCA4B,ADC5B,sDAAqF,CGSpF,AALkD,iDAtBvD,qCAyBQ,4DAAgE,CAEnE,CCqDJ,AC9ED,gBACE,cAAe,CAsChB,AAvCD,mBAII,iBAAkB,CACnB,AALH,mBAQI,gBAAiB,CAClB,AATH,mBAYI,iBAAkB,CACnB,AAbH,mBAgBI,kBAAmB,CACpB,AAjBH,4EAoBI,eAAgB,CACjB,AArBH,4JAyBM,WAAW,AACX,qBAAqB,AACrB,YAAY,AACZ,aAAa,AACb,mBAAmB,AACnB,mBAAmB,AACnB,sBAAsB,ALhBxB,mBCbmB,ADcnB,wCAAqF,AMLvF,2IDwB0D,CAEvD,AAIL,aACE,aAAa,AACb,cAAc,AACd,kBAAkB,AAClB,0BJgOuB,CI/NxB,AE9CD,qBAEI,aAAa,AACb,mBAAmB,AACnB,uBAAuB,AACvB,YAAY,AACZ,aAAa,AACb,aAAa,AACb,eAAe,AACf,iBAAiB,ADEnB,iGEX8B,CDW7B,AAXH,2BAcI,qBAAqB,AACrB,SAAS,AACT,gBAAgB,AAChB,eAAgB,CACjB,AAlBH,+BAqBI,WAAW,AACX,YAAY,AACZ,UAAU,AACV,kBAAkB,AAClB,eAAgB,CACjB,AA1BH,0DA6BI,MAAM,AACN,OAAO,AACP,WAAW,AACX,WAAY,CACb,AAjCH,6BAoCI,iBAAkB,CACnB,AArCH,uCAyCI,gCAAuC,CACxC,AA1CH,uCA6CI,oCAA2C,CAC5C,AAIH,6BAGI,aAAa,AACb,mBAAmB,AACnB,uBAAuB,AACvB,YAAY,AACZ,aAAa,AACb,mBAAmB,AACnB,kBAAkB,AAClB,sBN+MqB,AM9MrB,eNsNW,CMrNZ,AAGH,yBPlDI,cCbmB,ADcnB,mCAAqF,AMLvF,0HC4D0D,CAEvD,AARL,yBPlDI,cCbmB,ADcnB,mCAAqF,AMLvF,yIC4D0D,CAEvD,AARL,yBPlDI,cCbmB,ADcnB,mCAAqF,AMLvF,yIC4D0D,CAEvD,AARL,yBPlDI,cCbmB,ADcnB,mCAAqF,AMLvF,yIC4D0D,CAEvD,AARL,yBPlDI,cCbmB,ADcnB,mCAAqF,AMLvF,0IC4D0D,CAEvD,AARL,yBPlDI,cCbmB,ADcnB,mCAAqF,AMLvF,0IC4D0D,CAEvD,AARL,yBPlDI,cCbmB,ADcnB,mCAAqF,AMLvF,2IC4D0D,CAEvD,AARL,yBPlDI,cCbmB,ADcnB,mCAAqF,AMLvF,+IC4D0D,CAEvD,AARL,yBPlDI,cCbmB,ADcnB,mCAAqF,AMLvF,+IC4D0D,CAEvD,AARL,yBPlDI,cCbmB,ADcnB,mCAAqF,AMLvF,+IC4D0D,CAEvD,AARL,0BPlDI,cCbmB,ADcnB,mCAAqF,AMLvF,gJC4D0D,CAEvD,AARL,0BPlDI,cCbmB,ADcnB,mCAAqF,AMLvF,gJC4D0D,CAEvD,AARL,0BPlDI,cCbmB,ADcnB,mCAAqF,AMLvF,gJC4D0D,CAEvD,AARL,0BPlDI,cCbmB,ADcnB,mCAAqF,AMLvF,gJC4D0D,CAEvD,AARL,0BPlDI,cCbmB,ADcnB,mCAAqF,AMLvF,gJC4D0D,CAEvD,AARL,0BPlDI,cCbmB,ADcnB,mCAAqF,AMLvF,gJC4D0D,CAEvD,AARL,0BPlDI,cCbmB,ADcnB,mCAAqF,AMLvF,iJC4D0D,CAEvD,AARL,0BPlDI,cCbmB,ADcnB,mCAAqF,AMLvF,iJC4D0D,CAEvD,AARL,0BPlDI,cCbmB,ADcnB,mCAAqF,AMLvF,iJC4D0D,CAEvD,AARL,0BPlDI,cCbmB,ADcnB,mCAAqF,AMLvF,iJC4D0D,CAEvD,AARL,0BPlDI,cCbmB,ADcnB,mCAAqF,AMLvF,kJC4D0D,CAEvD,AARL,0BPlDI,cCbmB,ADcnB,mCAAqF,AMLvF,kJC4D0D,CAEvD,AARL,0BPlDI,cCbmB,ADcnB,mCAAqF,AMLvF,kJC4D0D,CAEvD,AARL,0BPlDI,cCbmB,ADcnB,mCAAqF,AMLvF,kJC4D0D,CAEvD,AARL,0BPlDI,cCbmB,ADcnB,mCAAqF,AMLvF,kJC4D0D,CAEvD,AE9DL,gBACE,gBAAgB,AAChB,+BAAmC,CAIpC,AAND,gCAII,eAAgB,CACjB,AAGH,yBACE,gBACE,QAAS,CAKV,AAND,wBAII,gBAAiB,CAClB,AAEH,gBACE,eAAe,AACf,SAAS,AACT,sCAA0C,CAK3C,AARD,gCAMI,YAAa,CACd,CLoWJ,AK/VD,SACE,0BAA8B,CAC/B,AAGD,0BAEI,WAAY,CACb,AAHH,2BAMI,YAAY,AACZ,gCAAoC,CACrC","file":"../components.css","sourcesContent":["@import \"../../../../scss/theme/mixin\";\n\n.drawer-toggle {\n  .icon-pure-menu {\n    @include theme-prop(color, secondary-on-dark);\n  }\n  &:hover {\n    .icon-pure-menu {\n      @include theme-prop(color, primary-on-dark);\n    }\n  }\n}\n","// theme mixin\n@import \"./variable\";\n@import \"./function\";\n\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $theme-property-values (_variables.scss).\n */\n\n// 给属性 $property 设置颜色 $style 值\n// 属性 $property 一般用在 color background-color border-color 等，也可用在任何可以设置颜色值的属性上\n// $style 应该是 $theme-property-values 中某个 key\n// 该 mixin 主要用来设置主题颜色值，并且设置了主题 css 变量值\n// 用户通过修改 css 变量值可以动态的修改整个主题值，比如在 body 上修改 css 变量值\n@mixin theme-color-prop($property, $style, $important) {\n  @if $important {\n    #{$property}: map-get($theme-property-values, $style) !important;\n    #{$property}: var(--theme-#{$style}, map-get($theme-property-values, $style)) !important;\n  } @else {\n    #{$property}: map-get($theme-property-values, $style);\n    #{$property}: var(--theme-#{$style}, map-get($theme-property-values, $style));\n  }\n}\n\n// 用来设置主题色对应的对比色调值，浅色还是深色\n// $style 应该是 $theme-tone-property-values 中某个 key\n// 该 mixin 除了设置了对比色调值，还设置了对应的 css 变量值\n@mixin theme-tone-prop($property, $style, $important) {\n  // 根据 $style 返回变量，主要是 light 或 dark 变量\n  $theme-var: theme-tone-var($style);\n  @if $important {\n    #{$property}: map-get($theme-tone-property-values, $style) !important;\n    #{$property}: var(--theme-#{$theme-var}, map-get($theme-tone-property-values, $style)) !important;\n  } @else {\n    #{$property}: map-get($theme-tone-property-values, $style);\n    #{$property}: var(--theme-#{$theme-var}, map-get($theme-tone-property-values, $style));\n  }\n}\n\n// 糅合 theme-color-prop 和 theme-tone-prop\n@mixin theme-prop($property, $style, $important: false) {\n  $color: map-get($theme-property-values, $style);\n  @if ($color) {\n    @include theme-color-prop($property, $style, $important);\n  } @else {\n    $color: map-get($theme-tone-property-values, $style);\n    @if ($color) {\n      @include theme-tone-prop($property, $style, $important);\n    } @else {\n      @error \"无效的主题属性值，#{$style} 必须是以下的某一 key #{map-keys($theme-property-values)}, #{map-keys($theme-tone-property-values)}\";\n    }\n  }\n}\n\n// 通过设置前后景来定制主题，该 mixin 只处理简单的 color 和 background-color ，对于更复制的需要组件单独定义\n// $style 指 $theme-property-values 或 $theme-assist-colors 中属性值\n// $fore true 指前景，false 指背景，默认 true\n@mixin theme($style, $fore: true) {\n  $themes: $theme-property-values;\n  $themes: map-merge($theme-assist-colors, $themes);\n  $color: map-get($themes, $style);\n\n  @if ($color == null) {\n    @error \"无效的主题属性值，#{$style} 必须是以下的某一 key #{map-keys($theme-property-values)}, #{map-keys($theme-assist-colors)}\";\n  }\n\n  // 色调，判断是深色还是浅色\n  $tone: theme-light-or-dark($color);\n\n  @if ($fore) {\n    color: $color;\n    color: var(--theme-#{$style}, $color);\n\n    background-color: map-get($theme-tone-property-values, primary-on-#{$tone});\n    background-color: var(--theme-#{$style}, map-get($theme-tone-property-values, primary-on-#{$tone}));\n  } @else {\n    color: map-get($theme-tone-property-values, primary-on-#{$tone});\n    color: var(--theme-#{$style}, map-get($theme-tone-property-values, primary-on-#{$tone}));\n\n    background-color: $color;\n    background-color: var(--theme-#{$style}, $color);\n  }\n}\n\n// 设置辅助颜色 mixin\n// 根据给定的 $style ($theme-assist-colors 中的 key) 和 $opacity 设置颜色\n@mixin theme-assist($property, $style, $opacity: 1) {\n  $color: map-get($theme-assist-colors, $style);\n\n  @if ($property == \"backgroud-color\" and $opacity != 1) {\n    // 变量 --theme-#{$style} 在 theme.scss 中定义\n    $css-var: var(--theme-#{$style}, $color);\n    background-color: rgba($color, $opacity);\n\n    // 可以动态的设置颜色透明度，属于 CSS 4 color 范畴，目前浏览器支持的不是很好\n    // 可以用 rgba 来代替，但只能静态设置，不可以随着颜色和透明度的变化动态设置\n    // https://drafts.csswg.org/css-color/#modifying-colors\n    @supports (background-color: color(green a(10%))) {\n      background-color: color(#{$css-var} a(#{percentage($opacity)}));\n    }\n  } @else {\n    #{$property}: rgba($color, $opacity);\n  }\n\n  // 因为不支持以下写法，所以只处理 $opacity == 1 的情况\n  // #{$property}: rgba(var(--theme-#{$style}, $color), $opacity);\n  @if ($opacity == 1) {\n    #{$property}: var(--theme-#{$style}, $color);\n  }\n}\n","// 自定义主题颜色\n@import \"./color_palette\";\n@import \"../base/variables/options\";\n@import \"./function\";\n\n// 主题颜色，换肤一般改变这三个基本颜色即可\n// 这三种基本颜色主题，会用在所有 CSS 组件上，\n$theme-primary: #2196f3 !default; // 主颜色，使用蓝色 $blue-500 #2196f3\n$theme-secondary: #e040fb !default; // 次颜色，也叫强调(accent)颜色，使用紫色 $purple-a-200 #e040fb\n$theme-background: #fff !default; // 背景颜色，默认白色\n\n// 主题颜色浅色\n$theme-primary-light: #64b5f6 !default; // 取 $blue-300\n$theme-secondary-light: #ea80fc !default; // 取 $purple-a-100\n\n// 主题颜色更浅色\n$theme-primary-lighter: #bbdefb !default; // 取 $blue-100\n$theme-secondary-lighter: #e1bee7 !default; // 取 $purple-100\n\n// 主题颜色最浅色\n$theme-primary-lightest: #e3f2fd !default; // 取 $blue-50\n$theme-secondary-lightest: #f3e5f5 !default; // 取 $purple-50\n\n// 主题颜色深色\n$theme-primary-dark: #1976d2 !default; // 取 $blue-700\n$theme-secondary-dark: #d500f9 !default; // 取 $purple-a-400\n\n// 主题颜色更深色\n$theme-primary-darker: #1565c0 !default; // 取 $blue-800\n$theme-secondary-darker: #aa00ff !default; // 取 $purple-a-700\n\n// 主题颜色最深色\n$theme-primary-darkest: #0d47a1 !default; // 取 $blue-900\n$theme-secondary-darkest: #4a148c !default; // 取 $purple-900\n\n// 浅色或深色色调，给出基本颜色的对比色调， light or dark\n$theme-primary-tone: theme-light-or-dark($theme-primary);\n$theme-secondary-tone: theme-light-or-dark($theme-secondary);\n\n// 主题颜色浅色对比色调\n$theme-primary-light-tone: theme-light-or-dark($theme-primary-light);\n$theme-secondary-light-tone: theme-light-or-dark($theme-secondary-light);\n\n// 主题颜色更浅色对比色调\n$theme-primary-lighter-tone: theme-light-or-dark($theme-primary-lighter);\n$theme-secondary-lighter-tone: theme-light-or-dark($theme-secondary-lighter);\n\n// 主题颜色最浅色对比色调\n$theme-primary-lightest-tone: theme-light-or-dark($theme-primary-lightest);\n$theme-secondary-lightest-tone: theme-light-or-dark($theme-secondary-lightest);\n\n// 主题颜色深色对比色调\n$theme-primary-dark-tone: theme-light-or-dark($theme-primary-dark);\n$theme-secondary-dark-tone: theme-light-or-dark($theme-secondary-dark);\n\n// 主题颜色更深色对比色调\n$theme-primary-darker-tone: theme-light-or-dark($theme-primary-darker);\n$theme-secondary-darker-tone: theme-light-or-dark($theme-secondary-darker);\n\n// 主题颜色最深色对比色调\n$theme-primary-darkest-tone: theme-light-or-dark($theme-primary-darkest);\n$theme-secondary-darkest-tone: theme-light-or-dark($theme-secondary-darkest);\n\n// 背景色对比色调\n$theme-background-tone: theme-light-or-dark($theme-background);\n\n// 定义文本默认颜色，默认颜色深色用黑色，浅色用白色\n// 分为基本颜色、次要颜色、提示性颜色和禁用颜色，分别用在基础颜色、过渡颜色、提示或暗色和表单 disabled readonly 以及其他禁用\n$theme-text-colors: (\n  dark: (\n    primary: rgba(0, 0, 0, .87),\n    secondary: rgba(0, 0, 0, .54),\n    hint: rgba(0, 0, 0, .38),\n    disabled: rgba(0, 0, 0, .38)\n  ),\n  light: (\n    primary: #ffffff,\n    secondary: rgba(255, 255, 255, .7),\n    hint: rgba(255, 255, 255, .5),\n    disabled: rgba(255, 255, 255, .5)\n  )\n);\n\n// 主题属性值\n$theme-property-values: (\n  // 主题颜色\n  primary: $theme-primary,\n  secondary: $theme-secondary,\n  background: $theme-background,\n\n  // 主题颜色浅色\n  primary-light: $theme-primary-light,\n  secondary-light: $theme-secondary-light,\n\n  // 主题颜色更浅色\n  primary-lighter: $theme-primary-lighter,\n  secondary-lighter: $theme-secondary-lighter,\n\n  // 主题颜色最浅色\n  primary-lightest: $theme-primary-lightest,\n  secondary-lightest: $theme-secondary-lightest,\n\n  // 主题颜色深色\n  primary-dark: $theme-primary-dark,\n  secondary-dark: $theme-secondary-dark,\n\n  // 主题颜色更深色\n  primary-darker: $theme-primary-darker,\n  secondary-darker: $theme-secondary-darker,\n\n  // 主题颜色最深色\n  primary-darkest: $theme-primary-darkest,\n  secondary-darkest: $theme-secondary-darkest,\n) !default;\n\n// 主题基本颜色对比色调值集合，根据主题基本颜色计算出对应的对比色调值，浅色还是深色色调值\n$theme-tone-property-values: (\n  // 可以用在 background-color border-color 或 color 等可以设置颜色的属性上\n  // 当 map-get($theme-text-colors, $theme-primary-tone) 返回 light 时，对应浅色值\n  // 当 map-get($theme-text-colors, $theme-primary-tone) 返回 dark 时，对应深色值\n\n  // 用在 $theme-primary 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary: map-get(map-get($theme-text-colors, $theme-primary-tone), primary),\n  secondary-on-primary: map-get(map-get($theme-text-colors, $theme-primary-tone), secondary),\n  hint-on-primary: map-get(map-get($theme-text-colors, $theme-primary-tone), hint),\n  disabled-on-primary: map-get(map-get($theme-text-colors, $theme-primary-tone), disabled),\n\n  // 用在 $theme-primary-light 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary-light: map-get(map-get($theme-text-colors, $theme-primary-light-tone), primary),\n  secondary-on-primary-light: map-get(map-get($theme-text-colors, $theme-primary-light-tone), secondary),\n  hint-on-primary-light: map-get(map-get($theme-text-colors, $theme-primary-light-tone), hint),\n  disabled-on-primary-light: map-get(map-get($theme-text-colors, $theme-primary-light-tone), disabled),\n\n  // 用在 $theme-primary-lighter 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary-lighter: map-get(map-get($theme-text-colors, $theme-primary-lighter-tone), primary),\n  secondary-on-primary-lighter: map-get(map-get($theme-text-colors, $theme-primary-lighter-tone), secondary),\n  hint-on-primary-lighter: map-get(map-get($theme-text-colors, $theme-primary-lighter-tone), hint),\n  disabled-on-primary-lighter: map-get(map-get($theme-text-colors, $theme-primary-lighter-tone), disabled),\n\n  // 用在 $theme-primary-lightest 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary-lightest: map-get(map-get($theme-text-colors, $theme-primary-lightest-tone), primary),\n  secondary-on-primary-lightest: map-get(map-get($theme-text-colors, $theme-primary-lightest-tone), secondary),\n  hint-on-primary-lightest: map-get(map-get($theme-text-colors, $theme-primary-lightest-tone), hint),\n  disabled-on-primary-lightest: map-get(map-get($theme-text-colors, $theme-primary-lightest-tone), disabled),\n\n  // 用在 $theme-primary-dark 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary-dark: map-get(map-get($theme-text-colors, $theme-primary-dark-tone), primary),\n  secondary-on-primary-dark: map-get(map-get($theme-text-colors, $theme-primary-dark-tone), secondary),\n  hint-on-primary-dark: map-get(map-get($theme-text-colors, $theme-primary-dark-tone), hint),\n  disabled-on-primary-dark: map-get(map-get($theme-text-colors, $theme-primary-dark-tone), disabled),\n\n  // 用在 $theme-primary-darker 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary-darker: map-get(map-get($theme-text-colors, $theme-primary-darker-tone), primary),\n  secondary-on-primary-darker: map-get(map-get($theme-text-colors, $theme-primary-darker-tone), secondary),\n  hint-on-primary-darker: map-get(map-get($theme-text-colors, $theme-primary-darker-tone), hint),\n  disabled-on-primary-darker: map-get(map-get($theme-text-colors, $theme-primary-darker-tone), disabled),\n\n  // 用在 $theme-primary-darkest 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary-darkest: map-get(map-get($theme-text-colors, $theme-primary-darkest-tone), primary),\n  secondary-on-primary-darkest: map-get(map-get($theme-text-colors, $theme-primary-darkest-tone), secondary),\n  hint-on-primary-darkest: map-get(map-get($theme-text-colors, $theme-primary-darkest-tone), hint),\n  disabled-on-primary-darkest: map-get(map-get($theme-text-colors, $theme-primary-darkest-tone), disabled),\n\n  // 用在 $theme-secondary 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary: map-get(map-get($theme-text-colors, $theme-secondary-tone), primary),\n  secondary-on-secondary: map-get(map-get($theme-text-colors, $theme-secondary-tone), secondary),\n  hint-on-secondary: map-get(map-get($theme-text-colors, $theme-secondary-tone), hint),\n  disabled-on-secondary: map-get(map-get($theme-text-colors, $theme-secondary-tone), disabled),\n\n  // 用在 $theme-secondary-light 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary-light: map-get(map-get($theme-text-colors, $theme-secondary-light-tone), primary),\n  secondary-on-secondary-light: map-get(map-get($theme-text-colors, $theme-secondary-light-tone), secondary),\n  hint-on-secondary-light: map-get(map-get($theme-text-colors, $theme-secondary-light-tone), hint),\n  disabled-on-secondary-light: map-get(map-get($theme-text-colors, $theme-secondary-light-tone), disabled),\n\n  // 用在 $theme-secondary-lighter 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary-lighter: map-get(map-get($theme-text-colors, $theme-secondary-lighter-tone), primary),\n  secondary-on-secondary-lighter: map-get(map-get($theme-text-colors, $theme-secondary-lighter-tone), secondary),\n  hint-on-secondary-lighter: map-get(map-get($theme-text-colors, $theme-secondary-lighter-tone), hint),\n  disabled-on-secondary-lighter: map-get(map-get($theme-text-colors, $theme-secondary-lighter-tone), disabled),\n\n  // 用在 $theme-secondary-lightest 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary-lightest: map-get(map-get($theme-text-colors, $theme-secondary-lightest-tone), primary),\n  secondary-on-secondary-lightest: map-get(map-get($theme-text-colors, $theme-secondary-lightest-tone), secondary),\n  hint-on-secondary-lightest: map-get(map-get($theme-text-colors, $theme-secondary-lightest-tone), hint),\n  disabled-on-secondary-lightest: map-get(map-get($theme-text-colors, $theme-secondary-lightest-tone), disabled),\n\n  // 用在 $theme-secondary-dark 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary-dark: map-get(map-get($theme-text-colors, $theme-secondary-dark-tone), primary),\n  secondary-on-secondary-dark: map-get(map-get($theme-text-colors, $theme-secondary-dark-tone), secondary),\n  hint-on-secondary-dark: map-get(map-get($theme-text-colors, $theme-secondary-dark-tone), hint),\n  disabled-on-secondary-dark: map-get(map-get($theme-text-colors, $theme-secondary-dark-tone), disabled),\n\n  // 用在 $theme-secondary-darker 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary-darker: map-get(map-get($theme-text-colors, $theme-secondary-darker-tone), primary),\n  secondary-on-secondary-darker: map-get(map-get($theme-text-colors, $theme-secondary-darker-tone), secondary),\n  hint-on-secondary-darker: map-get(map-get($theme-text-colors, $theme-secondary-darker-tone), hint),\n  disabled-on-secondary-darker: map-get(map-get($theme-text-colors, $theme-secondary-darker-tone), disabled),\n\n  // 用在 $theme-secondary-darkest 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary-darkest: map-get(map-get($theme-text-colors, $theme-secondary-darkest-tone), primary),\n  secondary-on-secondary-darkest: map-get(map-get($theme-text-colors, $theme-secondary-darkest-tone), secondary),\n  hint-on-secondary-darkest: map-get(map-get($theme-text-colors, $theme-secondary-darkest-tone), hint),\n  disabled-on-secondary-darkest: map-get(map-get($theme-text-colors, $theme-secondary-darkest-tone), disabled),\n\n  // 用在 $theme-background 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-background: map-get(map-get($theme-text-colors, $theme-background-tone), primary),\n  secondary-on-background: map-get(map-get($theme-text-colors, $theme-background-tone), secondary),\n  hint-on-background: map-get(map-get($theme-text-colors, $theme-background-tone), hint),\n  disabled-on-background: map-get(map-get($theme-text-colors, $theme-background-tone), disabled),\n\n  // 用在浅色主题上的 primary secondary hint 和 disabled 对比色调，浅色主题用深色对比色调\n  primary-on-light: map-get(map-get($theme-text-colors, dark), primary),\n  secondary-on-light: map-get(map-get($theme-text-colors, dark), secondary),\n  hint-on-light: map-get(map-get($theme-text-colors, dark), hint),\n  disabled-on-light: map-get(map-get($theme-text-colors, dark), disabled),\n\n  // 用在深色主题上的 primary secondary hint 和 disabled 对比颜色，深色主题用浅色对比色调\n  primary-on-dark: map-get(map-get($theme-text-colors, light), primary),\n  secondary-on-dark: map-get(map-get($theme-text-colors, light), secondary),\n  hint-on-dark: map-get(map-get($theme-text-colors, light), hint),\n  disabled-on-dark: map-get(map-get($theme-text-colors, light), disabled)\n) !default;\n\n// 除了三种基本颜色外，又定义了成功 success 、信息 info、警告 warning 、错误 error 四种辅助颜色，\n// 这四种颜色主要用在背景，文本，按钮等上，用来区分文本颜色和背景，以及表单样式（比如校验失败和成功的颜色）等\n$theme-assist: (\"success\", \"info\", \"warning\", \"error\") !default;\n\n// 辅助颜色值\n$theme-assist-colors: (\n  success: #4caf50, // $green-500\n  info: #00bcd4, // $cyan-500\n  warning: #ff9800, // $orange-500\n  error: #f44336, // $red-500\n\n  // 辅助颜色浅色\n  success-light: #c8e6c9, // $green-100\n  info-light: #b2ebf2, // $cyan-100\n  warning-light: #ffe0b2, // $orange-100\n  error-light: #ffcdd2, // $red-100\n\n  // 辅助颜色深色\n  success-dark: #388e3c, // $green-700\n  info-dark: #0097a7, // $cyan-700\n  warning-dark: #f57c00, // $orange-700\n  error-dark: #d32f2f, // $red-700\n) !default;\n\n// 常用灰色颜色，提供了黑色透明度和灰色本身颜色两种方案，根据配置项 $enable-transparent 来选择其中一种方案\n// 默认使用黑色透明度，可以通过修改 base/variables/_options.scss 中变量 $enable-transparent 来选择不同的方案\n\n// 灰色颜色，对于灰色颜色，这里没有采用 css 变量处理\n$greys: (\n  50: #fafafa,\n  100: #f5f5f5,\n  200: #eeeeee,\n  300: #e0e0e0,\n  400: #bdbdbd,\n  500: #9e9e9e,\n  600: #757575,\n  700: #616161,\n  800: #424242,\n  900: #212121\n) !default;\n\n// 灰色透明色\n$greys-transparent: (\n  50: rgba(0, 0, 0, .02), // 相当于 #fafafa;\n  100: rgba(0, 0, 0, .04), // 相当于 #f5f5f5\n  200: rgba(0, 0, 0, .065), // 相当于 #eeeeee\n  300: rgba(0, 0, 0, .12), // 相当于 #e0e0e0\n  400: rgba(0, 0, 0, .26), // 相当于 #bdbdbd\n  500: rgba(0, 0, 0, .38), // 相当于 #9e9e9e\n  600: rgba(0, 0, 0, .54), // 相当于 #757575\n  700: rgba(0, 0, 0, .62), // 相当于 #616161\n  800: rgba(0, 0, 0, .74), // 相当于 #424242\n  900: rgba(0, 0, 0, .87) // 相当于 #212121\n) !default;\n\n// 白色、黑色和透明色\n$white: #ffffff !default;\n$black: #000000 !default;\n$transparent: rgba(0, 0, 0, 0) !default; // 透明色\n\n$grey-color-50: if($enable-transparent, map-get($greys-transparent, 50), map-get($greys, 50)) !default;\n$grey-color-100: if($enable-transparent, map-get($greys-transparent, 100), map-get($greys, 100)) !default;\n$grey-color-200: if($enable-transparent, map-get($greys-transparent, 200), map-get($greys, 200)) !default;\n$grey-color-300: if($enable-transparent, map-get($greys-transparent, 300), map-get($greys, 300)) !default;\n$grey-color-400: if($enable-transparent, map-get($greys-transparent, 400), map-get($greys, 400)) !default;\n$grey-color-500: if($enable-transparent, map-get($greys-transparent, 500), map-get($greys, 500)) !default;\n$grey-color-600: if($enable-transparent, map-get($greys-transparent, 600), map-get($greys, 600)) !default;\n$grey-color-700: if($enable-transparent, map-get($greys-transparent, 700), map-get($greys, 700)) !default;\n$grey-color-800: if($enable-transparent, map-get($greys-transparent, 800), map-get($greys, 800)) !default;\n$grey-color-900: if($enable-transparent, map-get($greys-transparent, 900), map-get($greys, 900)) !default;\n","// 页面底部样式\n\n@import \"../../../../scss/theme/variable\";\n\n.footer-assist {\n  // 此处的数值等于 footer 的高度 + 预留的间距\n  padding-top: 4.5rem;\n}\n\n.footer {\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  padding: 1rem 0;\n  border-top: 1px solid $grey-color-300;\n  color: map-get(map-get($theme-text-colors, dark), secondary);\n}\n\n","@import \"../../../../scss/theme/variable\";\n@import \"../../../../scss/theme/mixin\";\n\n.perfect-menu {\n  &.menu, .menu {\n    margin-left: 0;\n  }\n  .menu-title {\n    padding: .5rem 1rem;\n  }\n\n  .menu-sub-title {\n    &:hover {\n      @include theme-prop(color, primary);\n    }\n\n    &.active {\n      border-right: 3px solid;\n      @include theme-prop(color, primary-darker);\n      @include theme-prop(background-color, primary-lightest);\n\n      // 可以动态的设置颜色透明度，属于 CSS 4 color 范畴，目前浏览器都不支持\n      // 可以用 rgba 来代替，但只能静态设置，不可以随着颜色和透明度的变化动态设置\n      // https://drafts.csswg.org/css-color/#modifying-colors\n      // https://www.w3cplus.com/css4/color-mod.html\n      @supports (background-color: color(green a(10%))) {\n        $bg-color: var(--theme-primary-lightest);\n        $opacity: .8;\n        background-color: color(#{$bg-color} a(#{percentage($opacity)}));\n      }\n    }\n  }\n}\n\n","@charset \"UTF-8\";\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $theme-property-values (_variables.scss).\n */\n.drawer-toggle .icon-pure-menu {\n  color: rgba(255, 255, 255, 0.7);\n  color: var(--theme-light-secondary, rgba(255, 255, 255, 0.7));\n}\n\n.drawer-toggle:hover .icon-pure-menu {\n  color: #ffffff;\n  color: var(--theme-light-primary, #ffffff);\n}\n\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n.footer-assist {\n  padding-top: 4.5rem;\n}\n\n.footer {\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  padding: 1rem 0;\n  border-top: 1px solid rgba(0, 0, 0, 0.12);\n  color: rgba(0, 0, 0, 0.54);\n}\n\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $theme-property-values (_variables.scss).\n */\n.perfect-menu.menu, .perfect-menu .menu {\n  margin-left: 0;\n}\n\n.perfect-menu .menu-title {\n  padding: .5rem 1rem;\n}\n\n.perfect-menu .menu-sub-title:hover {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n}\n\n.perfect-menu .menu-sub-title.active {\n  border-right: 3px solid;\n  color: #1565c0;\n  color: var(--theme-primary-darker, #1565c0);\n  background-color: #e3f2fd;\n  background-color: var(--theme-primary-lightest, #e3f2fd);\n}\n\n@supports (background-color: color(green a(10%))) {\n  .perfect-menu .menu-sub-title.active {\n    background-color: color(var(--theme-primary-lightest) a(80%));\n  }\n}\n\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $theme-property-values (_variables.scss).\n */\n.component-wrap {\n  padding: 1.5rem;\n}\n\n.component-wrap h1 {\n  font-size: 1.75rem;\n}\n\n.component-wrap h2 {\n  font-size: 1.5rem;\n}\n\n.component-wrap h3 {\n  font-size: 1.25rem;\n}\n\n.component-wrap h4 {\n  font-size: 1.125rem;\n}\n\n.component-wrap h1, .component-wrap h2, .component-wrap h3, .component-wrap h4 {\n  margin-top: 2rem;\n}\n\n.component-wrap h1::before, .component-wrap h2::before, .component-wrap h3::before, .component-wrap h4::before, .component-wrap h5::before, .component-wrap h6::before {\n  content: \"\";\n  display: inline-block;\n  width: .5rem;\n  height: .5rem;\n  margin-top: -.25rem;\n  margin-right: .5rem;\n  vertical-align: middle;\n  background: #2196f3;\n  background: var(--theme-primary, #2196f3);\n  box-shadow: 0 3px 5px -1px var(--theme-primary-lighter), 0 6px 10px 0 var(--theme-primary-lighter), 0 1px 18px 0 var(--theme-primary-lightest);\n}\n\n.icon-circle {\n  width: 1.5rem;\n  height: 1.5rem;\n  border-radius: 50%;\n  background: rgba(0, 0, 0, 0.62);\n}\n\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $theme-property-values (_variables.scss).\n */\n.ripple-demo .ripple {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 200px;\n  height: 100px;\n  padding: 1rem;\n  cursor: pointer;\n  user-select: none;\n  box-shadow: 0 3px 5px -1px rgba(0, 0, 0, 0.2), 0 5px 8px 0 rgba(0, 0, 0, 0.14), 0 1px 14px 0 rgba(0, 0, 0, 0.12);\n}\n\n.ripple-demo button.ripple {\n  display: inline-block;\n  border: 0;\n  background: none;\n  appearance: none;\n}\n\n.ripple-demo .ripple-unbounded {\n  width: 40px;\n  height: 40px;\n  padding: 0;\n  border-radius: 50%;\n  box-shadow: none;\n}\n\n.ripple-demo .ripple-unbounded:not(.ripple-impact)::before {\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n\n.ripple-demo .d-flex .ripple {\n  margin-right: 2rem;\n}\n\n.ripple-demo .ripple-custom1.ripple-bg {\n  --ripple-bg-color: rgba(0, 0, 0, 0.2);\n}\n\n.ripple-demo .ripple-custom2.ripple-bg {\n  --ripple-bg-color: rgba(3, 185, 244, 0.2);\n}\n\n.shadow-wrap [class*=\"shadow\"] {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 200px;\n  height: 100px;\n  margin: 0 40px 60px;\n  border-radius: 3px;\n  color: rgba(0, 0, 0, 0.38);\n  background: #ffffff;\n}\n\n.shadow-custom .shadow-0 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 0 0 0 var(--theme-primary-lighter), 0 0 0 0 var(--theme-primary-lighter), 0 0 0 0 var(--theme-primary-lightest);\n}\n\n.shadow-custom .shadow-1 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 2px 1px -1px var(--theme-primary-lighter), 0 1px 1px 0 var(--theme-primary-lighter), 0 1px 3px 0 var(--theme-primary-lightest);\n}\n\n.shadow-custom .shadow-2 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 3px 1px -2px var(--theme-primary-lighter), 0 2px 2px 0 var(--theme-primary-lighter), 0 1px 5px 0 var(--theme-primary-lightest);\n}\n\n.shadow-custom .shadow-3 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 3px 3px -2px var(--theme-primary-lighter), 0 3px 4px 0 var(--theme-primary-lighter), 0 1px 8px 0 var(--theme-primary-lightest);\n}\n\n.shadow-custom .shadow-4 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 2px 4px -1px var(--theme-primary-lighter), 0 4px 5px 0 var(--theme-primary-lighter), 0 1px 10px 0 var(--theme-primary-lightest);\n}\n\n.shadow-custom .shadow-5 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 3px 5px -1px var(--theme-primary-lighter), 0 5px 8px 0 var(--theme-primary-lighter), 0 1px 14px 0 var(--theme-primary-lightest);\n}\n\n.shadow-custom .shadow-6 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 3px 5px -1px var(--theme-primary-lighter), 0 6px 10px 0 var(--theme-primary-lighter), 0 1px 18px 0 var(--theme-primary-lightest);\n}\n\n.shadow-custom .shadow-7 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 4px 5px -2px var(--theme-primary-lighter), 0 7px 10px 1px var(--theme-primary-lighter), 0 2px 16px 1px var(--theme-primary-lightest);\n}\n\n.shadow-custom .shadow-8 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 5px 5px -3px var(--theme-primary-lighter), 0 8px 10px 1px var(--theme-primary-lighter), 0 3px 14px 2px var(--theme-primary-lightest);\n}\n\n.shadow-custom .shadow-9 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 5px 6px -3px var(--theme-primary-lighter), 0 9px 12px 1px var(--theme-primary-lighter), 0 3px 16px 2px var(--theme-primary-lightest);\n}\n\n.shadow-custom .shadow-10 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 6px 6px -3px var(--theme-primary-lighter), 0 10px 14px 1px var(--theme-primary-lighter), 0 4px 18px 3px var(--theme-primary-lightest);\n}\n\n.shadow-custom .shadow-11 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 6px 7px -4px var(--theme-primary-lighter), 0 11px 15px 1px var(--theme-primary-lighter), 0 4px 20px 3px var(--theme-primary-lightest);\n}\n\n.shadow-custom .shadow-12 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 7px 8px -4px var(--theme-primary-lighter), 0 12px 17px 2px var(--theme-primary-lighter), 0 5px 22px 4px var(--theme-primary-lightest);\n}\n\n.shadow-custom .shadow-13 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 7px 8px -4px var(--theme-primary-lighter), 0 13px 19px 2px var(--theme-primary-lighter), 0 5px 24px 4px var(--theme-primary-lightest);\n}\n\n.shadow-custom .shadow-14 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 7px 9px -4px var(--theme-primary-lighter), 0 14px 21px 2px var(--theme-primary-lighter), 0 5px 26px 4px var(--theme-primary-lightest);\n}\n\n.shadow-custom .shadow-15 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 8px 9px -5px var(--theme-primary-lighter), 0 15px 22px 2px var(--theme-primary-lighter), 0 6px 28px 5px var(--theme-primary-lightest);\n}\n\n.shadow-custom .shadow-16 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 8px 10px -5px var(--theme-primary-lighter), 0 16px 24px 2px var(--theme-primary-lighter), 0 6px 30px 5px var(--theme-primary-lightest);\n}\n\n.shadow-custom .shadow-17 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 8px 11px -5px var(--theme-primary-lighter), 0 17px 26px 2px var(--theme-primary-lighter), 0 6px 32px 5px var(--theme-primary-lightest);\n}\n\n.shadow-custom .shadow-18 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 9px 11px -5px var(--theme-primary-lighter), 0 18px 28px 2px var(--theme-primary-lighter), 0 7px 34px 6px var(--theme-primary-lightest);\n}\n\n.shadow-custom .shadow-19 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 9px 12px -6px var(--theme-primary-lighter), 0 19px 29px 2px var(--theme-primary-lighter), 0 7px 36px 6px var(--theme-primary-lightest);\n}\n\n.shadow-custom .shadow-20 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 10px 13px -6px var(--theme-primary-lighter), 0 20px 31px 3px var(--theme-primary-lighter), 0 8px 38px 7px var(--theme-primary-lightest);\n}\n\n.shadow-custom .shadow-21 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 10px 13px -6px var(--theme-primary-lighter), 0 21px 33px 3px var(--theme-primary-lighter), 0 8px 40px 7px var(--theme-primary-lightest);\n}\n\n.shadow-custom .shadow-22 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 10px 14px -6px var(--theme-primary-lighter), 0 22px 35px 3px var(--theme-primary-lighter), 0 8px 42px 7px var(--theme-primary-lightest);\n}\n\n.shadow-custom .shadow-23 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 11px 14px -7px var(--theme-primary-lighter), 0 23px 36px 3px var(--theme-primary-lighter), 0 9px 44px 8px var(--theme-primary-lightest);\n}\n\n.shadow-custom .shadow-24 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 11px 15px -7px var(--theme-primary-lighter), 0 24px 38px 3px var(--theme-primary-lighter), 0 9px 46px 8px var(--theme-primary-lightest);\n}\n\n.component-list {\n  max-width: 720px;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n}\n\n.component-list + .component-list {\n  margin-top: 1rem;\n}\n\n@media (max-width: 720px) {\n  .component-wrap {\n    margin: 0;\n  }\n  .component-wrap section {\n    padding: 1.5rem 0;\n  }\n  .component-list {\n    max-width: none;\n    border: 0;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n  }\n  .component-list + .component-list {\n    margin-top: 0;\n  }\n}\n\n.grey-bg {\n  background: rgba(0, 0, 0, 0.26);\n}\n\n.component-container .btn {\n  margin: 1rem;\n}\n\n.component-container > .menu {\n  width: 400px;\n  border: 1px solid rgba(0, 0, 0, 0.26);\n}\n","@import \"../../../../scss/theme/variable\";\n@import \"../../../../scss/theme/mixin\";\n@import \"../../../../scss/shadow/mixin\";\n\n// 基础样式\n.component-wrap {\n  padding: 1.5rem;\n\n  h1 {\n    font-size: 1.75rem;\n  }\n\n  h2 {\n    font-size: 1.5rem;\n  }\n\n  h3 {\n    font-size: 1.25rem;\n  }\n\n  h4 {\n    font-size: 1.125rem;\n  }\n\n  h1, h2, h3, h4 {\n    margin-top: 2rem;\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    &::before {\n      content: \"\";\n      display: inline-block;\n      width: .5rem;\n      height: .5rem;\n      margin-top: -.25rem;\n      margin-right: .5rem;\n      vertical-align: middle;\n      @include theme-prop(background, primary);\n      @include shadow(6, $shadow-umbra-color: var(--theme-primary-lighter),\n        $shadow-penumbra-color: var(--theme-primary-lighter),\n        $shadow-ambient-color: var(--theme-primary-lightest)\n      );\n    }\n  }\n}\n\n.icon-circle {\n  width: 1.5rem;\n  height: 1.5rem;\n  border-radius: 50%;\n  background: $grey-color-700;\n}\n\n","@import \"./variable\";\n@import \"./function\";\n\n// box shadow 属性值，支持修改颜色值\n@mixin shadow($z-value, $shadow-umbra-color: $shadow-umbra-color,\n  $shadow-penumbra-color: $shadow-penumbra-color,\n  $shadow-ambient-color: $shadow-ambient-color) {\n\n  @if type-of($z-value) != number or not unitless($z-value) {\n    @error \"$z-value 必须是无单位数值\";\n  }\n\n  @if $z-value < 0 or $z-value > 24 {\n    @error \"$z-value must be between 0 and 24\";\n  }\n\n  box-shadow: #{map-get($shadow-umbra-map, $z-value)} #{$shadow-umbra-color},\n  #{map-get($shadow-penumbra-map, $z-value)} #{$shadow-penumbra-color},\n  #{map-get($shadow-ambient-map, $z-value)} $shadow-ambient-color;\n}\n\n// 动画效果\n@mixin shadow-transition(\n  $duration: $shadow-transition-duration,\n  $easing: $shadow-transition-timing-function) {\n  transition: shadow-transition-rule($duration, $easing);\n  will-change: box-shadow;\n}\n","@import \"../../../../scss/theme/variable\";\n@import \"../../../../scss/shadow/mixin\";\n@import \"../../../../scss/theme/mixin\";\n\n// ripple\n.ripple-demo {\n  .ripple {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 200px;\n    height: 100px;\n    padding: 1rem;\n    cursor: pointer;\n    user-select: none;\n    @include shadow(5);\n  }\n\n  button.ripple {\n    display: inline-block;\n    border: 0;\n    background: none;\n    appearance: none;\n  }\n\n  .ripple-unbounded {\n    width: 40px;\n    height: 40px;\n    padding: 0;\n    border-radius: 50%;\n    box-shadow: none;\n  }\n\n  .ripple-unbounded:not(.ripple-impact)::before {\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n\n  .d-flex .ripple {\n    margin-right: 2rem;\n  }\n\n  // 用 css 变量改变背景\n  .ripple-custom1.ripple-bg {\n    #{--ripple-bg-color}: rgba(0, 0, 0, .2);\n  }\n\n  .ripple-custom2.ripple-bg {\n    #{--ripple-bg-color}: rgba(3, 185, 244, .2);\n  }\n}\n\n// shadow\n.shadow-wrap {\n\n  [class*=\"shadow\"] {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 200px;\n    height: 100px;\n    margin: 0 40px 60px;\n    border-radius: 3px;\n    color: $grey-color-500;\n    background: $white;\n  }\n}\n\n.shadow-custom {\n  @for $z-value from 0 through 24 {\n    .shadow-#{$z-value} {\n      @include theme-prop(color, primary);\n      @include shadow($z-value, $shadow-umbra-color: var(--theme-primary-lighter),\n        $shadow-penumbra-color: var(--theme-primary-lighter),\n        $shadow-ambient-color: var(--theme-primary-lightest)\n      );\n    }\n  }\n}\n","\n@import \"../animation/variable\";\n\n$shadow-umbra-color: rgba(#000, .2);\n$shadow-penumbra-color: rgba(#000, .14);\n$shadow-ambient-color: rgba(#000, .12);\n\n// 本影\n$shadow-umbra-map: (\n  0: \"0 0 0 0\",\n  1: \"0 2px 1px -1px\",\n  2: \"0 3px 1px -2px\",\n  3: \"0 3px 3px -2px\",\n  4: \"0 2px 4px -1px\",\n  5: \"0 3px 5px -1px\",\n  6: \"0 3px 5px -1px\",\n  7: \"0 4px 5px -2px\",\n  8: \"0 5px 5px -3px\",\n  9: \"0 5px 6px -3px\",\n  10: \"0 6px 6px -3px\",\n  11: \"0 6px 7px -4px\",\n  12: \"0 7px 8px -4px\",\n  13: \"0 7px 8px -4px\",\n  14: \"0 7px 9px -4px\",\n  15: \"0 8px 9px -5px\",\n  16: \"0 8px 10px -5px\",\n  17: \"0 8px 11px -5px\",\n  18: \"0 9px 11px -5px\",\n  19: \"0 9px 12px -6px\",\n  20: \"0 10px 13px -6px\",\n  21: \"0 10px 13px -6px\",\n  22: \"0 10px 14px -6px\",\n  23: \"0 11px 14px -7px\",\n  24: \"0 11px 15px -7px\"\n);\n\n// 半影\n$shadow-penumbra-map: (\n  0: \"0 0 0 0\",\n  1: \"0 1px 1px 0\",\n  2: \"0 2px 2px 0\",\n  3: \"0 3px 4px 0\",\n  4: \"0 4px 5px 0\",\n  5: \"0 5px 8px 0\",\n  6: \"0 6px 10px 0\",\n  7: \"0 7px 10px 1px\",\n  8: \"0 8px 10px 1px\",\n  9: \"0 9px 12px 1px\",\n  10: \"0 10px 14px 1px\",\n  11: \"0 11px 15px 1px\",\n  12: \"0 12px 17px 2px\",\n  13: \"0 13px 19px 2px\",\n  14: \"0 14px 21px 2px\",\n  15: \"0 15px 22px 2px\",\n  16: \"0 16px 24px 2px\",\n  17: \"0 17px 26px 2px\",\n  18: \"0 18px 28px 2px\",\n  19: \"0 19px 29px 2px\",\n  20: \"0 20px 31px 3px\",\n  21: \"0 21px 33px 3px\",\n  22: \"0 22px 35px 3px\",\n  23: \"0 23px 36px 3px\",\n  24: \"0 24px 38px 3px\"\n);\n\n// 全影\n$shadow-ambient-map: (\n  0: \"0 0 0 0\",\n  1: \"0 1px 3px 0\",\n  2: \"0 1px 5px 0\",\n  3: \"0 1px 8px 0\",\n  4: \"0 1px 10px 0\",\n  5: \"0 1px 14px 0\",\n  6: \"0 1px 18px 0\",\n  7: \"0 2px 16px 1px\",\n  8: \"0 3px 14px 2px\",\n  9: \"0 3px 16px 2px\",\n  10: \"0 4px 18px 3px\",\n  11: \"0 4px 20px 3px\",\n  12: \"0 5px 22px 4px\",\n  13: \"0 5px 24px 4px\",\n  14: \"0 5px 26px 4px\",\n  15: \"0 6px 28px 5px\",\n  16: \"0 6px 30px 5px\",\n  17: \"0 6px 32px 5px\",\n  18: \"0 7px 34px 6px\",\n  19: \"0 7px 36px 6px\",\n  20: \"0 8px 38px 7px\",\n  21: \"0 8px 40px 7px\",\n  22: \"0 8px 42px 7px\",\n  23: \"0 9px 44px 8px\",\n  24: \"0 9px 46px 8px\"\n);\n\n// 动画持续时间\n$shadow-transition-duration: 280ms !default;\n\n// 默认动画 function\n$shadow-transition-timing-function: $animation-ease-in-out !default;\n","\n// header\n@import \"common/header\";\n\n// 底部样式\n@import \"common/footer\";\n\n// 左侧菜单\n@import \"common/menu\";\n\n// 基础样式\n@import \"components/main\";\n\n// 功能性样式\n@import \"components/base\";\n\n.component-list {\n  max-width: 720px;\n  border: 1px solid rgba(0, 0, 0, .2);\n  + .component-list {\n    margin-top: 1rem;\n  }\n}\n\n@media (max-width: 720px) {\n  .component-wrap {\n    margin: 0;\n\n    section {\n      padding: 1.5rem 0;\n    }\n  }\n  .component-list {\n    max-width: none;\n    border: 0;\n    border-bottom: 1px solid rgba(0, 0, 0, .2);\n\n    + .component-list {\n      margin-top: 0;\n    }\n  }\n}\n\n// 灰色小图标例子\n.grey-bg {\n  background: rgba(0, 0, 0, .26);\n}\n\n// button demo style\n.component-container {\n  .btn {\n    margin: 1rem;\n  }\n\n  > .menu {\n    width: 400px;\n    border: 1px solid rgba(0, 0, 0, .26);\n  }\n}\n"]}