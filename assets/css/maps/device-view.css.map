{"version":3,"sources":["device-view.css","../../../scss/theme/_function.scss","device-view.scss","../../../scss/theme/_variable.scss"],"names":[],"mappings":"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","file":"../device-view.css","sourcesContent":["@charset \"UTF-8\";\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\nbody {\n  padding: 0;\n  margin: 0;\n  overflow: hidden;\n}\n\ndevice-resizer {\n  position: relative;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  overflow: hidden;\n  color: rgba(0, 0, 0, 0.74);\n  background: rgba(0, 0, 0, 0.02);\n}\n\n.device-header {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  padding: .5rem 1.25rem;\n  overflow: hidden;\n  background: #ffffff;\n}\n\n.device-brand {\n  cursor: pointer;\n}\n\n.brand-icon {\n  display: inline-block;\n  width: 26px;\n  height: 26px;\n  background: url(\"../images/perfect-logo-tiny.png\") no-repeat;\n  background-size: 100%;\n  vertical-align: middle;\n}\n\n.brand-name {\n  display: inline-block;\n  height: 2.25rem;\n  margin-left: .75rem;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 2.25rem;\n}\n\n.device-url-container {\n  display: flex;\n  flex-direction: row;\n  width: 400px;\n  height: 1.5rem;\n  padding: .375rem;\n  border-radius: 2px;\n  background: #eee;\n  cursor: pointer;\n  fill: currentColor;\n}\n\n.device-url-icon [class*=\"icon-pure-\"] {\n  color: rgba(0, 0, 0, 0.87);\n  transform: scale(0.8);\n}\n\n.device-url-input {\n  width: 100%;\n  padding-left: 1rem;\n  border: 0;\n  font-size: .875rem;\n  background: inherit;\n  outline: 0;\n}\n\n.device-select {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n}\n\n.device-icon {\n  margin: 6px 12px;\n  cursor: pointer;\n}\n\n.device-icon [class*=\"icon-pure-\"] {\n  transform: scale(0.9);\n}\n\n.device-selector-wrapper {\n  position: relative;\n  height: 1rem;\n  border-top: 1px solid rgba(0, 0, 0, 0.12);\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12);\n  font-weight: 500;\n  color: rgba(0, 0, 0, 0.87);\n  background: #ffffff;\n  white-space: nowrap;\n}\n\n.device-selector-topbar {\n  position: absolute;\n  left: -100px;\n  right: -100px;\n}\n\n.device-selector-item {\n  position: absolute;\n  left: 0;\n  right: 0;\n  box-sizing: border-box;\n  height: 1rem;\n  margin-left: auto;\n  margin-right: auto;\n  border-left: 1px solid rgba(0, 0, 0, 0.12);\n  border-right: 1px solid rgba(0, 0, 0, 0.12);\n  font-size: .75rem;\n  font-weight: 500;\n  line-height: 1rem;\n  color: #fff;\n  cursor: pointer;\n}\n\n.device-selector-item:focus, .device-selector-item:hover, .device-selector-item.active {\n  background: rgba(0, 0, 0, 0.065);\n}\n\n.device-selector-item > .size {\n  margin-left: 4px;\n  margin-right: 4px;\n  color: rgba(0, 0, 0, 0.54);\n}\n\n.device-selector-item > .left {\n  float: left;\n}\n\n.device-selector-item > .right {\n  float: right;\n}\n\n.device-selector-label {\n  position: absolute;\n  left: 50%;\n  width: 200px;\n  margin-left: -100px;\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 1rem;\n  color: #212121;\n  text-align: center;\n  pointer-events: none;\n}\n\ndevice-view {\n  position: relative;\n  display: block;\n}\n\ndevice-view[device=\"handset\"] {\n  border-width: 60px 16px;\n  border-style: solid;\n  border-color: #999;\n  border-radius: 36px;\n}\n\ndevice-view[device=\"handset\"][landscape] {\n  border-width: 16px 60px;\n}\n\n.device-container {\n  position: relative;\n  display: flex;\n  flex-grow: 1;\n  align-items: center;\n  overflow: auto;\n}\n\n.device-list {\n  margin: auto;\n}\n\n.device-list > device-view {\n  display: none;\n}\n\n.device-list[view=\"all\"] {\n  position: relative;\n  display: block;\n  width: 100%;\n  max-width: 1400px;\n  height: calc(904px * .5);\n  margin: 0 auto;\n}\n\n.device-list[view=\"all\"] > device-view {\n  bottom: 0;\n  box-sizing: content-box;\n  display: block;\n  transform: scale(0.5);\n}\n\n.device-list[view=\"all\"] > device-view[device=\"window\"] {\n  position: static;\n  width: 1366px;\n  height: 800px;\n  margin-left: 10%;\n  border-width: 24px 24px 80px;\n  border-style: solid;\n  border-color: #666;\n  border-radius: 6px;\n  transform-origin: top left;\n}\n\n.device-list[view=\"all\"] > device-view[device=\"window\"]::after {\n  content: \"\";\n  position: absolute;\n  bottom: -56px;\n  left: -140px;\n  right: -140px;\n  display: block;\n  height: 56px;\n  margin: -24px;\n  border-bottom-left-radius: 12px;\n  border-bottom-right-radius: 12px;\n  background: #666;\n}\n\n.device-list[view=\"all\"] > device-view[device=\"table\"] {\n  position: absolute;\n  right: 17%;\n  width: 1024px;\n  height: 768px;\n  border-width: 16px 60px;\n  border-style: solid;\n  border-color: #757575;\n  border-radius: 36px;\n  transform-origin: bottom right;\n}\n\n.device-list[view=\"all\"] > device-view[device=\"handset\"] {\n  position: absolute;\n  right: 5%;\n  width: 360px;\n  height: 640px;\n  border-width: 60px 16px;\n  border-style: solid;\n  border-color: #999;\n  border-radius: 36px;\n  transform-origin: bottom right;\n}\n\n.device-list[view=\"window\"] {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: center;\n}\n\n.device-list[view=\"window\"] > device-view[device=\"window\"] {\n  display: block;\n}\n\n.device-list[view=\"handset\"] {\n  margin: auto;\n}\n\n.device-list[view=\"handset\"] > device-view[device=\"handset\"] {\n  display: block;\n  margin: 40px;\n}\n\n@media screen and (min-width: 1440px) and (min-height: 850px) {\n  .device-list[view=\"all\"] {\n    max-width: 1700px;\n    height: calc(904px * .75);\n  }\n  .device-list[view=\"all\"] > device-view {\n    transform: scale(0.75);\n  }\n}\n\n@media screen and (max-width: 1024px), screen and (max-height: 550px) {\n  .device-list[view=\"all\"] {\n    max-width: 980px;\n    height: calc(904px * .35);\n  }\n  .device-list[view=\"all\"] > device-view {\n    transform: scale(0.35);\n  }\n}\n\n@media screen and (max-width: 720px), screen and (max-height: 420px) {\n  .device-list[view=\"all\"] {\n    max-width: 500px;\n    height: calc(904px * .18);\n  }\n  .device-list[view=\"all\"] > device-view {\n    transform: scale(0.18);\n  }\n}\n\n.frame-container {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  overflow: hidden;\n}\n\n.frame-device {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  border: 0;\n  background: #fff;\n}\n","// 定义主题相关 function\n@import \"../base/functions/math/pow\";\n@import \"../base/functions/rgba-to-rgb\";\n\n// sass 中只能精确到 15 位，即 precision 最大为15\n\n// 颜色色彩系数\n// 例如 coefficient(0) => 0   coefficient(1) => .000303526983549\n// coefficient(2) => .000607053967098  coefficient(3) => .000910580950647\n// 如果不用第三方 pow 函数求解，也可以使用提前用 JavaScript 计算好的数组\n// 比如 $mdc-theme-linear-channel-values: 0 .0003035269835488375 .000607053967097675 .0009105809506465125;\n// 注意 sass 中的数组下标是从 1 开始\n@function coefficient($rgb) {\n  $rgb: $rgb / 255;\n  @return if($rgb < .03928, $rgb / 12.92, pow(($rgb + .055) / 1.055, 2.4));\n}\n\n// 计算色彩的相对亮度\n// 遵循 WCAG 2.0 规范 https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n// https://www.w3.org/Translations/WCAG20-zh/  页面中查找 相对亮度\n// 颜色分为 R G B 三基色, 值从 0 到 255\n// 对于sRGB色彩空间，色彩的相对亮度是指定义 L = 0.2126 * R + 0.7152 * G + 0.0722 * B，其中R，G和B的定义为\n//  function f($color) {\n//   $color = $color / 255;\n//   return $color < 0.03928 ? $color / 12.92 : Math.pow(($color + 0.055) / 1.055, 2.4);\n// }\n// 该定义已封装为函数 coefficient\n@function theme-luminance($color) {\n  // 注意这里不需要加 1\n  $red: red($color);\n  $green: green($color);\n  $blue: blue($color);\n  $r: coefficient($red);\n  $g: coefficient($green);\n  $b: coefficient($blue);\n  @return .2126 * $r + .7152 * $g + .0722 * $b;\n}\n\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n@function theme-contrast-ratio($back, $front) {\n  $back-luminance: theme-luminance($back) + .05;\n  $fore-luminance: theme-luminance($front) + .05;\n  // 明亮度最大除以最小得多对比度\n  @return max($back-luminance, $fore-luminance) / min($back-luminance, $fore-luminance);\n}\n\n// 根据给定的颜色来判断色调是浅色还是深色\n@function theme-tone($color) {\n  //$alpha: alpha($color);\n  //// 如果是透明色，需要先转换为对应的不透明色\n  //@if ($alpha < 1) {\n  //  $color: rgba-to-rgb($color, $background: rgb(red($color), green($color), blue($color)));\n  //}\n  // 最小对比度设为 3.1\n  $minimum-contrast: 3.1;\n  $light-contrast: theme-contrast-ratio($color, #fff);\n  $dark-contrast: theme-contrast-ratio($color, rgba(#000, .87));\n\n  // 当给定颜色与白色的对比度小于 3.1时，并且给定颜色与黑色的对比度大于给定颜色与白色的对比度时，\n  // 返回 dark，否则 light\n\n  @if ($light-contrast < $minimum-contrast) and ($dark-contrast > $light-contrast) {\n    @return \"light\";\n  } @else {\n    @return \"dark\";\n  }\n}\n\n// 颜色的对比色调，即深颜色对应的对比色调为浅颜色\n// 如果$color是浅色，则返回深色 dark，否则为浅色 light\n@function theme-contrast-tone($color) {\n  @return if(theme-tone($color) == \"dark\", \"light\", \"dark\");\n}\n\n// 根据 $theme-contrast-tone-property-values 中的 key 计算对应的 CSS 变量名\n// 比如 primary-on-primary 对应的变量名为 --theme-#{$theme-primary-contrast-tone}-primary\n// --theme-light-primary\n@function theme-contrast-tone-var($theme-contrast-tone-property) {\n  $on-index: str-index($theme-contrast-tone-property, '-on-');\n  $on-prev-str: str-slice($theme-contrast-tone-property, 0, $on-index - 1);\n  $on-next-str: str-slice($theme-contrast-tone-property, $on-index + 4);\n  $contrast-tone: null;\n\n  // 这里 scss 不支持形如 js 取变量的方式，故需要处理多个判断\n  @if ($on-next-str == 'light') {\n    $contrast-tone: dark;\n  } @else if ($on-next-str == 'dark') {\n    $contrast-tone: light;\n  } @else if ($on-next-str == 'primary') {\n    $contrast-tone: $theme-primary-contrast-tone;\n  } @else if ($on-next-str == 'primary-light') {\n    $contrast-tone: $theme-primary-light-contrast-tone;\n  } @else if ($on-next-str == 'primary-lighter') {\n    $contrast-tone: $theme-primary-lighter-contrast-tone;\n  } @else if ($on-next-str == 'primary-lightest') {\n    $contrast-tone: $theme-primary-lightest-contrast-tone;\n  } @else if ($on-next-str == 'primary-dark') {\n    $contrast-tone: $theme-primary-dark-contrast-tone;\n  } @else if ($on-next-str == 'primary-darker') {\n    $contrast-tone: $theme-primary-darker-contrast-tone;\n  } @else if ($on-next-str == 'primary-darkest') {\n    $contrast-tone: $theme-primary-darkest-contrast-tone;\n  } @else if ($on-next-str == 'secondary') {\n    $contrast-tone: $theme-secondary-contrast-tone;\n  } @else if ($on-next-str == 'secondary-light') {\n    $contrast-tone: $theme-secondary-light-contrast-tone;\n  } @else if ($on-next-str == 'secondary-lighter') {\n    $contrast-tone: $theme-secondary-lighter-contrast-tone;\n  } @else if ($on-next-str == 'secondary-lightest') {\n    $contrast-tone: $theme-secondary-lightest-contrast-tone;\n  } @else if ($on-next-str == 'secondary-dark') {\n    $contrast-tone: $theme-secondary-dark-contrast-tone;\n  } @else if ($on-next-str == 'secondary-darker') {\n    $contrast-tone: $theme-secondary-darker-contrast-tone;\n  } @else if ($on-next-str == 'secondary-darkest') {\n    $contrast-tone: $theme-secondary-darkest-contrast-tone;\n  } @else if ($on-next-str == 'background') {\n    $contrast-tone: $theme-background-contrast-tone;\n  }\n\n  @return #{$contrast-tone}-#{$on-prev-str};\n}\n\n","\n@import \"../../../scss/theme/variable\";\n\nbody {\n  padding: 0;\n  margin: 0;\n  overflow: hidden;\n}\n\ndevice-resizer {\n  position: relative;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n  overflow: hidden;\n  color: $grey-color-800;\n  background: $grey-color-50;\n}\n\n.device-header {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  padding: .5rem 1.25rem;\n  overflow: hidden;\n  background: $white;\n}\n\n.device-brand {\n  cursor: pointer;\n}\n\n.brand-icon {\n  display: inline-block;\n  width: 26px;\n  height: 26px;\n  background: url(\"../images/perfect-logo-tiny.png\") no-repeat;\n  background-size: 100%;\n  vertical-align: middle;\n}\n\n.brand-name {\n  display: inline-block;\n  height: 2.25rem;\n  margin-left: .75rem;\n  font-size: 1rem;\n  font-weight: 400;\n  line-height: 2.25rem;\n}\n\n.device-url-container {\n  display: flex;\n  flex-direction: row;\n  width: 400px;\n  height: 1.5rem;\n  padding: .375rem;\n  border-radius: 2px;\n  background: #eee;\n  cursor: pointer;\n  fill: currentColor;\n}\n\n.device-url-icon {\n  [class*=\"icon-pure-\"] {\n    color: $grey-color-900;\n    transform: scale(.8);\n  }\n}\n\n.device-url-input {\n  width: 100%;\n  padding-left: 1rem;\n  border: 0;\n  font-size: .875rem;\n  background: inherit;\n  outline: 0;\n}\n\n.device-select {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n}\n\n.device-icon {\n  margin: 6px 12px;\n  cursor: pointer;\n  [class*=\"icon-pure-\"] {\n    transform: scale(.9);\n  }\n}\n\n.device-selector-wrapper {\n  position: relative;\n  height: 1rem;\n  border-top: 1px solid $grey-color-300;\n  border-bottom: 1px solid $grey-color-300;\n  font-weight: 500;\n  color: $grey-color-900;\n  background: $white;\n  white-space: nowrap;\n}\n\n.device-selector-topbar {\n  position: absolute;\n  left: -100px;\n  right: -100px;\n}\n\n.device-selector-item {\n  position: absolute;\n  left: 0;\n  right: 0;\n  box-sizing: border-box;\n  height: 1rem;\n  margin-left: auto;\n  margin-right: auto;\n  border-left: 1px solid $grey-color-300;\n  border-right: 1px solid $grey-color-300;\n  font-size: .75rem;\n  font-weight: 500;\n  line-height: 1rem;\n  color: #fff;\n  cursor: pointer;\n\n  &:focus,\n  &:hover,\n  &.active {\n    background: $grey-color-200;\n  }\n\n  > .size {\n    margin-left: 4px;\n    margin-right: 4px;\n    color: $grey-color-600;\n  }\n  > .left {\n    float: left;\n  }\n\n  > .right {\n    float: right;\n  }\n}\n\n.device-selector-label {\n  position: absolute;\n  left: 50%;\n  width: 200px;\n  margin-left: -100px;\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 1rem;\n  color: #212121;\n  text-align: center;\n  pointer-events: none;\n}\n\n// container 样式\n\ndevice-view {\n  position: relative;\n  display: block;\n\n  &[device=\"handset\"] {\n    border-width: 60px 16px;\n    border-style: solid;\n    border-color: #999;\n    border-radius: 36px;\n  }\n  &[device=\"handset\"][landscape] {\n    border-width: 16px 60px;\n  }\n}\n\n.device-container {\n  position: relative;\n  display: flex;\n  flex-grow: 1;\n  align-items: center;\n  overflow: auto;\n}\n\n.device-list {\n  margin: auto;\n\n  > device-view {\n    display: none;\n  }\n\n  &[view=\"all\"] {\n    position: relative;\n    display: block;\n    width: 100%;\n    max-width: 1400px;\n    height: calc(904px * .5);\n    margin: 0 auto;\n\n    > device-view {\n      bottom: 0;\n      box-sizing: content-box;\n      display: block;\n      transform: scale(.5);\n    }\n    > device-view[device=\"window\"] {\n      position: static;\n      width: 1366px;\n      height: 800px;\n      margin-left: 10%;\n      border-width: 24px 24px 80px;\n      border-style: solid;\n      border-color: #666;\n      border-radius: 6px;\n      transform-origin: top left;\n\n      &::after {\n        content: \"\";\n        position: absolute;\n        bottom: -56px;\n        left: -140px;\n        right: -140px;\n        display: block;\n        height: 56px;\n        margin: -24px;\n        border-bottom-left-radius: 12px;\n        border-bottom-right-radius: 12px;\n        background: #666;\n      }\n    }\n    > device-view[device=\"table\"] {\n      position: absolute;\n      right: 17%;\n      width: 1024px;\n      height: 768px;\n      border-width: 16px 60px;\n      border-style: solid;\n      border-color: #757575;\n      border-radius: 36px;\n      transform-origin: bottom right;\n    }\n    > device-view[device=\"handset\"] {\n      position: absolute;\n      right: 5%;\n      width: 360px;\n      height: 640px;\n      border-width: 60px 16px;\n      border-style: solid;\n      border-color: #999;\n      border-radius: 36px;\n      transform-origin: bottom right;\n    }\n  }\n\n  &[view=\"window\"] {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    display: flex;\n    justify-content: center;\n\n    & > device-view[device=\"window\"] {\n      display: block;\n    }\n  }\n\n  &[view=\"handset\"] {\n    margin: auto;\n\n    & > device-view[device=\"handset\"] {\n      display: block;\n      margin: 40px;\n    }\n  }\n}\n\n@media screen and (min-width: 1440px) and (min-height: 850px) {\n  .device-list[view=\"all\"] {\n    max-width: 1700px;\n    height: calc(904px * .75);\n\n    > device-view {\n      transform: scale(.75);\n    }\n  }\n\n}\n\n@media screen and (max-width: 1024px), screen and (max-height: 550px) {\n  .device-list[view=\"all\"] {\n    max-width: 980px;\n    height: calc(904px * .35);\n\n    > device-view {\n      transform: scale(.35);\n    }\n  }\n}\n\n@media screen and (max-width: 720px), screen and (max-height: 420px) {\n  .device-list[view=\"all\"] {\n    max-width: 500px;\n    height: calc(904px * .18);\n\n    > device-view {\n      transform: scale(.18);\n    }\n  }\n}\n\n.frame-container {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  overflow: hidden;\n}\n\n.frame-device {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  border: 0;\n  background: #fff;\n}\n","// 自定义主题颜色\n@import \"./color_palette\";\n@import \"../base/variables/options\";\n@import \"./function\";\n\n// 定义颜色透明度\n$alpha: .16 !default;\n\n// 主题颜色，换肤一般改变这三个基本颜色即可\n// 这三种基本颜色主题，会用在所有 CSS 组件上，\n$theme-primary: #2196f3 !default; // 主颜色，使用蓝色 $blue-500 #2196f3\n$theme-secondary: #e040fb !default; // 次颜色，也叫强调(accent)颜色，使用紫色 $purple-a-200 #e040fb\n$theme-background: #fff !default; // 背景颜色，默认白色\n\n// 主题颜色浅色\n$theme-primary-light: #64b5f6 !default; // 取 $blue-300\n$theme-secondary-light: #ea80fc !default; // 取 $purple-a-100\n\n// 主题颜色更浅色\n$theme-primary-lighter: #bbdefb !default; // 取 $blue-100\n$theme-secondary-lighter: #e1bee7 !default; // 取 $purple-100\n\n// 主题颜色最浅色\n$theme-primary-lightest: #e3f2fd !default; // 取 $blue-50\n$theme-secondary-lightest: #f3e5f5 !default; // 取 $purple-50\n\n// 主题颜色深色\n$theme-primary-dark: #1976d2 !default; // 取 $blue-700\n$theme-secondary-dark: #d500f9 !default; // 取 $purple-a-400\n\n// 主题颜色更深色\n$theme-primary-darker: #1565c0 !default; // 取 $blue-800\n$theme-secondary-darker: #aa00ff !default; // 取 $purple-a-700\n\n// 主题颜色最深色\n$theme-primary-darkest: #0d47a1 !default; // 取 $blue-900\n$theme-secondary-darkest: #4a148c !default; // 取 $purple-900\n\n// 主题颜色透明色，有的地方需要设置透明的背景色，这时可以使用该变量，比如波纹组件中\n// 如果浏览器支持了 CSS module，我们可以动态的修改 color 值，直接使用 $theme-primary 加透明参数值即可，只是目前浏览器还不支持。\n// 关于 CSS Color Level 4 提供了大量关于 Color 的处理，只是好多还没有实现，未来这些功能都实现后，CSS Color 的处理将变得更方便，更灵活，期待中......\n// https://www.w3.org/TR/2016/WD-css-color-4-20160705/\n$theme-primary-alpha: rgba($theme-primary, $alpha) !default;\n$theme-secondary-alpha: rgba($theme-secondary, $alpha) !default;\n\n// 浅色或深色色调，给出基本颜色的对比色调， light or dark\n$theme-primary-contrast-tone: theme-contrast-tone($theme-primary);\n$theme-secondary-contrast-tone: theme-contrast-tone($theme-secondary);\n\n// 主题颜色浅色对比色调\n$theme-primary-light-contrast-tone: theme-contrast-tone($theme-primary-light);\n$theme-secondary-light-contrast-tone: theme-contrast-tone($theme-secondary-light);\n\n// 主题颜色更浅色对比色调\n$theme-primary-lighter-contrast-tone: theme-contrast-tone($theme-primary-lighter);\n$theme-secondary-lighter-contrast-tone: theme-contrast-tone($theme-secondary-lighter);\n\n// 主题颜色最浅色对比色调\n$theme-primary-lightest-contrast-tone: theme-contrast-tone($theme-primary-lightest);\n$theme-secondary-lightest-contrast-tone: theme-contrast-tone($theme-secondary-lightest);\n\n// 主题颜色深色对比色调\n$theme-primary-dark-contrast-tone: theme-contrast-tone($theme-primary-dark);\n$theme-secondary-dark-contrast-tone: theme-contrast-tone($theme-secondary-dark);\n\n// 主题颜色更深色对比色调\n$theme-primary-darker-contrast-tone: theme-contrast-tone($theme-primary-darker);\n$theme-secondary-darker-contrast-tone: theme-contrast-tone($theme-secondary-darker);\n\n// 主题颜色最深色对比色调\n$theme-primary-darkest-contrast-tone: theme-contrast-tone($theme-primary-darkest);\n$theme-secondary-darkest-contrast-tone: theme-contrast-tone($theme-secondary-darkest);\n\n// 主题颜色透明色对比色调\n$theme-primary-alpha-contrast-tone: theme-contrast-tone($theme-primary-alpha);\n$theme-secondary-alpha-contrast-tone: theme-contrast-tone($theme-secondary-alpha);\n\n// 背景色对比色调\n$theme-background-contrast-tone: theme-contrast-tone($theme-background);\n\n// 定义文本默认颜色，默认颜色深色用黑色，浅色用白色\n// 分为基本颜色、次要颜色、提示性颜色和禁用颜色，分别用在基础颜色、过渡颜色、提示或暗色和表单 disabled readonly 以及其他禁用\n$theme-text-colors: (\n  dark: (\n    primary: rgba(0, 0, 0, .87),\n    secondary: rgba(0, 0, 0, .54),\n    hint: rgba(0, 0, 0, .38),\n    disabled: rgba(0, 0, 0, .38)\n  ),\n  light: (\n    primary: #ffffff,\n    secondary: rgba(255, 255, 255, .7),\n    hint: rgba(255, 255, 255, .5),\n    disabled: rgba(255, 255, 255, .5)\n  )\n);\n\n// 主题属性值\n$theme-property-values: (\n  // 主题颜色\n  primary: $theme-primary,\n  secondary: $theme-secondary,\n  background: $theme-background,\n\n  // 主题颜色浅色\n  primary-light: $theme-primary-light,\n  secondary-light: $theme-secondary-light,\n\n  // 主题颜色更浅色\n  primary-lighter: $theme-primary-lighter,\n  secondary-lighter: $theme-secondary-lighter,\n\n  // 主题颜色最浅色\n  primary-lightest: $theme-primary-lightest,\n  secondary-lightest: $theme-secondary-lightest,\n\n  // 主题颜色深色\n  primary-dark: $theme-primary-dark,\n  secondary-dark: $theme-secondary-dark,\n\n  // 主题颜色更深色\n  primary-darker: $theme-primary-darker,\n  secondary-darker: $theme-secondary-darker,\n\n  // 主题颜色最深色\n  primary-darkest: $theme-primary-darkest,\n  secondary-darkest: $theme-secondary-darkest,\n\n  // 主题颜色透明色\n  primary-alpha: $theme-primary-alpha,\n  secondary-alpha: $theme-secondary-alpha,\n\n) !default;\n\n// 主题基本颜色对比色调值集合，根据主题基本颜色计算出对应的对比色调值，浅色还是深色色调值\n$theme-contrast-tone-property-values: (\n  // 可以用在 background-color border-color 或 color 等可以设置颜色的属性上\n  // 当 map-get($theme-text-colors, $theme-primary-contrast-tone) 返回 light 时，对应浅色值\n  // 当 map-get($theme-text-colors, $theme-primary-contrast-tone) 返回 dark 时，对应深色值\n\n  // 用在 $theme-primary 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary: map-get(map-get($theme-text-colors, $theme-primary-contrast-tone), primary),\n  secondary-on-primary: map-get(map-get($theme-text-colors, $theme-primary-contrast-tone), secondary),\n  hint-on-primary: map-get(map-get($theme-text-colors, $theme-primary-contrast-tone), hint),\n  disabled-on-primary: map-get(map-get($theme-text-colors, $theme-primary-contrast-tone), disabled),\n\n  // 用在 $theme-primary-light 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary-light: map-get(map-get($theme-text-colors, $theme-primary-light-contrast-tone), primary),\n  secondary-on-primary-light: map-get(map-get($theme-text-colors, $theme-primary-light-contrast-tone), secondary),\n  hint-on-primary-light: map-get(map-get($theme-text-colors, $theme-primary-light-contrast-tone), hint),\n  disabled-on-primary-light: map-get(map-get($theme-text-colors, $theme-primary-light-contrast-tone), disabled),\n\n  // 用在 $theme-primary-lighter 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary-lighter: map-get(map-get($theme-text-colors, $theme-primary-lighter-contrast-tone), primary),\n  secondary-on-primary-lighter: map-get(map-get($theme-text-colors, $theme-primary-lighter-contrast-tone), secondary),\n  hint-on-primary-lighter: map-get(map-get($theme-text-colors, $theme-primary-lighter-contrast-tone), hint),\n  disabled-on-primary-lighter: map-get(map-get($theme-text-colors, $theme-primary-lighter-contrast-tone), disabled),\n\n  // 用在 $theme-primary-lightest 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary-lightest: map-get(map-get($theme-text-colors, $theme-primary-lightest-contrast-tone), primary),\n  secondary-on-primary-lightest: map-get(map-get($theme-text-colors, $theme-primary-lightest-contrast-tone), secondary),\n  hint-on-primary-lightest: map-get(map-get($theme-text-colors, $theme-primary-lightest-contrast-tone), hint),\n  disabled-on-primary-lightest: map-get(map-get($theme-text-colors, $theme-primary-lightest-contrast-tone), disabled),\n\n  // 用在 $theme-primary-dark 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary-dark: map-get(map-get($theme-text-colors, $theme-primary-dark-contrast-tone), primary),\n  secondary-on-primary-dark: map-get(map-get($theme-text-colors, $theme-primary-dark-contrast-tone), secondary),\n  hint-on-primary-dark: map-get(map-get($theme-text-colors, $theme-primary-dark-contrast-tone), hint),\n  disabled-on-primary-dark: map-get(map-get($theme-text-colors, $theme-primary-dark-contrast-tone), disabled),\n\n  // 用在 $theme-primary-darker 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary-darker: map-get(map-get($theme-text-colors, $theme-primary-darker-contrast-tone), primary),\n  secondary-on-primary-darker: map-get(map-get($theme-text-colors, $theme-primary-darker-contrast-tone), secondary),\n  hint-on-primary-darker: map-get(map-get($theme-text-colors, $theme-primary-darker-contrast-tone), hint),\n  disabled-on-primary-darker: map-get(map-get($theme-text-colors, $theme-primary-darker-contrast-tone), disabled),\n\n  // 用在 $theme-primary-darkest 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary-darkest: map-get(map-get($theme-text-colors, $theme-primary-darkest-contrast-tone), primary),\n  secondary-on-primary-darkest: map-get(map-get($theme-text-colors, $theme-primary-darkest-contrast-tone), secondary),\n  hint-on-primary-darkest: map-get(map-get($theme-text-colors, $theme-primary-darkest-contrast-tone), hint),\n  disabled-on-primary-darkest: map-get(map-get($theme-text-colors, $theme-primary-darkest-contrast-tone), disabled),\n\n  // 用在主题颜色主颜色透明色 $theme-primary-alpha 上的 primary secondary hint 和 disabled 对比颜色，深色主题用浅色对比色调\n  primary-on-primary-alpha: map-get(map-get($theme-text-colors, $theme-primary-alpha-contrast-tone), primary),\n  secondary-on-primary-alpha: map-get(map-get($theme-text-colors, $theme-primary-alpha-contrast-tone), secondary),\n  hint-on-primary-alpha: map-get(map-get($theme-text-colors, $theme-primary-alpha-contrast-tone), hint),\n  disabled-on-primary-alpha: map-get(map-get($theme-text-colors, $theme-primary-alpha-contrast-tone), disabled),\n\n  // 用在 $theme-secondary 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary: map-get(map-get($theme-text-colors, $theme-secondary-contrast-tone), primary),\n  secondary-on-secondary: map-get(map-get($theme-text-colors, $theme-secondary-contrast-tone), secondary),\n  hint-on-secondary: map-get(map-get($theme-text-colors, $theme-secondary-contrast-tone), hint),\n  disabled-on-secondary: map-get(map-get($theme-text-colors, $theme-secondary-contrast-tone), disabled),\n\n  // 用在 $theme-secondary-light 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary-light: map-get(map-get($theme-text-colors, $theme-secondary-light-contrast-tone), primary),\n  secondary-on-secondary-light: map-get(map-get($theme-text-colors, $theme-secondary-light-contrast-tone), secondary),\n  hint-on-secondary-light: map-get(map-get($theme-text-colors, $theme-secondary-light-contrast-tone), hint),\n  disabled-on-secondary-light: map-get(map-get($theme-text-colors, $theme-secondary-light-contrast-tone), disabled),\n\n  // 用在 $theme-secondary-lighter 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary-lighter: map-get(map-get($theme-text-colors, $theme-secondary-lighter-contrast-tone), primary),\n  secondary-on-secondary-lighter: map-get(map-get($theme-text-colors, $theme-secondary-lighter-contrast-tone), secondary),\n  hint-on-secondary-lighter: map-get(map-get($theme-text-colors, $theme-secondary-lighter-contrast-tone), hint),\n  disabled-on-secondary-lighter: map-get(map-get($theme-text-colors, $theme-secondary-lighter-contrast-tone), disabled),\n\n  // 用在 $theme-secondary-lightest 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary-lightest: map-get(map-get($theme-text-colors, $theme-secondary-lightest-contrast-tone), primary),\n  secondary-on-secondary-lightest: map-get(map-get($theme-text-colors, $theme-secondary-lightest-contrast-tone), secondary),\n  hint-on-secondary-lightest: map-get(map-get($theme-text-colors, $theme-secondary-lightest-contrast-tone), hint),\n  disabled-on-secondary-lightest: map-get(map-get($theme-text-colors, $theme-secondary-lightest-contrast-tone), disabled),\n\n  // 用在 $theme-secondary-dark 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary-dark: map-get(map-get($theme-text-colors, $theme-secondary-dark-contrast-tone), primary),\n  secondary-on-secondary-dark: map-get(map-get($theme-text-colors, $theme-secondary-dark-contrast-tone), secondary),\n  hint-on-secondary-dark: map-get(map-get($theme-text-colors, $theme-secondary-dark-contrast-tone), hint),\n  disabled-on-secondary-dark: map-get(map-get($theme-text-colors, $theme-secondary-dark-contrast-tone), disabled),\n\n  // 用在 $theme-secondary-darker 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary-darker: map-get(map-get($theme-text-colors, $theme-secondary-darker-contrast-tone), primary),\n  secondary-on-secondary-darker: map-get(map-get($theme-text-colors, $theme-secondary-darker-contrast-tone), secondary),\n  hint-on-secondary-darker: map-get(map-get($theme-text-colors, $theme-secondary-darker-contrast-tone), hint),\n  disabled-on-secondary-darker: map-get(map-get($theme-text-colors, $theme-secondary-darker-contrast-tone), disabled),\n\n  // 用在 $theme-secondary-darkest 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary-darkest: map-get(map-get($theme-text-colors, $theme-secondary-darkest-contrast-tone), primary),\n  secondary-on-secondary-darkest: map-get(map-get($theme-text-colors, $theme-secondary-darkest-contrast-tone), secondary),\n  hint-on-secondary-darkest: map-get(map-get($theme-text-colors, $theme-secondary-darkest-contrast-tone), hint),\n  disabled-on-secondary-darkest: map-get(map-get($theme-text-colors, $theme-secondary-darkest-contrast-tone), disabled),\n\n  // 用在主题颜色次颜色透明色 $theme-secondary-alpha 上的 primary secondary hint 和 disabled 对比颜色，深色主题用浅色对比色调\n  primary-on-secondary-alpha: map-get(map-get($theme-text-colors, $theme-secondary-alpha-contrast-tone), primary),\n  secondary-on-secondary-alpha: map-get(map-get($theme-text-colors, $theme-secondary-alpha-contrast-tone), secondary),\n  hint-on-secondary-alpha: map-get(map-get($theme-text-colors, $theme-secondary-alpha-contrast-tone), hint),\n  disabled-on-secondary-alpha: map-get(map-get($theme-text-colors, $theme-secondary-alpha-contrast-tone), disabled),\n\n  // 用在 $theme-background 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-background: map-get(map-get($theme-text-colors, $theme-background-contrast-tone), primary),\n  secondary-on-background: map-get(map-get($theme-text-colors, $theme-background-contrast-tone), secondary),\n  hint-on-background: map-get(map-get($theme-text-colors, $theme-background-contrast-tone), hint),\n  disabled-on-background: map-get(map-get($theme-text-colors, $theme-background-contrast-tone), disabled),\n\n  // 用在浅色主题上的 primary secondary hint 和 disabled 对比色调，浅色主题用深色对比色调\n  primary-on-light: map-get(map-get($theme-text-colors, dark), primary),\n  secondary-on-light: map-get(map-get($theme-text-colors, dark), secondary),\n  hint-on-light: map-get(map-get($theme-text-colors, dark), hint),\n  disabled-on-light: map-get(map-get($theme-text-colors, dark), disabled),\n\n  // 用在深色主题上的 primary secondary hint 和 disabled 对比颜色，深色主题用浅色对比色调\n  primary-on-dark: map-get(map-get($theme-text-colors, light), primary),\n  secondary-on-dark: map-get(map-get($theme-text-colors, light), secondary),\n  hint-on-dark: map-get(map-get($theme-text-colors, light), hint),\n  disabled-on-dark: map-get(map-get($theme-text-colors, light), disabled),\n) !default;\n\n// 除了三种基本颜色外，又定义了成功 success 、信息 info、警告 warning 、错误 error 四种辅助颜色，\n// 这四种颜色主要用在背景，文本，按钮等上，用来区分文本颜色和背景，以及表单样式（比如校验失败和成功的颜色）等\n$theme-assist: (\"success\", \"info\", \"warning\", \"error\") !default;\n\n// 辅助颜色值\n$theme-assist-colors: (\n  success: #43a047, // $green-600\n  info: #0097a7, // $cyan-700\n  warning: #fb8c00, // $orange-600\n  error: #f44336, //$red-500\n\n  // 辅助颜色浅色\n  success-light: #81c784, // $green-300\n  info-light: #4dd0e1, // $cyan-300\n  warning-light: #ffb74d, // $orange-300\n  error-light: #e57373, // $red-300\n\n  // 辅助颜色更浅色\n  success-lighter: #c8e6c9, // $green-100\n  info-lighter: #b2ebf2, // $cyan-100\n  warning-lighter: #ffe0b2, // $orange-100\n  error-lighter: #ffcdd2, // $red-100\n\n  // 辅助颜色深色\n  success-dark: #2e7d32, // $green-800\n  info-dark: #00838f, // $cyan-800\n  warning-dark: #ef6c00, // $orange-800\n  error-dark: #c62828, // $red-800\n\n  // 辅助颜色透明色\n  success-alpha: rgba(#4caf50, $alpha),\n  info-alpha: rgba(#00bcd4, $alpha),\n  warning-alpha: rgba(#ff9800, $alpha),\n  error-alpha: rgba(#f44336, $alpha),\n) !default;\n\n// 常用灰色颜色，提供了黑色透明度和灰色本身颜色两种方案，根据配置项 $enable-transparent 来选择其中一种方案\n// 默认使用黑色透明度，可以通过修改 base/variables/_options.scss 中变量 $enable-transparent 来选择不同的方案\n\n// 灰色颜色，对于灰色颜色，这里没有采用 css 变量处理\n$greys: (\n  50: #fafafa,\n  100: #f5f5f5,\n  200: #eeeeee,\n  300: #e0e0e0,\n  400: #bdbdbd,\n  500: #9e9e9e,\n  600: #757575,\n  700: #616161,\n  800: #424242,\n  900: #212121\n) !default;\n\n// 灰色透明色\n$greys-transparent: (\n  50: rgba(0, 0, 0, .02), // 相当于 #fafafa;\n  100: rgba(0, 0, 0, .04), // 相当于 #f5f5f5\n  200: rgba(0, 0, 0, .065), // 相当于 #eeeeee\n  300: rgba(0, 0, 0, .12), // 相当于 #e0e0e0\n  400: rgba(0, 0, 0, .26), // 相当于 #bdbdbd\n  500: rgba(0, 0, 0, .38), // 相当于 #9e9e9e\n  600: rgba(0, 0, 0, .54), // 相当于 #757575\n  700: rgba(0, 0, 0, .62), // 相当于 #616161\n  800: rgba(0, 0, 0, .74), // 相当于 #424242\n  900: rgba(0, 0, 0, .87) // 相当于 #212121\n) !default;\n\n// 白色、黑色和透明色\n$white: #ffffff !default;\n$black: #000000 !default;\n$transparent: rgba(0, 0, 0, 0) !default; // 透明色\n\n$grey-color-50: if($enable-transparent, map-get($greys-transparent, 50), map-get($greys, 50)) !default;\n$grey-color-100: if($enable-transparent, map-get($greys-transparent, 100), map-get($greys, 100)) !default;\n$grey-color-200: if($enable-transparent, map-get($greys-transparent, 200), map-get($greys, 200)) !default;\n$grey-color-300: if($enable-transparent, map-get($greys-transparent, 300), map-get($greys, 300)) !default;\n$grey-color-400: if($enable-transparent, map-get($greys-transparent, 400), map-get($greys, 400)) !default;\n$grey-color-500: if($enable-transparent, map-get($greys-transparent, 500), map-get($greys, 500)) !default;\n$grey-color-600: if($enable-transparent, map-get($greys-transparent, 600), map-get($greys, 600)) !default;\n$grey-color-700: if($enable-transparent, map-get($greys-transparent, 700), map-get($greys, 700)) !default;\n$grey-color-800: if($enable-transparent, map-get($greys-transparent, 800), map-get($greys, 800)) !default;\n$grey-color-900: if($enable-transparent, map-get($greys-transparent, 900), map-get($greys, 900)) !default;\n"]}