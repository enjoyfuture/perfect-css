{"version":3,"sources":["docs.css","../../../scss/theme/_function.scss","../../../scss/theme/_mixin.scss","common/_header.scss","../../../scss/theme/_variable.scss","common/_footer.scss","common/_menu.scss","common/_catalogue.scss","common/_anchor.scss","../../../scss/animation/_variable.scss","docs/_main.scss","docs/_document.scss","docs/_catalogue.scss","../../../scss/animation/_mixin.scss","mixins/_header.scss","docs/_example.scss","docs/_highlight.scss","docs/_highlight-custom.scss","docs/_color-palette.scss"],"names":[],"mappings":"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0BEVmB;EFWnB,gDAAqF;CauGpF;;AAIL;EACE,iBAAgB;Eb7Gd,0BEG4B;EFF5B,yDAAqF;Ca8GxF;;AAED;EAEI,iBAAgB;CACjB;;AAHH;EbjHI,0BEJ2B;EFK3B,wDAAqF;CasHtF;;AC1IH;EAAsB,aAAY;CAAK;;AACvC;EAAuB,UAAS;CAAK;;AACrC;EACE,eAAc;EACd,mBAAkB;CACnB;;AACD;EACE,eAAc;EACd,kBAAiB;CAClB;;AACD;EACE,eAAc;EACd,mBAAkB;CACnB;;AACD;EACE,eAAc;EACd,kBAAiB;EACjB,mBAAkB;CACnB;;AACD;EACE,eAAc;EACd,mBAAkB;CACnB;;AACD;EACE,eAAc;EACd,0BAAyB;CAC1B;;AACD;EACE,eAAc;EACd,0BAAyB;CAC1B;;AACD;EACE,eAAc;EACd,mBAAkB;CACnB;;AACD;EACE,eAAc;CACf;;AACD;EACE,eAAc;CACf;;AACD;EACE,eAAc;EACd,0BAAyB;CAC1B;;AACD;EACE,eAAc;CACf;;AACD;EACE,eAAc;CACf;;AACD;EACE,kBAAiB;CAClB;;AACD;EACE,eAAc;CACf;;AACD;EACE,eAAc;CACf;;AACD;EACE,eAAc;EACd,kBAAiB;CAClB;;AACD;EACE,eAAc;EACd,kBAAiB;CAClB;;AACD;EACE,eAAc;EACd,kBAAiB;CAClB;;AACD;EACE,eAAc;EACd,kBAAiB;CAClB;;AACD;EACE,eAAc;EACd,kBAAiB;CAClB;;AACD;EACE,eAAc;EACd,kBAAiB;CAClB;;AACD;EACE,eAAc;EACd,kBAAiB;CAClB;;AACD;EACE,eAAc;CACf;;AACD;EACE,eAAc;CACf;;AACD;EACE,eAAc;CACf;;AACD;EACE,eAAc;CACf;;AACD;EACE,eAAc;CACf;;AACD;EACE,eAAc;CACf;;AACD;EACE,YAAW;CACZ;;AACD;EACE,YAAW;CACZ;;AACD;EACE,YAAW;CACZ;;AACD;EACE,YAAW;CACZ;;AACD;EACE,YAAW;CACZ;;AACD;EACE,YAAW;CACZ;;AACD;EACE,YAAW;CACZ;;AACD;EACE,YAAW;CACZ;;AACD;EACE,eAAc;CACf;;AACD;EACE,YAAW;CACZ;;AACD;EACE,eAAc;CACf;;AACD;EACE,YAAW;CACZ;;AACD;EACE,eAAc;CACf;;AACD;EACE,eAAc;CACf;;AACD;EACE,eAAc;CACf;;AACD;EACE,eAAc;EACd,kBAAiB;CAClB;;AACD;EACE,eAAc;CACf;;AACD;EACE,eAAc;EACd,kBAAiB;CAClB;;AACD;EACE,eAAc;CACf;;AACD;EACE,eAAc;EACd,kBAAiB;CAClB;;AACD;EACE,eAAc;EACd,kBAAiB;CAClB;;AACD;EACE,eAAc;EACd,kBAAiB;CAClB;;AACD;EACE,eAAc;CACf;;AACD;EACE,eAAc;CACf;;AACD;EACE,eAAc;CACf;;AACD;EACE,eAAc;CACf;;AACD;EACE,eAAc;CACf;;AACD;EACE,eAAc;CACf;;AACD;EACE,eAAc;EACd,kBAAiB;CAClB;;AACD;EACE,eAAc;EACd,kBAAiB;CAClB;;AACD;EACE,eAAc;CACf;;AACD;EACE,0BAAyB;CAC1B;;Af3KD;;;GAGG;AAHH;;;GAGG;AAHH;;;GAGG;ACrCH;;;;GAIG;AeHH;EACE,oBAAmB;CAQpB;;AATD;EAII,mBAAkB;CAInB;;AARH;EAMM,eAAc;CACf;;AAIL;EACE,cAAwB;EACxB,kBAA6B;EfE3B,sBEA6B;EFC7B,sDAAqF;EeDvF,6CAA4C;EAC5C,8BAA+B;CAChC;;AAED;EACE,WAAmB;EACnB,cAAmB;EACnB,iBAAmB;EACnB,UAAmB;EACnB,8BAA6B;CAC9B;;AAED;EACE,mBAAkB;CACnB;;ACjCD;EACE,YAAW;CACZ;;AAED;EACE,qBAAoB;CACrB;;AAED;EACE,0BAAyB;CAC1B;;AAED;EACE,qBAAa;EAAb,cAAa;EACb,uBAA8B;MAA9B,+BAA8B;EAC9B,qBAAoB;CACrB;;AAED;EACE,2BAAyB;CAC1B;;AAED;EACE,kBAAiB;CAClB;;AAED;EACE,mBAAkB;EAClB,oBAAmB;EACnB,oBAAmB;CAKpB;;AARD;EAKI,gBAAe;EACf,iBAAgB;CACjB","file":"../docs.css","sourcesContent":["@charset \"UTF-8\";\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $theme-property-values (_variables.scss).\n */\n.drawer-toggle .icon-pure-menu {\n  color: rgba(255, 255, 255, 0.7);\n  color: var(--theme-light-secondary, rgba(255, 255, 255, 0.7));\n}\n\n.drawer-toggle:hover .icon-pure-menu {\n  color: #ffffff;\n  color: var(--theme-light-primary, #ffffff);\n}\n\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n.footer-assist {\n  padding-top: 4.5rem;\n}\n\n.footer {\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  padding: 1rem 0;\n  border-top: 1px solid rgba(0, 0, 0, 0.12);\n  color: rgba(0, 0, 0, 0.54);\n}\n\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $theme-property-values (_variables.scss).\n */\n.perfect-menu.menu, .perfect-menu .menu {\n  margin-left: 0;\n}\n\n.perfect-menu .menu-title {\n  padding: .5rem 1rem;\n}\n\n.perfect-menu .menu-title:hover {\n  color: #64b5f6;\n  color: var(--theme-primary-light, #64b5f6);\n}\n\n.perfect-menu .menu-title.active {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n}\n\n.perfect-menu .menu-sub-title:hover {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n}\n\n.perfect-menu .menu-sub-title.active {\n  border-right: 3px solid;\n  color: #1565c0;\n  color: var(--theme-primary-darker, #1565c0);\n  background-color: #e3f2fd;\n  background-color: var(--theme-primary-lightest, #e3f2fd);\n}\n\n@supports (background-color: color(green a(10%))) {\n  .perfect-menu .menu-sub-title.active {\n    background-color: color(var(--theme-primary-lightest) a(80%));\n  }\n}\n\n.catalogue-counter {\n  counter-reset: outline1;\n}\n\n.catalogue-counter > h1::before, .catalogue-counter > h2::before, .catalogue-counter > h3::before, .catalogue-counter > h4::before, .catalogue-counter > h5::before, .catalogue-counter > h6::before {\n  margin-right: .5rem;\n}\n\n.catalogue-counter > h1 {\n  counter-reset: outline2;\n}\n\n.catalogue-counter > h1::before {\n  content: counter(outline1, decimal) \". \";\n  counter-increment: outline1;\n}\n\n.catalogue-counter > h1 ~ h2 {\n  counter-reset: outline3;\n}\n\n.catalogue-counter > h1 ~ h2::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\";\n  counter-increment: outline2;\n}\n\n.catalogue-counter > h1 ~ h2 ~ h3 {\n  counter-reset: outline4;\n}\n\n.catalogue-counter > h1 ~ h2 ~ h3::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\";\n  counter-increment: outline3;\n}\n\n.catalogue-counter > h1 ~ h2 ~ h3 ~ h4 {\n  counter-reset: outline5;\n}\n\n.catalogue-counter > h1 ~ h2 ~ h3 ~ h4::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\";\n  counter-increment: outline4;\n}\n\n.catalogue-counter > h1 ~ h2 ~ h3 ~ h4 ~ h5 {\n  counter-reset: outline6;\n}\n\n.catalogue-counter > h1 ~ h2 ~ h3 ~ h4 ~ h5::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\" counter(outline5, decimal) \".\";\n  counter-increment: outline5;\n}\n\n.catalogue-counter > h1 ~ h2 ~ h3 ~ h4 ~ h5 ~ h6::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\" counter(outline5, decimal) \".\" counter(outline6, decimal) \".\";\n  counter-increment: outline6;\n}\n\n.catalogue-counter > h2 {\n  counter-reset: outline2;\n}\n\n.catalogue-counter > h2::before {\n  content: counter(outline1, decimal) \".\";\n  counter-increment: outline1;\n}\n\n.catalogue-counter > h2 ~ h3 {\n  counter-reset: outline3;\n}\n\n.catalogue-counter > h2 ~ h3::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\";\n  counter-increment: outline2;\n}\n\n.catalogue-counter > h2 ~ h3 ~ h4 {\n  counter-reset: outline4;\n}\n\n.catalogue-counter > h2 ~ h3 ~ h4::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\";\n  counter-increment: outline3;\n}\n\n.catalogue-counter > h2 ~ h3 ~ h4 ~ h5 {\n  counter-reset: outline5;\n}\n\n.catalogue-counter > h2 ~ h3 ~ h4 ~ h5::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\";\n  counter-increment: outline4;\n}\n\n.catalogue-counter > h2 ~ h3 ~ h4 ~ h5 ~ h6::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\" counter(outline5, decimal) \".\";\n  counter-increment: outline5;\n}\n\n.catalogue-counter > h3 {\n  counter-reset: outline2;\n}\n\n.catalogue-counter > h3::before {\n  content: counter(outline1, decimal) \".\";\n  counter-increment: outline1;\n}\n\n.catalogue-counter > h3 ~ h4 {\n  counter-reset: outline3;\n}\n\n.catalogue-counter > h3 ~ h4::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\";\n  counter-increment: outline2;\n}\n\n.catalogue-counter > h3 ~ h4 ~ h5 {\n  counter-reset: outline4;\n}\n\n.catalogue-counter > h3 ~ h4 ~ h5::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\";\n  counter-increment: outline3;\n}\n\n.catalogue-counter > h3 ~ h4 ~ h5 ~ h6::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\";\n  counter-increment: outline4;\n}\n\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $theme-property-values (_variables.scss).\n */\n.anchor-link {\n  font-weight: 400;\n  color: #64b5f6;\n  color: var(--theme-primary-light, #64b5f6);\n  transition: color 0.16s cubic-bezier(0, 0, 0.2, 1), opacity 0.16s cubic-bezier(0, 0, 0.2, 1);\n}\n\n.anchor-link:hover {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  text-decoration: none;\n}\n\nhtml {\n  position: relative;\n}\n\nhtml, body {\n  height: auto;\n  min-height: 100%;\n}\n\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $theme-property-values (_variables.scss).\n */\n.drawer-content {\n  overflow: hidden;\n}\n\n.doc-content-header {\n  padding-right: 4rem;\n}\n\n.doc-content-header a {\n  margin-right: 1rem;\n}\n\n.doc-content-header a:last-child {\n  margin-right: 0;\n}\n\n.doc-main {\n  min-height: 500px;\n  padding: 0 1rem;\n}\n\n.doc-main p, .doc-main li {\n  line-height: 2;\n}\n\n.doc-main p {\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n}\n\n.doc-main h1, .doc-main h2, .doc-main h3 {\n  margin-top: 2rem;\n}\n\n.doc-table {\n  width: 95%;\n  margin-bottom: 1rem;\n}\n\n.doc-table tbody > tr:nth-of-type(odd) {\n  background-color: #f3e5f5;\n  background-color: var(--theme-secondary-lightest, #f3e5f5);\n}\n\n.doc-table th {\n  border-bottom: 1px solid;\n  border-bottom-color: #e1bee7;\n  border-bottom-color: var(--theme-secondary-lighter, #e1bee7);\n}\n\n.doc-table th,\n.doc-table td {\n  padding: .5rem 1rem;\n  border-top: 1px solid;\n  border-left: 1px solid;\n  border-color: #e1bee7;\n  border-color: var(--theme-secondary-lighter, #e1bee7);\n}\n\n.doc-table th:last-child,\n.doc-table td:last-child {\n  border-right: 1px solid;\n  border-color: #e1bee7;\n  border-color: var(--theme-secondary-lighter, #e1bee7);\n}\n\n.doc-table tr:last-child > td {\n  border-bottom: 1px solid;\n  border-color: #e1bee7;\n  border-color: var(--theme-secondary-lighter, #e1bee7);\n}\n\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $theme-property-values (_variables.scss).\n */\n.doc-catalogue-menu:hover .doc-catalogue-panel {\n  transform: translate(0, 0);\n}\n\n.doc-catalogue-panel {\n  position: fixed;\n  top: 64px;\n  right: 0;\n  z-index: 1000;\n  padding-top: .5rem;\n  border-top: 1px solid;\n  border-bottom: 1px solid;\n  border-left: 1px solid;\n  overflow: hidden;\n  background-color: #fff;\n  transform: translate(200%, 0);\n  border-color: #f3e5f5;\n  border-color: var(--theme-secondary-lightest, #f3e5f5);\n  transition: transform 120ms cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.doc-catalogue-icon {\n  position: fixed;\n  top: 4.5rem;\n  right: .5rem;\n  z-index: 1000;\n  background-color: rgba(255, 255, 255, 0.5);\n  background-color: var(--theme-light-hint, rgba(255, 255, 255, 0.5));\n  cursor: pointer;\n}\n\n.doc-catalogue-icon .icon-pure-catalogue {\n  color: #e040fb;\n  color: var(--theme-secondary, #e040fb);\n}\n\n.doc-catalogue-menu-right {\n  display: none;\n}\n\n.doc-content {\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n}\n\n.doc-content > h1 {\n  font-size: 1.75rem;\n}\n\n.doc-content > h2 {\n  font-size: 1.5rem;\n}\n\n.doc-content > h3 {\n  font-size: 1.25rem;\n}\n\n.doc-content > h4 {\n  font-size: 1.125rem;\n}\n\n.doc-content > h1, .doc-content > h2 {\n  margin-top: 3rem;\n}\n\n.doc-content > h3, .doc-content > h4, .doc-content > h5, .doc-content > h6 {\n  margin-top: 2rem;\n}\n\n.doc-content > h1:first-child, .doc-content > h2:first-child {\n  margin-top: 0;\n}\n\n.doc-content > h1 .anchor-header, .doc-content > h2 .anchor-header, .doc-content > h3 .anchor-header, .doc-content > h4 .anchor-header, .doc-content > h5 .anchor-header, .doc-content > h6 .anchor-header {\n  display: inline-block;\n  height: 5.5rem;\n  margin-top: -5.5rem;\n  visibility: hidden;\n}\n\n.doc-content > h1 .anchor-link, .doc-content > h2 .anchor-link, .doc-content > h3 .anchor-link, .doc-content > h4 .anchor-link, .doc-content > h5 .anchor-link, .doc-content > h6 .anchor-link {\n  padding-left: 0.375rem;\n  opacity: 0;\n}\n\n.doc-content > h1:hover > .anchor-link,\n.doc-content > h1 .anchor-link:focus, .doc-content > h2:hover > .anchor-link,\n.doc-content > h2 .anchor-link:focus, .doc-content > h3:hover > .anchor-link,\n.doc-content > h3 .anchor-link:focus, .doc-content > h4:hover > .anchor-link,\n.doc-content > h4 .anchor-link:focus, .doc-content > h5:hover > .anchor-link,\n.doc-content > h5 .anchor-link:focus, .doc-content > h6:hover > .anchor-link,\n.doc-content > h6 .anchor-link:focus {\n  opacity: 1;\n}\n\n.doc-content hr {\n  border-top: 1px dashed;\n  border-color: #64b5f6;\n  border-color: var(--theme-primary-light, #64b5f6);\n}\n\n@media screen and (min-width: 1600px) {\n  .doc-catalogue-menu {\n    display: none;\n  }\n  .doc-main {\n    display: flex;\n  }\n  .doc-content {\n    flex: 0 0 79.1666666667%;\n    max-width: 79.1666666667%;\n  }\n  .doc-catalogue-menu-right {\n    display: block;\n    flex: 0 0 20.8333333333%;\n    max-width: 20.8333333333%;\n    margin-left: 1rem;\n    border-left: 1px solid rgba(0, 0, 0, 0.12);\n  }\n  .doc-catalogue-panel {\n    position: static;\n    right: auto;\n    margin-top: 1rem;\n    border: 0;\n    transform: translate(0, 0);\n  }\n  .doc-catalogue-header::before {\n    content: \"目录\";\n    padding-left: .5rem;\n    color: #999;\n  }\n}\n\n.doc-catalogue .menu-title {\n  position: relative;\n  min-width: 200px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.doc-catalogue .menu-title:hover::after, .doc-catalogue .menu-title.active::after {\n  content: \"\";\n  position: absolute;\n  top: 25%;\n  bottom: 20%;\n  left: 0;\n  border-left: 1px solid;\n  border-left-color: #e040fb;\n  border-left-color: var(--theme-secondary, #e040fb);\n}\n\n.doc-catalogue .menu-title.active::after {\n  border-left-width: 2px;\n}\n\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $theme-property-values (_variables.scss).\n */\n.doc-example {\n  position: relative;\n  margin-bottom: 1rem;\n  border: 1px solid;\n  border-color: #e1bee7;\n  border-color: var(--theme-secondary-lighter, #e1bee7);\n  border-radius: 4px;\n  transition: all .2s;\n}\n\n.doc-example:hover .icon-pure-code,\n.doc-example:hover .icon-pure-code-expand {\n  color: #e040fb;\n  color: var(--theme-secondary, #e040fb);\n}\n\n.doc-example-render {\n  padding: 1rem 1rem 0;\n}\n\n.doc-example-render p:last-of-type {\n  margin-bottom: 0;\n}\n\n.doc-example-expand {\n  position: relative;\n  display: flex;\n  justify-content: flex-end;\n  margin: .5rem 2rem;\n}\n\n.icon-pure-code,\n.icon-pure-code-expand {\n  transform: rotate(-45deg) scale(0.6);\n  color: #e1bee7;\n  color: var(--theme-secondary-lighter, #e1bee7);\n}\n\n.doc-code-icon {\n  width: 2.5rem;\n  cursor: pointer;\n}\n\n.doc-code-icon:hover .icon-pure-code,\n.doc-code-icon:hover .icon-pure-code-expand {\n  color: #e040fb;\n  color: var(--theme-secondary, #e040fb);\n}\n\n.doc-code-icon:hover + .tooltip {\n  top: -3rem;\n  right: -.8rem;\n  display: block;\n  opacity: .8;\n}\n\n.doc-example-highlight.highlight {\n  display: none;\n  border: 0;\n  border-top: 1px dashed;\n  border-top-color: #e1bee7;\n  border-top-color: var(--theme-secondary-lighter, #e1bee7);\n  transition: display 120ms cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.doc-code-copy {\n  position: absolute;\n  top: 1rem;\n  right: 3rem;\n  display: none;\n}\n\n.doc-code-copy .icon-pure-copy {\n  cursor: pointer;\n  transform: scale(0.4);\n  color: #e1bee7;\n  color: var(--theme-secondary-lighter, #e1bee7);\n}\n\n.doc-code-copy:hover .icon-pure-copy {\n  color: #e040fb;\n  color: var(--theme-secondary, #e040fb);\n}\n\n.doc-code-copy:hover + .tooltip {\n  top: -2rem;\n  right: 1.5rem;\n  display: block;\n  opacity: .8;\n}\n\n.doc-example-highlight {\n  position: relative;\n}\n\n.doc-example-highlight:hover .doc-code-copy {\n  display: block;\n}\n\n.doc-example-highlight:hover .doc-code-copy .icon-pure-copy {\n  color: #e040fb;\n  color: var(--theme-secondary, #e040fb);\n}\n\n.doc-example-row .row + .row {\n  margin-top: 1rem;\n}\n\n.doc-example-row .row .row {\n  border: 1px solid;\n}\n\n.doc-example-row [class*=\"col\"] {\n  padding-top: .5rem;\n  padding-bottom: .5rem;\n  color: #fff;\n  background-color: #64b5f6;\n  background-color: var(--theme-primary-light, #64b5f6);\n  text-align: center;\n}\n\n.doc-example-row [class*=\"col\"]:nth-of-type(2n) {\n  background-color: #2196f3;\n  background-color: var(--theme-primary, #2196f3);\n}\n\n.doc-example-row-flex-cols .row {\n  min-height: 5rem;\n  background-color: #e3f2fd;\n  background-color: var(--theme-primary-lightest, #e3f2fd);\n}\n\n.doc-example-row-gutters .no-gutters {\n  margin-top: 1rem;\n}\n\n.doc-example-row-gutters [class^=\"col\"] > div {\n  background-color: #ea80fc;\n  background-color: var(--theme-secondary-light, #ea80fc);\n}\n\n.highlight table td {\n  padding: 5px;\n}\n\n.highlight table pre {\n  margin: 0;\n}\n\n.highlight .cm {\n  color: #999988;\n  font-style: italic;\n}\n\n.highlight .cp {\n  color: #999999;\n  font-weight: bold;\n}\n\n.highlight .c1 {\n  color: #999988;\n  font-style: italic;\n}\n\n.highlight .cs {\n  color: #999999;\n  font-weight: bold;\n  font-style: italic;\n}\n\n.highlight .c, .highlight .cd {\n  color: #999988;\n  font-style: italic;\n}\n\n.highlight .err {\n  color: #a61717;\n  background-color: #e3d2d2;\n}\n\n.highlight .gd {\n  color: #000000;\n  background-color: #ffdddd;\n}\n\n.highlight .ge {\n  color: #000000;\n  font-style: italic;\n}\n\n.highlight .gr {\n  color: #aa0000;\n}\n\n.highlight .gh {\n  color: #999999;\n}\n\n.highlight .gi {\n  color: #000000;\n  background-color: #ddffdd;\n}\n\n.highlight .go {\n  color: #888888;\n}\n\n.highlight .gp {\n  color: #555555;\n}\n\n.highlight .gs {\n  font-weight: bold;\n}\n\n.highlight .gu {\n  color: #aaaaaa;\n}\n\n.highlight .gt {\n  color: #aa0000;\n}\n\n.highlight .kc {\n  color: #000000;\n  font-weight: bold;\n}\n\n.highlight .kd {\n  color: #000000;\n  font-weight: bold;\n}\n\n.highlight .kn {\n  color: #000000;\n  font-weight: bold;\n}\n\n.highlight .kp {\n  color: #000000;\n  font-weight: bold;\n}\n\n.highlight .kr {\n  color: #000000;\n  font-weight: bold;\n}\n\n.highlight .kt {\n  color: #445588;\n  font-weight: bold;\n}\n\n.highlight .k, .highlight .kv {\n  color: #000000;\n  font-weight: bold;\n}\n\n.highlight .mf {\n  color: #009999;\n}\n\n.highlight .mh {\n  color: #009999;\n}\n\n.highlight .il {\n  color: #009999;\n}\n\n.highlight .mi {\n  color: #009999;\n}\n\n.highlight .mo {\n  color: #009999;\n}\n\n.highlight .m, .highlight .mb, .highlight .mx {\n  color: #009999;\n}\n\n.highlight .sb {\n  color: #d14;\n}\n\n.highlight .sc {\n  color: #d14;\n}\n\n.highlight .sd {\n  color: #d14;\n}\n\n.highlight .s2 {\n  color: #d14;\n}\n\n.highlight .se {\n  color: #d14;\n}\n\n.highlight .sh {\n  color: #d14;\n}\n\n.highlight .si {\n  color: #d14;\n}\n\n.highlight .sx {\n  color: #d14;\n}\n\n.highlight .sr {\n  color: #009926;\n}\n\n.highlight .s1 {\n  color: #d14;\n}\n\n.highlight .ss {\n  color: #990073;\n}\n\n.highlight .s {\n  color: #d14;\n}\n\n.highlight .na {\n  color: #008080;\n}\n\n.highlight .bp {\n  color: #999999;\n}\n\n.highlight .nb {\n  color: #0086B3;\n}\n\n.highlight .nc {\n  color: #445588;\n  font-weight: bold;\n}\n\n.highlight .no {\n  color: #008080;\n}\n\n.highlight .nd {\n  color: #3c5d5d;\n  font-weight: bold;\n}\n\n.highlight .ni {\n  color: #800080;\n}\n\n.highlight .ne {\n  color: #990000;\n  font-weight: bold;\n}\n\n.highlight .nf {\n  color: #990000;\n  font-weight: bold;\n}\n\n.highlight .nl {\n  color: #990000;\n  font-weight: bold;\n}\n\n.highlight .nn {\n  color: #555555;\n}\n\n.highlight .nt {\n  color: #000080;\n}\n\n.highlight .vc {\n  color: #008080;\n}\n\n.highlight .vg {\n  color: #008080;\n}\n\n.highlight .vi {\n  color: #008080;\n}\n\n.highlight .nv {\n  color: #008080;\n}\n\n.highlight .ow {\n  color: #000000;\n  font-weight: bold;\n}\n\n.highlight .o {\n  color: #000000;\n  font-weight: bold;\n}\n\n.highlight .w {\n  color: #bbbbbb;\n}\n\n.highlight {\n  background-color: #f8f8f8;\n}\n\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $theme-property-values (_variables.scss).\n */\n.highlighter-rouge {\n  margin-bottom: 1rem;\n}\n\n.highlighter-rouge:hover {\n  position: relative;\n}\n\n.highlighter-rouge:hover .doc-code-copy {\n  display: block;\n}\n\n.highlight {\n  padding: 1rem;\n  border: 1px solid;\n  border-color: #e1bee7;\n  border-color: var(--theme-secondary-lighter, #e1bee7);\n  -ms-overflow-style: -ms-autohiding-scrollbar;\n  background-color: transparent;\n}\n\n.highlight pre {\n  padding: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  border: 0;\n  background-color: transparent;\n}\n\n.highlight pre code {\n  font-size: inherit;\n}\n\n.doc-color-group {\n  color: #fff;\n}\n\n.doc-primary-color {\n  margin-bottom: .5rem;\n}\n\n.doc-color-title {\n  padding: .75rem 1rem 2rem;\n}\n\n.doc-color {\n  display: flex;\n  justify-content: space-between;\n  padding: .75rem 1rem;\n}\n\n.doc-color-dark {\n  color: rgba(0, 0, 0, 0.87);\n}\n\n.doc-color-a {\n  margin-top: .5rem;\n}\n\n.doc-color-panel {\n  padding-left: 10px;\n  padding-right: 10px;\n  margin-bottom: 3rem;\n}\n\n.doc-color-panel > .col {\n  padding-left: 0;\n  padding-right: 0;\n}\n","// 定义主题相关 function\n@import \"../base/functions/math/pow\";\n@import \"../base/functions/rgba-to-rgb\";\n\n// sass 中只能精确到 15 位，即 precision 最大为15\n\n// 颜色色彩系数\n// 例如 coefficient(0) => 0   coefficient(1) => .000303526983549\n// coefficient(2) => .000607053967098  coefficient(3) => .000910580950647\n// 如果不用第三方 pow 函数求解，也可以使用提前用 JavaScript 计算好的数组\n// 比如 $mdc-theme-linear-channel-values: 0 .0003035269835488375 .000607053967097675 .0009105809506465125;\n// 注意 sass 中的数组下标是从 1 开始\n@function coefficient($rgb) {\n  $rgb: $rgb / 255;\n  @return if($rgb < .03928, $rgb / 12.92, pow(($rgb + .055) / 1.055, 2.4));\n}\n\n// 计算色彩的相对亮度\n// 遵循 WCAG 2.0 规范 https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n// https://www.w3.org/Translations/WCAG20-zh/  页面中查找 相对亮度\n// 颜色分为 R G B 三基色, 值从 0 到 255\n// 对于sRGB色彩空间，色彩的相对亮度是指定义 L = 0.2126 * R + 0.7152 * G + 0.0722 * B，其中R，G和B的定义为\n//  function f($color) {\n//   $color = $color / 255;\n//   return $color < 0.03928 ? $color / 12.92 : Math.pow(($color + 0.055) / 1.055, 2.4);\n// }\n// 该定义已封装为函数 coefficient\n@function theme-luminance($color) {\n  // 注意这里不需要加 1\n  $red: red($color);\n  $green: green($color);\n  $blue: blue($color);\n  $r: coefficient($red);\n  $g: coefficient($green);\n  $b: coefficient($blue);\n  @return .2126 * $r + .7152 * $g + .0722 * $b;\n}\n\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n@function theme-contrast-ratio($back, $front) {\n  $back-luminance: theme-luminance($back) + .05;\n  $fore-luminance: theme-luminance($front) + .05;\n  // 明亮度最大除以最小得多对比度\n  @return max($back-luminance, $fore-luminance) / min($back-luminance, $fore-luminance);\n}\n\n// 根据给定的颜色来判断色调是浅色还是深色\n@function theme-tone($color) {\n  //$alpha: alpha($color);\n  //// 如果是透明色，需要先转换为对应的不透明色\n  //@if ($alpha < 1) {\n  //  $color: rgba-to-rgb($color, $background: rgb(red($color), green($color), blue($color)));\n  //}\n  // 最小对比度设为 3.1\n  $minimum-contrast: 3.1;\n  $light-contrast: theme-contrast-ratio($color, #fff);\n  $dark-contrast: theme-contrast-ratio($color, rgba(#000, .87));\n\n  // 当给定颜色与白色的对比度小于 3.1时，并且给定颜色与黑色的对比度大于给定颜色与白色的对比度时，\n  // 返回 dark，否则 light\n\n  @if ($light-contrast < $minimum-contrast) and ($dark-contrast > $light-contrast) {\n    @return \"light\";\n  } @else {\n    @return \"dark\";\n  }\n}\n\n// 颜色的对比色调，即深颜色对应的对比色调为浅颜色\n// 如果$color是浅色，则返回深色 dark，否则为浅色 light\n@function theme-contrast-tone($color) {\n  @return if(theme-tone($color) == \"dark\", \"light\", \"dark\");\n}\n\n// 根据 $theme-contrast-tone-property-values 中的 key 计算对应的 CSS 变量名\n// 比如 primary-on-primary 对应的变量名为 --theme-#{$theme-primary-contrast-tone}-primary\n// --theme-light-primary\n@function theme-contrast-tone-var($theme-contrast-tone-property) {\n  $on-index: str-index($theme-contrast-tone-property, \"-on-\");\n  $on-prev-str: str-slice($theme-contrast-tone-property, 0, $on-index - 1);\n  $on-next-str: str-slice($theme-contrast-tone-property, $on-index + 4);\n  $contrast-tone: null;\n\n  // 这里 scss 不支持形如 js 取变量的方式，故需要处理多个判断\n  @if ($on-next-str == \"light\") {\n    $contrast-tone: dark;\n  } @else if ($on-next-str == \"dark\") {\n    $contrast-tone: light;\n  } @else if ($on-next-str == \"primary\") {\n    $contrast-tone: $theme-primary-contrast-tone;\n  } @else if ($on-next-str == \"primary-light\") {\n    $contrast-tone: $theme-primary-light-contrast-tone;\n  } @else if ($on-next-str == \"primary-lighter\") {\n    $contrast-tone: $theme-primary-lighter-contrast-tone;\n  } @else if ($on-next-str == \"primary-lightest\") {\n    $contrast-tone: $theme-primary-lightest-contrast-tone;\n  } @else if ($on-next-str == \"primary-dark\") {\n    $contrast-tone: $theme-primary-dark-contrast-tone;\n  } @else if ($on-next-str == \"primary-darker\") {\n    $contrast-tone: $theme-primary-darker-contrast-tone;\n  } @else if ($on-next-str == \"primary-darkest\") {\n    $contrast-tone: $theme-primary-darkest-contrast-tone;\n  } @else if ($on-next-str == \"secondary\") {\n    $contrast-tone: $theme-secondary-contrast-tone;\n  } @else if ($on-next-str == \"secondary-light\") {\n    $contrast-tone: $theme-secondary-light-contrast-tone;\n  } @else if ($on-next-str == \"secondary-lighter\") {\n    $contrast-tone: $theme-secondary-lighter-contrast-tone;\n  } @else if ($on-next-str == \"secondary-lightest\") {\n    $contrast-tone: $theme-secondary-lightest-contrast-tone;\n  } @else if ($on-next-str == \"secondary-dark\") {\n    $contrast-tone: $theme-secondary-dark-contrast-tone;\n  } @else if ($on-next-str == \"secondary-darker\") {\n    $contrast-tone: $theme-secondary-darker-contrast-tone;\n  } @else if ($on-next-str == \"secondary-darkest\") {\n    $contrast-tone: $theme-secondary-darkest-contrast-tone;\n  } @else if ($on-next-str == \"background\") {\n    $contrast-tone: $theme-background-contrast-tone;\n  }\n\n  @return #{$contrast-tone}-#{$on-prev-str};\n}\n\n","// theme mixin\n@import \"./variable\";\n@import \"./function\";\n\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $theme-property-values (_variables.scss).\n */\n\n// 给属性 $property 设置颜色 $style 值\n// 属性 $property 一般用在 color background-color border-color 等，也可用在任何可以设置颜色值的属性上\n// $style 应该是 $theme-property-values 中某个 key\n// 该 mixin 主要用来设置主题颜色值，并且设置了主题 css 变量值\n// 用户通过修改 css 变量值可以动态的修改整个主题值，比如在 body 上修改 css 变量值\n@mixin theme-color-prop($property, $style, $important) {\n  @if $important {\n    #{$property}: map-get($theme-property-values, $style) !important;\n    #{$property}: var(--theme-#{$style}, map-get($theme-property-values, $style)) !important;\n  } @else {\n    #{$property}: map-get($theme-property-values, $style);\n    #{$property}: var(--theme-#{$style}, map-get($theme-property-values, $style));\n  }\n}\n\n// 用来设置主题色对应的对比色调值，浅色还是深色\n// $style 应该是 $theme-contrast-tone-property-values 中某个 key\n// 该 mixin 除了设置了对比色调值，还设置了对应的 css 变量值\n@mixin theme-contrast-tone-prop($property, $style, $important) {\n  // 根据 $style 返回变量，主要是 light 或 dark 变量\n  $theme-var: theme-contrast-tone-var($style);\n  @if $important {\n    #{$property}: map-get($theme-contrast-tone-property-values, $style) !important;\n    #{$property}: var(--theme-#{$theme-var}, map-get($theme-contrast-tone-property-values, $style)) !important;\n  } @else {\n    #{$property}: map-get($theme-contrast-tone-property-values, $style);\n    #{$property}: var(--theme-#{$theme-var}, map-get($theme-contrast-tone-property-values, $style));\n  }\n}\n\n// 设置辅助颜色 mixin\n// 根据给定的 $style ($theme-assist-colors 中的 key) 和 $opacity 设置颜色\n@mixin theme-assist($property, $style, $opacity: 1, $important: false) {\n  @if type-of($style) == \"color\" {\n    @if $important {\n      #{$property}: $style !important;\n    } @else {\n      #{$property}: $style;\n    }\n  } @else {\n    $color: map-get($theme-assist-colors, $style);\n\n    @if ($property == \"backgroud-color\" and $opacity != 1) {\n      // 变量 --theme-#{$style} 在 theme.scss 中定义\n      $css-var: var(--theme-#{$style}, $color);\n      @if $important {\n        background-color: rgba($color, $opacity) !important;\n      } @else {\n        background-color: rgba($color, $opacity);\n      }\n\n      // 可以动态的设置颜色透明度，属于 CSS 4 color 范畴，目前浏览器支持的不是很好\n      // 可以用 rgba 来代替，但只能静态设置，不可以随着颜色和透明度的变化动态设置\n      // https://drafts.csswg.org/css-color/#modifying-colors\n      @supports (background-color: color(green a(10%))) {\n        @if $important {\n          background-color: color(#{$css-var} a(#{percentage($opacity)})) !important;\n        } @else {\n          background-color: color(#{$css-var} a(#{percentage($opacity)}));\n        }\n      }\n    } @else {\n      // 也可以使用 alpha($color); 区别是 function alpha 也可以处理 the proprietary Microsoft `alpha(opacity=20)\n      // 而 function opacity 只支持颜色值，如果不是颜色值则报错\n      $alpha: opacity($color);\n\n      @if ($alpha != 1) {\n        @if $important {\n          #{$property}: $color !important;\n        } @else {\n          #{$property}: $color;\n        }\n      } @else {\n        @if $important {\n          #{$property}: rgba($color, $opacity) !important;\n        } @else {\n          #{$property}: rgba($color, $opacity);\n        }\n      }\n    }\n\n    // 因为不支持以下写法，所以只处理 $opacity == 1 的情况\n    // #{$property}: rgba(var(--theme-#{$style}, $color), $opacity);\n    @if ($opacity == 1) {\n      #{$property}: var(--theme-#{$style}, $color);\n    }\n  }\n}\n\n// 糅合 theme-color-prop 和 theme-contrast-tone-prop\n// 如果 $style 是颜色值，则直接设置颜色\n@mixin theme-prop($property, $style, $important: false) {\n  @if type-of($style) == \"color\" {\n    @if $important {\n      #{$property}: $style !important;\n    } @else {\n      #{$property}: $style;\n    }\n  } @else {\n    $color: map-get($theme-property-values, $style);\n    @if ($color) {\n      @include theme-color-prop($property, $style, $important);\n    } @else {\n      $color: map-get($theme-contrast-tone-property-values, $style);\n      @if ($color) {\n        @include theme-contrast-tone-prop($property, $style, $important);\n      } @else {\n        // 用辅助颜色来设置\n        $color: map-get($theme-assist-colors, $style);\n        @if ($color) {\n          @include theme-assist($property, $style, $important: $important);\n        } @else {\n          @error \"无效的主题属性值，#{$style} 必须是以下的某一 key #{map-keys($theme-property-values)}, #{map-keys($theme-contrast-tone-property-values)}\";\n        }\n      }\n    }\n  }\n}\n\n// 通过设置前后景来定制主题，该 mixin 只处理简单的 color 和 background-color ，对于更复制的需要组件单独定义\n// $style 指 $theme-property-values 或 $theme-assist-colors 中属性值\n// $fore true 指前景，false 指背景，默认 true\n@mixin theme($style, $fore: true) {\n  $themes: $theme-property-values;\n  $themes: map-merge($theme-assist-colors, $themes);\n  $color: map-get($themes, $style);\n\n  @if ($color == null) {\n    @error \"无效的主题属性值，#{$style} 必须是以下的某一 key #{map-keys($theme-property-values)}, #{map-keys($theme-assist-colors)}\";\n  }\n\n  // 色调，判断是深色还是浅色\n  $tone: theme-tone($color);\n  // 对比色调\n  $contrast-tone: theme-contrast-tone($color);\n\n  @if ($fore) {\n    color: $color;\n    color: var(--theme-#{$style}, $color);\n    background-color: map-get($theme-contrast-tone-property-values, primary-on-#{$tone});\n    background-color: var(--theme-#{$contrast-tone}-primary, map-get($theme-contrast-tone-property-values, primary-on-#{$tone}));\n  } @else {\n    color: map-get($theme-contrast-tone-property-values, primary-on-#{$tone});\n    color: var(--theme-#{$contrast-tone}-primary, map-get($theme-contrast-tone-property-values, primary-on-#{$tone}));\n    background-color: $color;\n    background-color: var(--theme-#{$style}, $color);\n  }\n}\n\n// 设置主题对应的背景和前景颜色 class\n// 如果 $tone 设为 true，则会给出对应的前景或背景对比颜色色调值（深色或浅色），\n// 这样可以突出对比度，方便阅读，在需要的地方可以调用该 mixin ，并且参数 $tone 设为 true 即可\n@mixin theme-classes($tone: false) {\n  // 设置 primary 和 secondary 以及浅色和深色背景颜色值\n  // .theme-primary-bg {background-color: #2196f3; background-color: var(--theme-primary, #2196f3);}\n  @each $style in map-keys($theme-property-values) {\n    @if $style == \"background\" {\n      // 背景色，用在背景上\n      // .theme-background {background-color: #fff; background-color: var(--theme-background, #fff);}\n      .theme-background {\n        @include theme-prop(background-color, background, true);\n        @if ($tone) {\n          @include theme-prop(color, primary-on-background, true);\n        }\n      }\n    } @else {\n      .theme-#{$style}-bg {\n        @include theme-prop(background-color, $style, true);\n        @if ($tone) {\n          @include theme-prop(color, primary-on-#{$style}, true);\n        }\n      }\n    }\n  }\n\n  // 通过添加该样式值，改变文本主题前景颜色值，对于主题色调($theme-contrast-tone-property-values)，不单独设置\n  // .theme-primary {color: #2196f3; color: var(--theme-primary, #2196f3);}\n  @each $style in map-keys($theme-property-values) {\n    @if $style != \"background\" {\n      .theme-#{$style} {\n        @include theme-prop(color, $style, true);\n        @if ($tone) {\n          @include theme-prop(background-color, primary-on-#{$style}, true);\n        }\n      }\n    }\n  }\n}\n\n// 设置辅助颜色对应的背景和前景颜色 class\n// 如果 $tone 设为 true，则会给出对应的前景或背景对比颜色色调值（深色或浅色），\n// 这样可以突出对比度，方便阅读，在需要的地方可以调用该 mixin ，并且参数 $tone 设为 true 即可\n@mixin theme-assist-classes($tone: false) {\n  // 辅助颜色背景色\n  // .theme-success-bg {background-color: #4caf50; background-color: var(--theme-success, #4caf50);}\n  @each $theme, $color in $theme-assist-colors {\n    .theme-#{$theme}-bg {\n      background-color: $color !important;\n      background-color: var(--theme-#{$theme}, $color) !important;\n      @if ($tone) {\n        $contrast-tone: theme-contrast-tone($color);\n        $color: map-get(map-get($theme-text-colors, $contrast-tone), primary);\n        color: $color !important;\n      }\n    }\n  }\n\n  // 辅助颜色前景色\n  // .theme-success {color: #4caf50; color: var(--theme-success, #4caf50);}\n  @each $theme, $color in $theme-assist-colors {\n    .theme-#{$theme} {\n      color: $color !important;\n      color: var(--theme-#{$theme}, $color) !important;\n      @if ($tone) {\n        $contrast-tone: theme-contrast-tone($color);\n        $color: map-get(map-get($theme-text-colors, $contrast-tone), primary);\n        background-color: $color !important;\n      }\n    }\n  }\n}\n\n// 设置灰度颜色对应的背景和前景颜色 class\n// 如果 $tone 设为 true，则会给出对应的前景或背景对比颜色色调值（深色或浅色），\n// 这样可以突出对比度，方便阅读，在需要的地方可以调用该 mixin ，并且参数 $tone 设为 true 即可\n@mixin theme-grey-classes($tone: false) {\n  // 灰度颜色前景-背景颜色值\n  @each $theme, $color in $greys {\n    .theme-grey-#{$theme} {\n      color: $color !important;\n      @if ($tone) {\n        $contrast-tone: theme-contrast-tone($color);\n        $color: map-get(map-get($theme-text-colors, $contrast-tone), primary);\n        background-color: $color !important;\n      }\n    }\n    .theme-grey-bg-#{$theme} {\n      background-color: $color !important;\n      @if ($tone) {\n        $contrast-tone: theme-contrast-tone($color);\n        $color: map-get(map-get($theme-text-colors, $contrast-tone), primary);\n        color: $color !important;\n      }\n    }\n  }\n}\n","@import \"../../../../scss/theme/mixin\";\n\n.drawer-toggle {\n  .icon-pure-menu {\n    @include theme-prop(color, secondary-on-dark);\n  }\n  &:hover {\n    .icon-pure-menu {\n      @include theme-prop(color, primary-on-dark);\n    }\n  }\n}\n","// 自定义主题颜色\n@import \"./color_palette\";\n@import \"../base/variables/options\";\n@import \"./function\";\n\n// 定义颜色透明度\n$alpha: .16 !default;\n\n// 主题颜色，换肤一般改变这三个基本颜色即可\n// 这三种基本颜色主题，会用在所有 CSS 组件上，\n$theme-primary: #2196f3 !default; // 主颜色，使用蓝色 $blue-500 #2196f3\n$theme-secondary: #e040fb !default; // 次颜色，也叫强调(accent)颜色，使用紫色 $purple-a-200 #e040fb\n$theme-background: #fff !default; // 背景颜色，默认白色\n\n// 主题颜色浅色\n$theme-primary-light: #64b5f6 !default; // 取 $blue-300\n$theme-secondary-light: #ea80fc !default; // 取 $purple-a-100\n\n// 主题颜色更浅色\n$theme-primary-lighter: #bbdefb !default; // 取 $blue-100\n$theme-secondary-lighter: #e1bee7 !default; // 取 $purple-100\n\n// 主题颜色最浅色\n$theme-primary-lightest: #e3f2fd !default; // 取 $blue-50\n$theme-secondary-lightest: #f3e5f5 !default; // 取 $purple-50\n\n// 主题颜色深色\n$theme-primary-dark: #1976d2 !default; // 取 $blue-700\n$theme-secondary-dark: #d500f9 !default; // 取 $purple-a-400\n\n// 主题颜色更深色\n$theme-primary-darker: #1565c0 !default; // 取 $blue-800\n$theme-secondary-darker: #aa00ff !default; // 取 $purple-a-700\n\n// 主题颜色最深色\n$theme-primary-darkest: #0d47a1 !default; // 取 $blue-900\n$theme-secondary-darkest: #4a148c !default; // 取 $purple-900\n\n// 主题颜色透明色，有的地方需要设置透明的背景色，这时可以使用该变量，比如波纹组件中\n// 如果浏览器支持了 CSS module，我们可以动态的修改 color 值，直接使用 $theme-primary 加透明参数值即可，只是目前浏览器还不支持。\n// 关于 CSS Color Level 4 提供了大量关于 Color 的处理，只是好多还没有实现，未来这些功能都实现后，CSS Color 的处理将变得更方便，更灵活，期待中......\n// https://www.w3.org/TR/2016/WD-css-color-4-20160705/\n$theme-primary-alpha: rgba($theme-primary, $alpha) !default;\n$theme-secondary-alpha: rgba($theme-secondary, $alpha) !default;\n\n// 浅色或深色色调，给出基本颜色的对比色调， light or dark\n$theme-primary-contrast-tone: theme-contrast-tone($theme-primary);\n$theme-secondary-contrast-tone: theme-contrast-tone($theme-secondary);\n\n// 主题颜色浅色对比色调\n$theme-primary-light-contrast-tone: theme-contrast-tone($theme-primary-light);\n$theme-secondary-light-contrast-tone: theme-contrast-tone($theme-secondary-light);\n\n// 主题颜色更浅色对比色调\n$theme-primary-lighter-contrast-tone: theme-contrast-tone($theme-primary-lighter);\n$theme-secondary-lighter-contrast-tone: theme-contrast-tone($theme-secondary-lighter);\n\n// 主题颜色最浅色对比色调\n$theme-primary-lightest-contrast-tone: theme-contrast-tone($theme-primary-lightest);\n$theme-secondary-lightest-contrast-tone: theme-contrast-tone($theme-secondary-lightest);\n\n// 主题颜色深色对比色调\n$theme-primary-dark-contrast-tone: theme-contrast-tone($theme-primary-dark);\n$theme-secondary-dark-contrast-tone: theme-contrast-tone($theme-secondary-dark);\n\n// 主题颜色更深色对比色调\n$theme-primary-darker-contrast-tone: theme-contrast-tone($theme-primary-darker);\n$theme-secondary-darker-contrast-tone: theme-contrast-tone($theme-secondary-darker);\n\n// 主题颜色最深色对比色调\n$theme-primary-darkest-contrast-tone: theme-contrast-tone($theme-primary-darkest);\n$theme-secondary-darkest-contrast-tone: theme-contrast-tone($theme-secondary-darkest);\n\n// 主题颜色透明色对比色调\n$theme-primary-alpha-contrast-tone: theme-contrast-tone($theme-primary-alpha);\n$theme-secondary-alpha-contrast-tone: theme-contrast-tone($theme-secondary-alpha);\n\n// 背景色对比色调\n$theme-background-contrast-tone: theme-contrast-tone($theme-background);\n\n// 定义文本默认颜色，默认颜色深色用黑色，浅色用白色\n// 分为基本颜色、次要颜色、提示性颜色和禁用颜色，分别用在基础颜色、过渡颜色、提示或暗色和表单 disabled readonly 以及其他禁用\n$theme-text-colors: (\n  dark: (\n    primary: rgba(0, 0, 0, .87),\n    secondary: rgba(0, 0, 0, .54),\n    hint: rgba(0, 0, 0, .38),\n    disabled: rgba(0, 0, 0, .38)\n  ),\n  light: (\n    primary: #ffffff,\n    secondary: rgba(255, 255, 255, .7),\n    hint: rgba(255, 255, 255, .5),\n    disabled: rgba(255, 255, 255, .5)\n  )\n);\n\n// 主题属性值\n$theme-property-values: (\n  // 主题颜色\n  primary: $theme-primary,\n  secondary: $theme-secondary,\n  background: $theme-background,\n\n  // 主题颜色浅色\n  primary-light: $theme-primary-light,\n  secondary-light: $theme-secondary-light,\n\n  // 主题颜色更浅色\n  primary-lighter: $theme-primary-lighter,\n  secondary-lighter: $theme-secondary-lighter,\n\n  // 主题颜色最浅色\n  primary-lightest: $theme-primary-lightest,\n  secondary-lightest: $theme-secondary-lightest,\n\n  // 主题颜色深色\n  primary-dark: $theme-primary-dark,\n  secondary-dark: $theme-secondary-dark,\n\n  // 主题颜色更深色\n  primary-darker: $theme-primary-darker,\n  secondary-darker: $theme-secondary-darker,\n\n  // 主题颜色最深色\n  primary-darkest: $theme-primary-darkest,\n  secondary-darkest: $theme-secondary-darkest,\n\n  // 主题颜色透明色\n  primary-alpha: $theme-primary-alpha,\n  secondary-alpha: $theme-secondary-alpha,\n\n) !default;\n\n// 主题基本颜色对比色调值集合，根据主题基本颜色计算出对应的对比色调值，浅色还是深色色调值\n$theme-contrast-tone-property-values: (\n  // 可以用在 background-color border-color 或 color 等可以设置颜色的属性上\n  // 当 map-get($theme-text-colors, $theme-primary-contrast-tone) 返回 light 时，对应浅色值\n  // 当 map-get($theme-text-colors, $theme-primary-contrast-tone) 返回 dark 时，对应深色值\n\n  // 用在 $theme-primary 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary: map-get(map-get($theme-text-colors, $theme-primary-contrast-tone), primary),\n  secondary-on-primary: map-get(map-get($theme-text-colors, $theme-primary-contrast-tone), secondary),\n  hint-on-primary: map-get(map-get($theme-text-colors, $theme-primary-contrast-tone), hint),\n  disabled-on-primary: map-get(map-get($theme-text-colors, $theme-primary-contrast-tone), disabled),\n\n  // 用在 $theme-primary-light 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary-light: map-get(map-get($theme-text-colors, $theme-primary-light-contrast-tone), primary),\n  secondary-on-primary-light: map-get(map-get($theme-text-colors, $theme-primary-light-contrast-tone), secondary),\n  hint-on-primary-light: map-get(map-get($theme-text-colors, $theme-primary-light-contrast-tone), hint),\n  disabled-on-primary-light: map-get(map-get($theme-text-colors, $theme-primary-light-contrast-tone), disabled),\n\n  // 用在 $theme-primary-lighter 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary-lighter: map-get(map-get($theme-text-colors, $theme-primary-lighter-contrast-tone), primary),\n  secondary-on-primary-lighter: map-get(map-get($theme-text-colors, $theme-primary-lighter-contrast-tone), secondary),\n  hint-on-primary-lighter: map-get(map-get($theme-text-colors, $theme-primary-lighter-contrast-tone), hint),\n  disabled-on-primary-lighter: map-get(map-get($theme-text-colors, $theme-primary-lighter-contrast-tone), disabled),\n\n  // 用在 $theme-primary-lightest 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary-lightest: map-get(map-get($theme-text-colors, $theme-primary-lightest-contrast-tone), primary),\n  secondary-on-primary-lightest: map-get(map-get($theme-text-colors, $theme-primary-lightest-contrast-tone), secondary),\n  hint-on-primary-lightest: map-get(map-get($theme-text-colors, $theme-primary-lightest-contrast-tone), hint),\n  disabled-on-primary-lightest: map-get(map-get($theme-text-colors, $theme-primary-lightest-contrast-tone), disabled),\n\n  // 用在 $theme-primary-dark 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary-dark: map-get(map-get($theme-text-colors, $theme-primary-dark-contrast-tone), primary),\n  secondary-on-primary-dark: map-get(map-get($theme-text-colors, $theme-primary-dark-contrast-tone), secondary),\n  hint-on-primary-dark: map-get(map-get($theme-text-colors, $theme-primary-dark-contrast-tone), hint),\n  disabled-on-primary-dark: map-get(map-get($theme-text-colors, $theme-primary-dark-contrast-tone), disabled),\n\n  // 用在 $theme-primary-darker 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary-darker: map-get(map-get($theme-text-colors, $theme-primary-darker-contrast-tone), primary),\n  secondary-on-primary-darker: map-get(map-get($theme-text-colors, $theme-primary-darker-contrast-tone), secondary),\n  hint-on-primary-darker: map-get(map-get($theme-text-colors, $theme-primary-darker-contrast-tone), hint),\n  disabled-on-primary-darker: map-get(map-get($theme-text-colors, $theme-primary-darker-contrast-tone), disabled),\n\n  // 用在 $theme-primary-darkest 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary-darkest: map-get(map-get($theme-text-colors, $theme-primary-darkest-contrast-tone), primary),\n  secondary-on-primary-darkest: map-get(map-get($theme-text-colors, $theme-primary-darkest-contrast-tone), secondary),\n  hint-on-primary-darkest: map-get(map-get($theme-text-colors, $theme-primary-darkest-contrast-tone), hint),\n  disabled-on-primary-darkest: map-get(map-get($theme-text-colors, $theme-primary-darkest-contrast-tone), disabled),\n\n  // 用在主题颜色主颜色透明色 $theme-primary-alpha 上的 primary secondary hint 和 disabled 对比颜色，深色主题用浅色对比色调\n  primary-on-primary-alpha: map-get(map-get($theme-text-colors, $theme-primary-alpha-contrast-tone), primary),\n  secondary-on-primary-alpha: map-get(map-get($theme-text-colors, $theme-primary-alpha-contrast-tone), secondary),\n  hint-on-primary-alpha: map-get(map-get($theme-text-colors, $theme-primary-alpha-contrast-tone), hint),\n  disabled-on-primary-alpha: map-get(map-get($theme-text-colors, $theme-primary-alpha-contrast-tone), disabled),\n\n  // 用在 $theme-secondary 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary: map-get(map-get($theme-text-colors, $theme-secondary-contrast-tone), primary),\n  secondary-on-secondary: map-get(map-get($theme-text-colors, $theme-secondary-contrast-tone), secondary),\n  hint-on-secondary: map-get(map-get($theme-text-colors, $theme-secondary-contrast-tone), hint),\n  disabled-on-secondary: map-get(map-get($theme-text-colors, $theme-secondary-contrast-tone), disabled),\n\n  // 用在 $theme-secondary-light 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary-light: map-get(map-get($theme-text-colors, $theme-secondary-light-contrast-tone), primary),\n  secondary-on-secondary-light: map-get(map-get($theme-text-colors, $theme-secondary-light-contrast-tone), secondary),\n  hint-on-secondary-light: map-get(map-get($theme-text-colors, $theme-secondary-light-contrast-tone), hint),\n  disabled-on-secondary-light: map-get(map-get($theme-text-colors, $theme-secondary-light-contrast-tone), disabled),\n\n  // 用在 $theme-secondary-lighter 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary-lighter: map-get(map-get($theme-text-colors, $theme-secondary-lighter-contrast-tone), primary),\n  secondary-on-secondary-lighter: map-get(map-get($theme-text-colors, $theme-secondary-lighter-contrast-tone), secondary),\n  hint-on-secondary-lighter: map-get(map-get($theme-text-colors, $theme-secondary-lighter-contrast-tone), hint),\n  disabled-on-secondary-lighter: map-get(map-get($theme-text-colors, $theme-secondary-lighter-contrast-tone), disabled),\n\n  // 用在 $theme-secondary-lightest 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary-lightest: map-get(map-get($theme-text-colors, $theme-secondary-lightest-contrast-tone), primary),\n  secondary-on-secondary-lightest: map-get(map-get($theme-text-colors, $theme-secondary-lightest-contrast-tone), secondary),\n  hint-on-secondary-lightest: map-get(map-get($theme-text-colors, $theme-secondary-lightest-contrast-tone), hint),\n  disabled-on-secondary-lightest: map-get(map-get($theme-text-colors, $theme-secondary-lightest-contrast-tone), disabled),\n\n  // 用在 $theme-secondary-dark 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary-dark: map-get(map-get($theme-text-colors, $theme-secondary-dark-contrast-tone), primary),\n  secondary-on-secondary-dark: map-get(map-get($theme-text-colors, $theme-secondary-dark-contrast-tone), secondary),\n  hint-on-secondary-dark: map-get(map-get($theme-text-colors, $theme-secondary-dark-contrast-tone), hint),\n  disabled-on-secondary-dark: map-get(map-get($theme-text-colors, $theme-secondary-dark-contrast-tone), disabled),\n\n  // 用在 $theme-secondary-darker 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary-darker: map-get(map-get($theme-text-colors, $theme-secondary-darker-contrast-tone), primary),\n  secondary-on-secondary-darker: map-get(map-get($theme-text-colors, $theme-secondary-darker-contrast-tone), secondary),\n  hint-on-secondary-darker: map-get(map-get($theme-text-colors, $theme-secondary-darker-contrast-tone), hint),\n  disabled-on-secondary-darker: map-get(map-get($theme-text-colors, $theme-secondary-darker-contrast-tone), disabled),\n\n  // 用在 $theme-secondary-darkest 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary-darkest: map-get(map-get($theme-text-colors, $theme-secondary-darkest-contrast-tone), primary),\n  secondary-on-secondary-darkest: map-get(map-get($theme-text-colors, $theme-secondary-darkest-contrast-tone), secondary),\n  hint-on-secondary-darkest: map-get(map-get($theme-text-colors, $theme-secondary-darkest-contrast-tone), hint),\n  disabled-on-secondary-darkest: map-get(map-get($theme-text-colors, $theme-secondary-darkest-contrast-tone), disabled),\n\n  // 用在主题颜色次颜色透明色 $theme-secondary-alpha 上的 primary secondary hint 和 disabled 对比颜色，深色主题用浅色对比色调\n  primary-on-secondary-alpha: map-get(map-get($theme-text-colors, $theme-secondary-alpha-contrast-tone), primary),\n  secondary-on-secondary-alpha: map-get(map-get($theme-text-colors, $theme-secondary-alpha-contrast-tone), secondary),\n  hint-on-secondary-alpha: map-get(map-get($theme-text-colors, $theme-secondary-alpha-contrast-tone), hint),\n  disabled-on-secondary-alpha: map-get(map-get($theme-text-colors, $theme-secondary-alpha-contrast-tone), disabled),\n\n  // 用在 $theme-background 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-background: map-get(map-get($theme-text-colors, $theme-background-contrast-tone), primary),\n  secondary-on-background: map-get(map-get($theme-text-colors, $theme-background-contrast-tone), secondary),\n  hint-on-background: map-get(map-get($theme-text-colors, $theme-background-contrast-tone), hint),\n  disabled-on-background: map-get(map-get($theme-text-colors, $theme-background-contrast-tone), disabled),\n\n  // 用在浅色主题上的 primary secondary hint 和 disabled 对比色调，浅色主题用深色对比色调\n  primary-on-light: map-get(map-get($theme-text-colors, dark), primary),\n  secondary-on-light: map-get(map-get($theme-text-colors, dark), secondary),\n  hint-on-light: map-get(map-get($theme-text-colors, dark), hint),\n  disabled-on-light: map-get(map-get($theme-text-colors, dark), disabled),\n\n  // 用在深色主题上的 primary secondary hint 和 disabled 对比颜色，深色主题用浅色对比色调\n  primary-on-dark: map-get(map-get($theme-text-colors, light), primary),\n  secondary-on-dark: map-get(map-get($theme-text-colors, light), secondary),\n  hint-on-dark: map-get(map-get($theme-text-colors, light), hint),\n  disabled-on-dark: map-get(map-get($theme-text-colors, light), disabled),\n) !default;\n\n// 除了三种基本颜色外，又定义了成功 success 、信息 info、警告 warning 、错误 error 四种辅助颜色，\n// 这四种颜色主要用在背景，文本，按钮等上，用来区分文本颜色和背景，以及表单样式（比如校验失败和成功的颜色）等\n$theme-assist: (\"success\", \"info\", \"warning\", \"error\") !default;\n\n// 辅助颜色值\n$theme-assist-colors: (\n  success: #43a047, // $green-600\n  info: #0097a7, // $cyan-700\n  warning: #fb8c00, // $orange-600\n  error: #f44336, //$red-500\n\n  // 辅助颜色浅色\n  success-light: #81c784, // $green-300\n  info-light: #4dd0e1, // $cyan-300\n  warning-light: #ffb74d, // $orange-300\n  error-light: #e57373, // $red-300\n\n  // 辅助颜色更浅色\n  success-lighter: #c8e6c9, // $green-100\n  info-lighter: #b2ebf2, // $cyan-100\n  warning-lighter: #ffe0b2, // $orange-100\n  error-lighter: #ffcdd2, // $red-100\n\n  // 辅助颜色深色\n  success-dark: #2e7d32, // $green-800\n  info-dark: #00838f, // $cyan-800\n  warning-dark: #ef6c00, // $orange-800\n  error-dark: #c62828, // $red-800\n\n  // 辅助颜色透明色\n  success-alpha: rgba(#4caf50, $alpha),\n  info-alpha: rgba(#00bcd4, $alpha),\n  warning-alpha: rgba(#ff9800, $alpha),\n  error-alpha: rgba(#f44336, $alpha),\n) !default;\n\n// 常用灰色颜色，提供了黑色透明度和灰色本身颜色两种方案，根据配置项 $enable-transparent 来选择其中一种方案\n// 默认使用黑色透明度，可以通过修改 base/variables/_options.scss 中变量 $enable-transparent 来选择不同的方案\n\n// 灰色颜色，对于灰色颜色，这里没有采用 css 变量处理\n$greys: (\n  50: #fafafa,\n  100: #f5f5f5,\n  200: #eeeeee,\n  300: #e0e0e0,\n  400: #bdbdbd,\n  500: #9e9e9e,\n  600: #757575,\n  700: #616161,\n  800: #424242,\n  900: #212121\n) !default;\n\n// 灰色透明色\n$greys-transparent: (\n  50: rgba(0, 0, 0, .02), // 相当于 #fafafa;\n  100: rgba(0, 0, 0, .04), // 相当于 #f5f5f5\n  200: rgba(0, 0, 0, .065), // 相当于 #eeeeee\n  300: rgba(0, 0, 0, .12), // 相当于 #e0e0e0\n  400: rgba(0, 0, 0, .26), // 相当于 #bdbdbd\n  500: rgba(0, 0, 0, .38), // 相当于 #9e9e9e\n  600: rgba(0, 0, 0, .54), // 相当于 #757575\n  700: rgba(0, 0, 0, .62), // 相当于 #616161\n  800: rgba(0, 0, 0, .74), // 相当于 #424242\n  900: rgba(0, 0, 0, .87) // 相当于 #212121\n) !default;\n\n// 白色、黑色和透明色\n$white: #ffffff !default;\n$black: #000000 !default;\n$transparent: rgba(0, 0, 0, 0) !default; // 透明色\n\n$grey-color-50: if($enable-transparent, map-get($greys-transparent, 50), map-get($greys, 50)) !default;\n$grey-color-100: if($enable-transparent, map-get($greys-transparent, 100), map-get($greys, 100)) !default;\n$grey-color-200: if($enable-transparent, map-get($greys-transparent, 200), map-get($greys, 200)) !default;\n$grey-color-300: if($enable-transparent, map-get($greys-transparent, 300), map-get($greys, 300)) !default;\n$grey-color-400: if($enable-transparent, map-get($greys-transparent, 400), map-get($greys, 400)) !default;\n$grey-color-500: if($enable-transparent, map-get($greys-transparent, 500), map-get($greys, 500)) !default;\n$grey-color-600: if($enable-transparent, map-get($greys-transparent, 600), map-get($greys, 600)) !default;\n$grey-color-700: if($enable-transparent, map-get($greys-transparent, 700), map-get($greys, 700)) !default;\n$grey-color-800: if($enable-transparent, map-get($greys-transparent, 800), map-get($greys, 800)) !default;\n$grey-color-900: if($enable-transparent, map-get($greys-transparent, 900), map-get($greys, 900)) !default;\n","// 页面底部样式\n\n@import \"../../../../scss/theme/variable\";\n\n.footer-assist {\n  // 此处的数值等于 footer 的高度 + 预留的间距\n  padding-top: 4.5rem;\n}\n\n.footer {\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  padding: 1rem 0;\n  border-top: 1px solid $grey-color-300;\n  color: map-get(map-get($theme-text-colors, dark), secondary);\n}\n\n","@import \"../../../../scss/theme/variable\";\n@import \"../../../../scss/theme/mixin\";\n\n.perfect-menu {\n  &.menu, .menu {\n    margin-left: 0;\n  }\n  .menu-title {\n    padding: .5rem 1rem;\n\n    &:hover {\n      @include theme-prop(color, primary-light);\n    }\n\n    &.active {\n      @include theme-prop(color, primary);\n    }\n  }\n\n  .menu-sub-title {\n    &:hover {\n      @include theme-prop(color, primary);\n    }\n\n    &.active {\n      border-right: 3px solid;\n      @include theme-prop(color, primary-darker);\n      @include theme-prop(background-color, primary-lightest);\n\n      // 可以动态的设置颜色透明度，属于 CSS 4 color 范畴，目前浏览器都不支持\n      // 可以用 rgba 来代替，但只能静态设置，不可以随着颜色和透明度的变化动态设置\n      // https://drafts.csswg.org/css-color/#modifying-colors\n      // https://www.w3cplus.com/css4/color-mod.html\n      @supports (background-color: color(green a(10%))) {\n        $bg-color: var(--theme-primary-lightest);\n        $opacity: .8;\n        background-color: color(#{$bg-color} a(#{percentage($opacity)}));\n      }\n    }\n  }\n}\n\n","\n// 目录大纲编号 start\n.catalogue-counter {\n  counter-reset: outline1;\n  > h1, > h2, > h3, > h4, > h5, > h6 {\n    &::before {\n      margin-right: .5rem;\n    }\n  }\n}\n\n// 如果大纲第一级别是 h1\n.catalogue-counter > h1 {\n  counter-reset: outline2;\n  &::before {\n    content: counter(outline1, decimal) \". \";\n    counter-increment: outline1;\n  }\n  ~ h2 {\n    counter-reset: outline3;\n  }\n  ~ h2::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\";\n    counter-increment: outline2;\n  }\n  ~ h2 ~ h3 {\n    counter-reset: outline4;\n  }\n  ~ h2 ~ h3::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\";\n    counter-increment: outline3;\n  }\n\n  ~ h2 ~ h3 ~ h4 {\n    counter-reset: outline5;\n  }\n\n  ~ h2 ~ h3 ~ h4::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\";\n    counter-increment: outline4;\n  }\n\n  ~ h2 ~ h3 ~ h4 ~ h5 {\n    counter-reset: outline6;\n  }\n\n  ~ h2 ~ h3 ~ h4 ~ h5::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\" counter(outline5, decimal) \".\";\n    counter-increment: outline5;\n  }\n\n  ~ h2 ~ h3 ~ h4 ~ h5 ~ h6::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\" counter(outline5, decimal) \".\" counter(outline6, decimal) \".\";\n    counter-increment: outline6;\n  }\n}\n\n// 如果大纲第一级别是 h2\n.catalogue-counter > h2 {\n  counter-reset: outline2;\n  &::before {\n    content: counter(outline1, decimal) \".\";\n    counter-increment: outline1;\n  }\n  ~ h3 {\n    counter-reset: outline3;\n  }\n  ~ h3::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\";\n    counter-increment: outline2;\n  }\n  ~ h3 ~ h4 {\n    counter-reset: outline4;\n  }\n  ~ h3 ~ h4::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\";\n    counter-increment: outline3;\n  }\n\n  ~ h3 ~ h4 ~ h5 {\n    counter-reset: outline5;\n  }\n  ~ h3 ~ h4 ~ h5::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\";\n    counter-increment: outline4;\n  }\n\n  ~ h3 ~ h4 ~ h5 ~ h6::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\" counter(outline5, decimal) \".\";\n    counter-increment: outline5;\n  }\n}\n\n// 如果大纲第一级别是 h3（h4以后的不再考虑）\n.catalogue-counter > h3 {\n  counter-reset: outline2;\n  &::before {\n    content: counter(outline1, decimal) \".\";\n    counter-increment: outline1;\n  }\n  ~ h4 {\n    counter-reset: outline3;\n  }\n  ~ h4::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\";\n    counter-increment: outline2;\n  }\n  ~ h4 ~ h5 {\n    counter-reset: outline4;\n  }\n  ~ h4 ~ h5::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\";\n    counter-increment: outline3;\n  }\n\n  ~ h4 ~ h5 ~ h6::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\";\n    counter-increment: outline4;\n  }\n}\n\n// 目录大纲编号 end\n","@import \"../../../../scss/theme/mixin\";\n@import \"../../../../scss/animation/variable\";\n\n.anchor-link {\n  font-weight: 400;\n  @include theme-prop(color, primary-light);\n  transition:  color .16s $animation-ease-out, opacity .16s $animation-ease-out;\n\n  &:hover {\n    @include theme-prop(color, primary);\n    text-decoration: none;\n  }\n}\n","// 动画相关变量\n// https://material.io/guidelines/motion/duration-easing.html#duration-easing-common-durations\n$animation-ease-out: cubic-bezier(0, 0, .2, 1) !default; // 减速 deceleration-curve-timing\n$animation-ease-in-out: cubic-bezier(.4, 0, .2, 1) !default; // 先迅速加速，再缓慢减速 standard-curve-timing\n$animation-ease-in: cubic-bezier(.4, 0, 1, 1) !default; // 加速 acceleration-curve-timing\n$animation-sharp: cubic-bezier(.4, 0, .6, 1) !default; // 极速的变化 sharp-curve-timing\n\n// 动画函数\n$animation-timing-function: (\n  ease-out: $animation-ease-out,\n  ease-in-out: $animation-ease-in-out,\n  ease-in: $animation-ease-in-out,\n  sharp: $animation-ease-in-out\n);\n","// 这里之所以定义 html 为 position: relative; 主要为了实现，不论页面高度如何，底部始终在最下面显示\n\nhtml {\n  position: relative;\n}\n\nhtml, body {\n  height: auto;\n  min-height: 100%;\n}\n","@import \"../../../../scss/theme/variable\";\n@import \"../../../../scss/theme/mixin\";\n\n.drawer-content {\n  overflow: hidden;\n}\n\n.doc-content-header {\n  padding-right: 4rem;\n  a {\n    margin-right: 1rem;\n\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n}\n\n.doc-main {\n  min-height: 500px;\n  padding: 0 1rem;\n\n  p, li {\n    line-height: 2;\n  }\n\n  p {\n    margin-top: 1rem;\n    margin-bottom: 1rem;\n  }\n\n  h1, h2, h3 {\n    margin-top: 2rem;\n  }\n}\n\n.doc-table {\n  width: 95%;\n  margin-bottom: 1rem;\n\n  tbody > tr:nth-of-type(odd) {\n    @include theme-prop(background-color, secondary-lightest);\n  }\n  th {\n    border-bottom: 1px solid;\n    @include theme-prop(border-bottom-color, secondary-lighter);\n  }\n\n  th,\n  td {\n    padding: .5rem 1rem;\n    border-top: 1px solid;\n    border-left: 1px solid;\n    @include theme-prop(border-color, secondary-lighter);\n\n    &:last-child {\n      border-right: 1px solid;\n      @include theme-prop(border-color, secondary-lighter);\n    }\n  }\n  tr:last-child > td {\n    border-bottom: 1px solid;\n    @include theme-prop(border-color, secondary-lighter);\n  }\n}\n","// 目录和内容\n@import \"../../../../scss/responsive/mixin\";\n@import \"../../../../scss/theme/mixin\";\n@import \"../../../../scss/animation/mixin\";\n@import \"../mixins/header\";\n\n.doc-catalogue-menu:hover {\n  .doc-catalogue-panel {\n    transform: translate(0, 0);\n  }\n}\n\n.doc-catalogue-panel {\n  position:         fixed;\n  top:              64px;\n  right:            0;\n  z-index:          1000;\n  padding-top:      .5rem;\n  border-top:       1px solid;\n  border-bottom:    1px solid;\n  border-left:      1px solid;\n  overflow:         hidden;\n  background-color: #fff;\n  transform:        translate(200%, 0);\n  @include theme-prop(border-color, secondary-lightest);\n  @include animation-transition(transform);\n}\n\n.doc-catalogue-icon {\n  position: fixed;\n  top:      4.5rem;\n  right:    .5rem;\n  z-index:  1000;\n  @include theme-prop(background-color, hint-on-dark);\n  cursor:   pointer;\n\n  .icon-pure-catalogue {\n    @include theme-prop(color, secondary);\n  }\n}\n\n.doc-catalogue-menu-right {\n  display: none;\n}\n\n.doc-content {\n  padding-top:    1rem;\n  padding-bottom: 1rem;\n  @include header-font-size;\n  @include header-margin;\n  @include header-anchor;\n\n  hr {\n    border-top: 1px dashed;\n    @include theme-prop(border-color, primary-light);\n  }\n}\n\n@media screen and (min-width: 1600px) {\n  .doc-catalogue-menu {\n    display: none;\n  }\n  .doc-main {\n    display: flex;\n  }\n  .doc-content {\n    flex:      0 0 79.1666666667%;\n    max-width: 79.1666666667%;\n  }\n\n  .doc-catalogue-menu-right {\n    display:     block;\n    flex:        0 0 20.8333333333%;\n    max-width:   20.8333333333%;\n    margin-left: 1rem;\n    border-left: 1px solid $grey-color-300;\n  }\n\n  .doc-catalogue-panel {\n    position:   static;\n    right:      auto;\n    margin-top: 1rem;\n    border:     0;\n    transform:  translate(0, 0);\n  }\n\n  .doc-catalogue-header {\n    &::before {\n      content:      \"目录\";\n      padding-left: .5rem;\n      color:        #999;\n    }\n  }\n}\n\n.doc-catalogue {\n  .menu-title {\n    position:      relative;\n    min-width:     200px;\n    overflow:      hidden;\n    text-overflow: ellipsis;\n    white-space:   nowrap;\n\n    &:hover::after,\n    &.active::after {\n      content:     \"\";\n      position:    absolute;\n      top:         25%;\n      bottom:      20%;\n      left:        0;\n      border-left: 1px solid;\n      @include theme-prop(border-left-color, secondary);\n    }\n    &.active::after {\n      border-left-width: 2px;\n    }\n  }\n}\n","// animation mixin\n\n@import \"./variable\";\n\n@mixin animation-ease-out {\n  animation-timing-function: $animation-ease-out;\n}\n\n@mixin animation-ease-in-out {\n  animation-timing-function: $animation-ease-in-out;\n}\n\n@mixin animation-ease-in {\n  animation-timing-function: $animation-ease-in;\n}\n\n@mixin animation-sharp {\n  animation-timing-function: $animation-sharp;\n}\n\n// animation transition\n@mixin animation-transition ($property, $duration: 120ms, $timing-function: ease-in-out, $delay: 0) {\n  $animation-function: map-get($animation-timing-function, $timing-function);\n  $animation-function: if($animation-function, $animation-function, $timing-function);\n\n  @if $delay > 0 {\n    transition: #{$property} $duration $animation-function $delay;\n  } @else {\n    transition: #{$property} $duration $animation-function;\n  }\n}\n","// h1~h6 margin\n@mixin header-margin {\n  > h1, > h2 {\n    margin-top: 3rem;\n  }\n\n  > h3, > h4, > h5, > h6 {\n    margin-top: 2rem;\n  }\n\n  > h1, > h2 {\n    &:first-child {\n      margin-top: 0;\n    }\n  }\n}\n\n// font-size\n@mixin header-font-size {\n  > h1 {\n    font-size: 1.75rem;\n  }\n\n  > h2 {\n    font-size: 1.5rem;\n  }\n\n  > h3 {\n    font-size: 1.25rem;\n  }\n\n  > h4 {\n    font-size: 1.125rem;\n  }\n}\n\n// 通过添加伪类 ::before 使 h1~h6 表现出来变高的效果，处理锚点\n@mixin header-anchor {\n  > h1, > h2, > h3, > h4, > h5, > h6 {\n    .anchor-header {\n      display: inline-block;\n      height:     5.5rem;\n      margin-top: -5.5rem;\n      visibility: hidden;\n    }\n\n    .anchor-link {\n      padding-left: 0.375rem;\n      opacity:      0;\n    }\n\n    &:hover > .anchor-link,\n    .anchor-link:focus {\n      opacity: 1;\n    }\n  }\n}\n","@import \"../../../../scss/base/mixins/clearfix\";\n@import \"../../../../scss/theme/variable\";\n@import \"../../../../scss/theme/mixin\";\n@import \"../../../../scss/animation/mixin\";\n\n// 例子样式\n.doc-example {\n  position:      relative;\n  margin-bottom: 1rem;\n  border:        1px solid;\n  @include theme-prop(border-color, secondary-lighter);\n  border-radius: 4px;\n  transition:    all .2s;\n\n  &:hover {\n    .icon-pure-code,\n    .icon-pure-code-expand {\n      @include theme-prop(color, secondary);\n    }\n  }\n}\n\n.doc-example-render {\n  padding: 1rem 1rem 0;\n\n  p:last-of-type {\n    margin-bottom: 0;\n  }\n}\n\n.doc-example-expand {\n  position:        relative;\n  display:         flex;\n  justify-content: flex-end;\n  margin:          .5rem 2rem;\n}\n\n.icon-pure-code,\n.icon-pure-code-expand {\n  transform: rotate(-45deg) scale(.6);\n  @include theme-prop(color, secondary-lighter);\n}\n\n.doc-code-icon {\n  width:  2.5rem;\n  cursor: pointer;\n\n  &:hover {\n    .icon-pure-code,\n    .icon-pure-code-expand {\n      @include theme-prop(color, secondary);\n    }\n\n    & + .tooltip {\n      top:     -3rem;\n      right:   -.8rem;\n      display: block;\n      opacity: .8;\n    }\n  }\n}\n\n.doc-example-highlight.highlight {\n  display:    none;\n  border:     0;\n  border-top: 1px dashed;\n  @include theme-prop(border-top-color, secondary-lighter);\n  @include animation-transition(display);\n}\n\n.doc-code-copy {\n  position: absolute;\n  top:      1rem;\n  right:    3rem;\n  display:  none;\n\n  .icon-pure-copy {\n    cursor:    pointer;\n    transform: scale(.4);\n    @include theme-prop(color, secondary-lighter);\n  }\n\n  &:hover {\n    .icon-pure-copy {\n      @include theme-prop(color, secondary);\n    }\n\n    & + .tooltip {\n      top:     -2rem;\n      right:   1.5rem;\n      display: block;\n      opacity: .8;\n    }\n  }\n}\n\n.doc-example-highlight {\n  position: relative;\n  &:hover .doc-code-copy {\n    display: block;\n    .icon-pure-copy {\n      @include theme-prop(color, secondary);\n    }\n  }\n}\n\n// 栅格例子样式\n.doc-example-row {\n  .row + .row {\n    margin-top: 1rem;\n  }\n  // 嵌套的样式\n  .row .row {\n    border: 1px solid;\n  }\n  [class*=\"col\"] {\n    padding-top:    .5rem;\n    padding-bottom: .5rem;\n    color:          #fff;\n    @include theme-prop(background-color, primary-light);\n    text-align:     center;\n\n    &:nth-of-type(2n) {\n      @include theme-prop(background-color, primary);\n    }\n  }\n}\n\n.doc-example-row-flex-cols .row {\n  min-height: 5rem;\n  @include theme-prop(background-color, primary-lightest);\n}\n\n.doc-example-row-gutters {\n  .no-gutters {\n    margin-top: 1rem;\n  }\n  [class^=\"col\"] > div {\n    @include theme-prop(background-color, secondary-light);\n  }\n}\n\n//// 例子样式\n//.doc-example-render {\n//  position: relative;\n//  padding: 1rem;\n//  margin: 1rem .5rem;\n//  border: solid $theme-primary;\n//  border-width: 1px 0 0;\n//  @include clearfix();\n//}\n//\n//@media (min-width: 640px) {\n//  .doc-example-render {\n//    padding: 1.5rem;\n//    margin-bottom: 0;\n//    margin-left: 0;\n//    margin-right: 0;\n//    border-width: 1px 1px 0;\n//  }\n//}\n//\n//// 容器例子样式\n//.doc-example-container {\n//  .container-fluid,\n//  .container {\n//    padding: 20px;\n//    color: darken(#9c27b0, 20%);\n//    background-color: lighten(#9c27b0, 48%);\n//    text-align: center;\n//  }\n//}\n//\n\n","// sass-lint:disable-all\n.highlight table td { padding: 5px; }\n.highlight table pre { margin: 0; }\n.highlight .cm {\n  color: #999988;\n  font-style: italic;\n}\n.highlight .cp {\n  color: #999999;\n  font-weight: bold;\n}\n.highlight .c1 {\n  color: #999988;\n  font-style: italic;\n}\n.highlight .cs {\n  color: #999999;\n  font-weight: bold;\n  font-style: italic;\n}\n.highlight .c, .highlight .cd {\n  color: #999988;\n  font-style: italic;\n}\n.highlight .err {\n  color: #a61717;\n  background-color: #e3d2d2;\n}\n.highlight .gd {\n  color: #000000;\n  background-color: #ffdddd;\n}\n.highlight .ge {\n  color: #000000;\n  font-style: italic;\n}\n.highlight .gr {\n  color: #aa0000;\n}\n.highlight .gh {\n  color: #999999;\n}\n.highlight .gi {\n  color: #000000;\n  background-color: #ddffdd;\n}\n.highlight .go {\n  color: #888888;\n}\n.highlight .gp {\n  color: #555555;\n}\n.highlight .gs {\n  font-weight: bold;\n}\n.highlight .gu {\n  color: #aaaaaa;\n}\n.highlight .gt {\n  color: #aa0000;\n}\n.highlight .kc {\n  color: #000000;\n  font-weight: bold;\n}\n.highlight .kd {\n  color: #000000;\n  font-weight: bold;\n}\n.highlight .kn {\n  color: #000000;\n  font-weight: bold;\n}\n.highlight .kp {\n  color: #000000;\n  font-weight: bold;\n}\n.highlight .kr {\n  color: #000000;\n  font-weight: bold;\n}\n.highlight .kt {\n  color: #445588;\n  font-weight: bold;\n}\n.highlight .k, .highlight .kv {\n  color: #000000;\n  font-weight: bold;\n}\n.highlight .mf {\n  color: #009999;\n}\n.highlight .mh {\n  color: #009999;\n}\n.highlight .il {\n  color: #009999;\n}\n.highlight .mi {\n  color: #009999;\n}\n.highlight .mo {\n  color: #009999;\n}\n.highlight .m, .highlight .mb, .highlight .mx {\n  color: #009999;\n}\n.highlight .sb {\n  color: #d14;\n}\n.highlight .sc {\n  color: #d14;\n}\n.highlight .sd {\n  color: #d14;\n}\n.highlight .s2 {\n  color: #d14;\n}\n.highlight .se {\n  color: #d14;\n}\n.highlight .sh {\n  color: #d14;\n}\n.highlight .si {\n  color: #d14;\n}\n.highlight .sx {\n  color: #d14;\n}\n.highlight .sr {\n  color: #009926;\n}\n.highlight .s1 {\n  color: #d14;\n}\n.highlight .ss {\n  color: #990073;\n}\n.highlight .s {\n  color: #d14;\n}\n.highlight .na {\n  color: #008080;\n}\n.highlight .bp {\n  color: #999999;\n}\n.highlight .nb {\n  color: #0086B3;\n}\n.highlight .nc {\n  color: #445588;\n  font-weight: bold;\n}\n.highlight .no {\n  color: #008080;\n}\n.highlight .nd {\n  color: #3c5d5d;\n  font-weight: bold;\n}\n.highlight .ni {\n  color: #800080;\n}\n.highlight .ne {\n  color: #990000;\n  font-weight: bold;\n}\n.highlight .nf {\n  color: #990000;\n  font-weight: bold;\n}\n.highlight .nl {\n  color: #990000;\n  font-weight: bold;\n}\n.highlight .nn {\n  color: #555555;\n}\n.highlight .nt {\n  color: #000080;\n}\n.highlight .vc {\n  color: #008080;\n}\n.highlight .vg {\n  color: #008080;\n}\n.highlight .vi {\n  color: #008080;\n}\n.highlight .nv {\n  color: #008080;\n}\n.highlight .ow {\n  color: #000000;\n  font-weight: bold;\n}\n.highlight .o {\n  color: #000000;\n  font-weight: bold;\n}\n.highlight .w {\n  color: #bbbbbb;\n}\n.highlight {\n  background-color: #f8f8f8;\n}\n","// 自定义 highlight 样式\n@import \"../../../../scss/responsive/mixin\";\n@import \"../../../../scss/theme/variable\";\n@import \"../../../../scss/theme/mixin\";\n\n.highlighter-rouge {\n  margin-bottom: 1rem;\n\n  &:hover {\n    position: relative;\n    .doc-code-copy {\n      display: block;\n    }\n  }\n}\n\n.highlight {\n  padding:            1rem;\n  border:             1px solid;\n  @include theme-prop(border-color, secondary-lighter);\n  -ms-overflow-style: -ms-autohiding-scrollbar;\n  background-color:   transparent;\n}\n\n.highlight pre {\n  padding:          0;\n  margin-top:       0;\n  margin-bottom:    0;\n  border:           0;\n  background-color: transparent;\n}\n\n.highlight pre code {\n  font-size: inherit;\n}\n","// 定义色彩卡样式\n.doc-color-group {\n  color: #fff;\n}\n\n.doc-primary-color {\n  margin-bottom: .5rem;\n}\n\n.doc-color-title {\n  padding: .75rem 1rem 2rem;\n}\n\n.doc-color {\n  display: flex;\n  justify-content: space-between;\n  padding: .75rem 1rem;\n}\n\n.doc-color-dark {\n  color: rgba(0, 0, 0, .87);\n}\n\n.doc-color-a {\n  margin-top: .5rem;\n}\n\n.doc-color-panel {\n  padding-left: 10px;\n  padding-right: 10px;\n  margin-bottom: 3rem;\n  > .col {\n    padding-left: 0;\n    padding-right: 0;\n  }\n}\n"]}