!function(Q,F){"object"==typeof exports&&"object"==typeof module?module.exports=F():"function"==typeof define&&define.amd?define([],F):"object"==typeof exports?exports.perfect=F():Q.perfect=F()}(this,function(){return function(Q){function F(B){if(n[B])return n[B].exports;var U=n[B]={i:B,l:!1,exports:{}};return Q[B].call(U.exports,U,U.exports,F),U.l=!0,U.exports}var n={};return F.m=Q,F.c=n,F.d=function(Q,n,B){F.o(Q,n)||Object.defineProperty(Q,n,{configurable:!1,enumerable:!0,get:B})},F.n=function(Q){var n=Q&&Q.__esModule?function(){return Q.default}:function(){return Q};return F.d(n,"a",n),n},F.o=function(Q,F){return Object.prototype.hasOwnProperty.call(Q,F)},F.p="",F(F.s=1)}([function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getUuid = getUuid;\nexports.offset = offset;\nexports.position = position;\n// 提供工具类方法\n\nvar MAX_UUID = 1000000;\n\nfunction isWindow(elem) {\n  return elem != null && elem === elem.window;\n}\n\nfunction getWindow(elem) {\n  return isWindow(elem) ? elem : elem.nodeType === 9 && elem.defaultView;\n}\n\n/**\n * getStyles\n * @param {type} element\n * @param {type} property\n * @returns {styles}\n */\nfunction getStyles(element, property, extra) {\n  var styles = element.ownerDocument.defaultView.getComputedStyle(element, null);\n  if (property) {\n    var cssValue = styles.getPropertyValue(property) || styles[property];\n    if (extra) {\n      var num = parseFloat(cssValue);\n      return extra === true || isFinite(num) ? num || 0 : cssValue;\n    }\n    return cssValue;\n  }\n  return styles;\n}\n\nfunction getOffsetParent(elem) {\n  /* eslint-disable prefer-destructuring */\n  var offsetParent = elem.offsetParent;\n\n  while (offsetParent && elem.tagName.toLowerCase() !== 'html' && getStyles(offsetParent, 'position') === 'static') {\n    offsetParent = offsetParent.offsetParent;\n  }\n  return offsetParent || document.documentElement;\n}\n\n/**\n * @description 生成唯一的 dom uuid\n * @param {string} prefix 前缀\n * @return {*} uuid\n */\nfunction getUuid(prefix) {\n  var _prefix = prefix;\n  do {\n    // eslint-disable-next-line no-bitwise\n    _prefix += ~~(Math.random() * MAX_UUID); // \"~~\" acts like a faster Math.floor() here\n  } while (document.getElementById(_prefix));\n\n  return _prefix;\n}\n\n// 根据浏览器设置其鼠标滑轮事件\nvar isWheel = exports.isWheel = function () {\n  // compatibility: mouse wheel event\n  // http://www.w3help.org/zh-cn/causes/SD9015\n  var ua = navigator.userAgent;\n  // ie 11 /gecko/i.test(ua) value is true ,so need to judge /firefox/i.test(ua)\n  if (/gecko/i.test(ua) && !/webkit/i.test(ua) && /firefox/i.test(ua)) {\n    // Firefox\n    return false;\n  }\n  // IE Safari Chrome Opera\n  return true;\n}();\n\n/**\n * 返回元素 offset\n * 不支持隐藏的元素\n * 参考 jQuery 实现\n * https://github.com/jquery/jquery/blob/master/src/offset.js\n * @param el\n * @returns {*}\n */\nfunction offset(el) {\n  if (!el) {\n    return;\n  }\n\n  var docElem = void 0,\n      win = void 0,\n      doc = void 0;\n\n  // Support: IE <=11 only\n  // Running getBoundingClientRect on a\n  // disconnected node in IE throws an error\n  if (!el.getClientRects().length) {\n    return { top: 0, left: 0 };\n  }\n\n  var rect = el.getBoundingClientRect();\n\n  // Make sure element is not hidden (display: none)\n  if (rect.width || rect.height) {\n    doc = el.ownerDocument;\n    win = getWindow(doc);\n    docElem = doc.documentElement;\n\n    return {\n      top: rect.top + win.pageYOffset - docElem.clientTop,\n      left: rect.left + win.pageXOffset - docElem.clientLeft\n    };\n  }\n  return rect;\n}\n\n/**\n * 返回其 position 坐标\n * @param elem\n * @return {*}\n */\nfunction position(elem) {\n  if (!elem) {\n    return null;\n  }\n\n  var offsetParent = void 0,\n      offsetXY = void 0,\n      parentOffset = { top: 0, left: 0 };\n\n  if (getStyles(elem, 'position') === 'fixed') {\n    offsetXY = elem.getBoundingClientRect();\n  } else {\n    offsetParent = getOffsetParent(elem);\n    offsetXY = offset(elem);\n    if (elem.tagName.toLowerCase() !== 'html') {\n      parentOffset = offset(offsetParent);\n    }\n    parentOffset.top += getStyles(offsetParent, 'borderTopWidth', true);\n    parentOffset.left += getStyles(offsetParent, 'borderLeftWidth', true);\n  }\n\n  return {\n    top: offsetXY.top - parentOffset.top - getStyles(elem, 'marginTop', true),\n    left: offsetXY.left - parentOffset.left - getStyles(elem, 'marginLeft', true)\n  };\n}\n\nvar util = {\n  getUuid: getUuid,\n  isWheel: isWheel,\n  offset: offset,\n  position: position\n};\n\nexports.default = util;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///0\n")},function(module,exports,__webpack_require__){"use strict";eval('\n\nObject.defineProperty(exports, "__esModule", {\n  value: true\n});\nexports.CatalogueSpy = exports.ScrollSpy = undefined;\n\nvar _scrollSpy = __webpack_require__(2);\n\nvar _scrollSpy2 = _interopRequireDefault(_scrollSpy);\n\nvar _catalogueSpy = __webpack_require__(3);\n\nvar _catalogueSpy2 = _interopRequireDefault(_catalogueSpy);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.ScrollSpy = _scrollSpy2.default;\nexports.CatalogueSpy = _catalogueSpy2.default;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb21wb25lbnRzL3BlcmZlY3QuanM/NzI0ZiJdLCJuYW1lcyI6WyJTY3JvbGxTcHkiLCJDYXRhbG9ndWVTcHkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7OztBQUNBOzs7Ozs7UUFHRUEsUztRQUNBQyxZIiwiZmlsZSI6IjEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU2Nyb2xsU3B5IGZyb20gJy4vc2Nyb2xsLXNweS9zY3JvbGxTcHknO1xuaW1wb3J0IENhdGFsb2d1ZVNweSBmcm9tICcuL3Njcm9sbC1zcHkvcGx1Z2lucy9jYXRhbG9ndWVTcHknO1xuXG5leHBvcnQge1xuICBTY3JvbGxTcHksXG4gIENhdGFsb2d1ZVNweVxufTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2NvbXBvbmVudHMvcGVyZmVjdC5qcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///1\n')},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = __webpack_require__(0);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar win = window;\nvar doc = document;\nvar _Array$prototype = Array.prototype,\n    forEach = _Array$prototype.forEach,\n    map = _Array$prototype.map;\n\nvar ScrollSpy = function () {\n  function ScrollSpy(element) {\n    var _this = this;\n\n    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, ScrollSpy);\n\n    this.scrollEvent = function (event) {\n      _this.process();\n    };\n\n    this.element = element;\n    this.scrollElement = element.tagName === 'BODY' ? win : element;\n    this.config = this.getConfig(config);\n    var _config2 = this.config,\n        menu = _config2.menu,\n        menuClsPrefix = _config2.menuClsPrefix,\n        extend = _config2.extend;\n    // 菜单 目录 等选择器\n\n    this.menuSelector = menu + ' .' + menuClsPrefix + '-title';\n    this.offsets = [];\n    this.targets = [];\n    this.activeTarget = null;\n    this.scrollHeight = 0;\n\n    // 如果默认不展开，则用样式来控制\n    if (!extend) {\n      var extendStyle = doc.createElement('style');\n      extendStyle.innerHTML = '\\n          .menu-catalogue .menu-catalogue {\\n            display: none;\\n          }\\n          .active + .menu-catalogue {\\n            display: block;\\n          }';\n      doc.getElementsByTagName('head')[0].append(extendStyle);\n    }\n\n    // 添加事件，页面滚动时，处理目录和内容对应坐标\n    this.scrollElement.addEventListener(_util.isWheel ? 'mousewheel' : 'DOMMouseScroll', this.scrollEvent, false);\n    var _config3 = this.config,\n        immedLoad = _config3.immedLoad,\n        initMenus = _config3.initMenus,\n        anchor = _config3.anchor;\n    // 需要根据内容动态创建菜单列表\n\n    if (initMenus) {\n      this.generateMenus();\n    }\n\n    // 菜单面板\n    this.menuPanel = menu + ' .' + menuClsPrefix + '.' + menuClsPrefix + '-catalogue';\n    this.$menuPanel = doc.querySelector(this.menuPanel);\n\n    // 不用锚点处理的情况\n    if (anchor === false) {\n      // fixme 待改进，改成 事件代理模式\n      var menuElements = doc.querySelectorAll(this.menuSelector);\n      forEach.call(menuElements, function (element) {\n        element.addEventListener('click', function (e) {\n          e.preventDefault();\n          e.stopPropagation();\n          var el = e.currentTarget;\n          var menu = el.dataset.menu;\n          var _config4 = _this.config,\n              offsetMethod = _config4.offsetMethod,\n              container = _config4.container;\n\n          var offsetXY = _this.config.offset;\n\n          var targetEl = doc.querySelector(container + ' [data-target=\"' + menu + '\"]').parentNode;\n          var top = offsetMethod === 'offset' ? (0, _util.offset)(targetEl).top : (0, _util.position)(targetEl).top;\n          var offsetBase = offsetMethod === 'position' ? _this.getScrollTop() : 0;\n\n          // fixme\n          _this.scrollElement.scrollTo(0, top + offsetBase - offsetXY);\n          el.blur();\n          _this.process();\n        }, false);\n      });\n    }\n\n    // 加载插件\n    var pluginConfig = this.config.pluginConfig;\n    var plugins = this.config.plugins;\n\n    if (plugins) {\n      if (!Array.isArray(plugins)) {\n        plugins = [plugins];\n      }\n      this.plugins = [];\n      var container = this.config.container;\n\n      plugins.forEach(function (plugin) {\n        // 把当前实例传给插件\n        var instance = new plugin(_this, pluginConfig);\n        instance.mount();\n        _this.plugins.push(instance);\n      });\n    }\n\n    // 显示菜单\n    // doc.querySelector(menu).style.display = 'block';\n    if (immedLoad) {\n      this.refresh();\n      this.process();\n    }\n  }\n\n  _createClass(ScrollSpy, [{\n    key: 'getConfig',\n    value: function getConfig(config) {\n      var _config = _extends({}, ScrollSpy.defaultConfig, config);\n\n      var menu = _config.menu;\n      var container = _config.container;\n\n\n      if (typeof menu !== 'string') {\n        // dom 对象\n        var id = menu.id;\n\n        if (!id) {\n          id = (0, _util.getUuid)('scrollspy');\n          menu.id = id;\n        }\n        _config.menu = '#' + id;\n      }\n\n      if (!container) {\n        container = doc.body; // 默认取 body\n      }\n      if (typeof container !== 'string') {\n        var _container = container,\n            _id = _container.id;\n\n        if (!_id) {\n          _id = (0, _util.getUuid)('scrollspy');\n          container.id = _id;\n        }\n        _config.container = '#' + _id;\n      }\n\n      var autoMethod = this.scrollElement !== this.scrollElement.window ? 'position' : 'offset';\n\n      var offsetMethod = _config.method === 'auto' ? autoMethod : _config.method;\n\n      _config.offsetMethod = offsetMethod;\n\n      return _config;\n    }\n\n    /**\n     * 动态创建菜单\n     */\n\n  }, {\n    key: 'generateMenus',\n    value: function generateMenus() {\n      var menus = this.element.querySelectorAll('h1,h2,h3,h4,h5,h6');\n      // 初始化根节点\n      var entries = {\n        level: 0,\n        children: [],\n        depth: 0,\n        parent: null,\n        text: null,\n        root: true\n      };\n\n      // 前一个元素 level\n      var prevLevel = 0;\n      // 上一个节点\n      var lastNode = null;\n\n      forEach.call(menus, function (el, index) {\n        var entry = null;\n        var level = 7 - parseInt(el.tagName[1], 10);\n        var text = el.innerHTML;\n\n        if (index === 0) {\n          // 初始化第一个元素\n          entry = {\n            level: level,\n            children: [],\n            depth: 1,\n            parent: entries,\n            text: text,\n            el: el\n          };\n          entries.children.push(entry);\n        } else {\n          if (level === prevLevel) {\n            // 相等的话\n            entry = {\n              level: level,\n              children: [],\n              depth: lastNode.depth,\n              parent: lastNode.parent,\n              text: text,\n              el: el\n            };\n            lastNode.parent.children.push(entry);\n          } else if (level < prevLevel) {\n            // 如果当前级别小于前一个\n            entry = {\n              level: level,\n              children: [],\n              depth: lastNode.depth + 1,\n              parent: lastNode,\n              text: text,\n              el: el\n            };\n            lastNode.children.push(entry);\n          } else {\n            // 如果当前级别大于前一个 查找祖先节点\n            var ancestor = lastNode.parent;\n            while (ancestor.level <= level && !ancestor.root) {\n              ancestor = ancestor.parent;\n            }\n            entry = {\n              level: level,\n              children: [],\n              depth: ancestor.depth + 1,\n              parent: ancestor,\n              text: text,\n              el: el\n            };\n            ancestor.children.push(entry);\n          }\n        }\n        lastNode = entry;\n        prevLevel = level;\n      });\n\n      var html = this.generateMenusHtml(entries.children, this.config.prefix);\n      doc.querySelector(this.config.menu).innerHTML = html;\n    }\n\n    /**\n     * 根据 nodes 节点 生成 html\n     * @param nodes\n     * @param prefix\n     * @return {string}\n     */\n\n  }, {\n    key: 'generateMenusHtml',\n    value: function generateMenusHtml(nodes, prefix) {\n      var _config5 = this.config,\n          menuClsPrefix = _config5.menuClsPrefix,\n          menuCls = _config5.menuCls;\n\n      var html = '';\n      if (nodes && nodes.length > 0) {\n        html = '<ul class=\"' + menuClsPrefix + ' ' + menuClsPrefix + '-catalogue' + (menuCls ? ' ' + menuCls : '') + '\">';\n        for (var i = 0, len = nodes.length; i < len; i++) {\n          var node = nodes[i];\n          // 为对应的内容加锚点\n          var newChild = document.createElement('a');\n          newChild.id = prefix + (i + 1);\n          newChild.className = menuClsPrefix + '-anchor';\n          if (this.config.anchor) {\n            newChild.href = '#' + (prefix + (i + 1));\n          } else {\n            newChild.dataset.menu = '' + (prefix + (i + 1));\n          }\n\n          newChild.setAttribute('aria-hidden', true);\n          node.el.insertBefore(newChild, node.el.firstChild);\n\n          html += '<li>';\n          if (this.config.anchor) {\n            html += '<a class=\"' + menuClsPrefix + '-title\" href=\"#' + prefix + (i + 1) + '\">' + node.text + '</a>';\n          } else {\n            // 用 data-target 来控制，需要结合 js 来控制\n            html += '<a class=\"' + menuClsPrefix + '-title\" data-target=\"' + prefix + (i + 1) + '\" href=\"#\">' + node.text + '</a>';\n          }\n          if (node.children && node.children.length > 0) {\n            html += this.generateMenusHtml(node.children, '' + prefix + (i + 1) + '-');\n          }\n          html += '</li>';\n        }\n        html += '</ul>';\n      }\n      return html;\n    }\n\n    /**\n     * 滚动页面时，刷新相关数据\n     */\n\n  }, {\n    key: 'refresh',\n    value: function refresh() {\n      var _this2 = this;\n\n      var offsetMethod = this.config.offsetMethod;\n\n      var offsetBase = offsetMethod === 'position' ? this.getScrollTop() : 0;\n\n      this.offsets = [];\n      this.targets = [];\n      this.scrollHeight = this.getScrollHeight();\n\n      // 把滚动监听的元素和坐标保存到offsets和targets中\n      var menuElements = doc.querySelectorAll(this.menuSelector);\n\n      map.call(menuElements, function (element) {\n        // 目标元素\n        var target = null;\n        var _config6 = _this2.config,\n            anchor = _config6.anchor,\n            container = _config6.container;\n\n        var selector = anchor ? element.getAttribute('href') : element.dataset.menu;\n        var targetSelector = anchor ? element.getAttribute('href') : container + ' [data-target=\"' + element.dataset.menu + '\"]';\n\n        if (targetSelector) {\n          target = doc.querySelector(targetSelector).parentNode;\n          var targetBCR = target.getBoundingClientRect();\n          if (targetBCR.width || targetBCR.height) {\n            return [(offsetMethod === 'offset' ? (0, _util.offset)(target).top : (0, _util.position)(target).top) + offsetBase, selector];\n          }\n        }\n        return null;\n      }).sort(function (a, b) {\n        if (!a || !b) {\n          return 0;\n        }\n        return a[0] - b[0];\n      }).forEach(function (item) {\n        if (item) {\n          _this2.offsets.push(item[0]);\n          _this2.targets.push(item[1]);\n        }\n      });\n    }\n\n    // 鼠标滚动事件\n\n  }, {\n    key: 'process',\n\n\n    /**\n     * 滚动时触发该方法\n     * @returns {boolean|*}\n     */\n    value: function process() {\n      // 需要加 1 微调\n      var scrollTop = this.getScrollTop() + this.config.offset + 1;\n      var scrollHeight = this.getScrollHeight();\n      var maxScroll = this.config.offset + scrollHeight - this.getOffsetHeight();\n\n      // 不相等的话，重新刷新，比如改变页面窗口后\n      if (this.scrollHeight !== scrollHeight) {\n        this.refresh();\n      }\n\n      // 滑到底部\n      if (scrollTop >= maxScroll) {\n        // 取最后一个\n        var target = this.targets[this.targets.length - 1];\n\n        if (this.activeTarget !== target) {\n          this.activate(target);\n        }\n        return;\n      }\n\n      // 滑到头部\n      if (this.activeTarget && scrollTop < this.offsets[0] && this.offsets[0] > 0) {\n        this.activeTarget = null;\n        this.clearActiveCls();\n        return;\n      }\n\n      for (var i = this.offsets.length; i--;) {\n        var isActiveTarget = this.activeTarget !== this.targets[i] && scrollTop >= this.offsets[i] && (this.offsets[i + 1] === undefined || scrollTop < this.offsets[i + 1]);\n\n        if (isActiveTarget) {\n          this.activate(this.targets[i]);\n        }\n      }\n    }\n\n    /**\n     * 设置当前活动的内容\n     * @param target\n     */\n\n  }, {\n    key: 'activate',\n    value: function activate(target) {\n      this.activeTarget = target;\n\n      this.clearActiveCls();\n\n      var anchor = this.config.anchor;\n\n      var queries = this.menuSelector.split(',');\n      var lastSelector = []; // 最后一个菜单项，即当前的子节点\n      // 当前选中的和父目录都添加活动样式\n      var parentEls = target.split('-');\n      queries = queries.map(function (query) {\n        var selector = [];\n        var catalog = '';\n        parentEls.forEach(function (it, index) {\n          if (index === 0) {\n            catalog += it;\n          } else {\n            catalog += '-' + it;\n            selector.push(anchor ? query + '[href=\"' + catalog + '\"]' : query + '[data-menu=\"' + catalog + '\"]');\n          }\n        });\n        lastSelector.push(selector[selector.length - 1]);\n        return selector.join(',');\n      });\n\n      var $link = doc.querySelectorAll(queries.join(','));\n\n      for (var i = 0, len = $link.length; i < len; i++) {\n        $link[i].classList.add('active');\n      }\n\n      this.plugins.forEach(function (plugin) {\n        if (typeof plugin.scrollMenu === 'function') {\n          plugin.scrollMenu(lastSelector);\n        }\n      });\n\n      // todo 事件，待补充\n\n      /* $(this._scrollElement).trigger(Event.ACTIVATE, {\n       relatedTarget: target\n       }) */\n    }\n  }, {\n    key: 'clearActiveCls',\n    value: function clearActiveCls() {\n      // 删除当前活动样式\n      var activeEls = doc.querySelectorAll(this.menuSelector + '.active');\n      if (activeEls) {\n        for (var i = 0, len = activeEls.length; i < len; i++) {\n          activeEls[i].classList.remove('active');\n        }\n      }\n    }\n\n    // 卸载\n\n  }, {\n    key: 'unmount',\n    value: function unmount() {\n      // $.removeData(this._element, DATA_KEY)\n      this.scrollElement.removeEventListener(_util.isWheel ? 'mousewheel' : 'DOMMouseScroll', this.scrollEvent, false);\n\n      this.element = null;\n      this.scrollElement = null;\n      this.config = null;\n      this.menu = null;\n      this.menuSelector = null;\n      this.container = null;\n      this.offsets = null;\n      this.targets = null;\n      this.activeTarget = null;\n      this.scrollHeight = null;\n\n      // 卸载插件\n      if (this.plugins) {\n        this.plugins.forEach(function (plugin) {\n          plugin.unmount();\n        });\n        this.plugins = null;\n      }\n    }\n  }, {\n    key: 'getScrollTop',\n    value: function getScrollTop() {\n      return this.scrollElement === win ? this.scrollElement.pageYOffset : this.scrollElement.scrollTop;\n    }\n  }, {\n    key: 'getScrollHeight',\n    value: function getScrollHeight() {\n      return this.scrollElement.scrollHeight || Math.max(doc.body.scrollHeight, doc.documentElement.scrollHeight);\n    }\n  }, {\n    key: 'getOffsetHeight',\n    value: function getOffsetHeight() {\n      return this.scrollElement === win ? win.innerHeight : this.scrollElement.getBoundingClientRect().height;\n    }\n  }]);\n\n  return ScrollSpy;\n}();\n\nScrollSpy.defaultConfig = {\n  offset: 0,\n  method: 'auto',\n  menu: '', // 菜单导航\n  menuCls: null, // 自定义菜单样式\n  menuClsPrefix: 'menu', // 菜单样式前缀\n  container: null, // 需要监听的内容容器\n  immedLoad: true, // 是否立即监听，如果设为 false， 则通过滑动鼠标来激活监听\n  prefix: 'menu-', // 导航目录前缀\n  anchor: true, // 是否用锚点来控制，默认用锚点处理\n  animation: true, // 是否开启动画\n  extend: false // 默认菜单没有展开\n};\nexports.default = ScrollSpy;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///2\n")},function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = __webpack_require__(0);\n\nvar _util2 = _interopRequireDefault(_util);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar isWheel = _util2.default.isWheel;\n\n\nvar win = window;\nvar doc = document;\nvar resizeEvt = 'orientationchange' in win ? 'orientationchange' : 'resize';\n\nvar reg = /translateY\\(([-\\w]+)\\)/;\n\nvar CatalogueSpy = function () {\n  function CatalogueSpy(scrollSpy) {\n    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, CatalogueSpy);\n\n    _initialiseProps.call(this);\n\n    this.scrollSpy = scrollSpy;\n    this.config = _extends({}, CatalogueSpy.defaultConfig, config);\n\n    var menuHeight = this.config.menuHeight;\n\n    if (!menuHeight) {\n      menuHeight = document.documentElement.clientHeight - 64;\n      this.config.menuHeight = menuHeight;\n    }\n\n    var $menuPanel = scrollSpy.$menuPanel;\n\n    $menuPanel.style.transform = 'translateY(0)';\n    $menuPanel.style.maxHeight = menuHeight + 'px';\n    this.$menuPanel = $menuPanel;\n\n    win.addEventListener(resizeEvt, this.adjustMenuHeight, false);\n  }\n\n  // 调整菜单最大高度\n\n\n  _createClass(CatalogueSpy, [{\n    key: 'mount',\n    value: function mount() {\n      // fixme 待改进，改成 scrollSpy 触发该事件，参考 web-guide 项目\n      // http://www.zhangxinxu.com/wordpress/2013/04/js-mousewheel-dommousescroll-event/\n      this.$menuPanel.addEventListener(isWheel ? 'mousewheel' : 'DOMMouseScroll', this.handleScroll(true), false);\n    }\n\n    // 当定位到某一个菜单项时，而由于限制了高度，该菜单有可能不在可视范围内\n\n  }, {\n    key: 'unmount',\n    value: function unmount() {\n      console.info('待补充');\n      win.removeEventListener(resizeEvt, this.adjustMenuHeight, false);\n    }\n  }]);\n\n  return CatalogueSpy;\n}();\n\nCatalogueSpy.defaultConfig = {\n  menuHeight: null, // 设置菜单高度，如果不设置，则取当前浏览器可视高度\n  step: 30 // 滚动鼠标，菜单滑动步长\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this = this;\n\n  this.adjustMenuHeight = function () {\n    var menuHeight = doc.documentElement.clientHeight - 64;\n    _this.$menuPanel.style.maxHeight = menuHeight + 'px';\n  };\n\n  this.handleScroll = function (prevent) {\n    return function (event) {\n      var _$menuPanel = _this.$menuPanel,\n          scrollHeight = _$menuPanel.scrollHeight,\n          clientHeight = _$menuPanel.clientHeight;\n      var step = _this.config.step;\n\n      _this.maxOffset = scrollHeight - clientHeight; // 最大滚动的高度\n\n      if (prevent && _this.maxOffset > 0) {\n        event.preventDefault();\n        event.stopPropagation();\n      }\n\n      // 判断鼠标滑轮向上还是向下滑动\n      var upDown = void 0;\n      var detail = event.detail,\n          wheelDelta = event.wheelDelta;\n\n      if (detail) {\n        if (detail < 0) {\n          // up\n          upDown = 'up';\n        } else if (detail > 0) {\n          // down\n          upDown = 'down';\n        }\n      } else if (wheelDelta) {\n        //\n        if (wheelDelta > 0) {\n          // up\n          upDown = 'up';\n        }\n        if (wheelDelta < 0) {\n          // down\n          upDown = 'down';\n        }\n      }\n\n      var transform = _this.$menuPanel.style.transform;\n\n\n      var y = reg.exec(transform);\n      y = y ? parseFloat(y[1], 10) : 0;\n\n      if (upDown === 'up' && y === 0 || upDown === 'down' && Math.abs(y) === _this.maxOffset) {\n        return;\n      }\n\n      if (upDown === 'up' && y < 0) {\n        _this.$menuPanel.style.transform = 'translateY(' + Math.min(y + step, 0) + 'px)';\n      } else if (upDown === 'down' && Math.abs(y) < _this.maxOffset) {\n        _this.$menuPanel.style.transform = 'translateY(' + Math.max(y - step, -_this.maxOffset) + 'px)';\n      }\n    };\n  };\n\n  this.scrollMenu = function (lastSelector) {\n    var step = _this.config.step;\n    var $menuPanel = _this.$menuPanel;\n    var scrollHeight = $menuPanel.scrollHeight,\n        clientHeight = $menuPanel.clientHeight;\n\n    var maxOffset = scrollHeight - clientHeight; // 最大滚动的高度\n    if (maxOffset === 0) {\n      return;\n    }\n    maxOffset += 1; // 由于计算偏差，需要微调1个像素\n    // 如果当前菜单项隐藏，则向上拉\n    // Fixme 注意这里还需计算 $menuPanel.parentElement padding 和 border 的值，待处理\n    var menuRect = $menuPanel.parentElement.getBoundingClientRect();\n    var currentTarget = doc.querySelectorAll(lastSelector.join(','));\n    if (currentTarget) {\n      Array.prototype.forEach.call(currentTarget, function (el) {\n        var rect = el.getBoundingClientRect();\n        while (rect.top > 0 && rect.bottom > 0 && (rect.top < menuRect.top || rect.bottom > menuRect.bottom)) {\n          // 向上移动\n          var transform = $menuPanel.style.transform;\n\n          var y = reg.exec(transform);\n          y = y ? parseFloat(y[1], 10) : 0;\n          if (rect.top < menuRect.top) {\n            $menuPanel.style.transform = 'translateY(' + Math.min(y + step, 0) + 'px)';\n          } else {\n            $menuPanel.style.transform = 'translateY(' + Math.max(y - step, -maxOffset) + 'px)';\n          }\n          rect = el.getBoundingClientRect();\n        }\n      });\n    }\n  };\n};\n\nexports.default = CatalogueSpy;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///3\n")}])});