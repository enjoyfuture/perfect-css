@import "../../shadow/mixin";
@import "../../animation/variable";
@import "variable";

// 列表菜单，需要与列表 .list 和 .list-item 结合使用
.list-menu {
  position: absolute;
  z-index: 3;
  box-sizing: border-box;
  display: none;
  min-width: 180px;
  max-width: calc(100vw - 32px);
  max-height: calc(100vh - 32px);
  border-radius: 2px;
  overflow-x: hidden;
  overflow-y: auto;
  background-color: #fff;
  white-space: nowrap;
  opacity: 0;
  transform: scale(0);
  transform-origin: top left;
  will-change: transform, opacity;

  @include shadow(2);

  &:focus {
    outline: none;
  }

  // 显示时
  &-open {
    display: inline-block;
    opacity: 1;
    transform: scale(1);
  }

  // 动画效果
  &-animating {
    display: inline-block;
    overflow-y: hidden;
    transition: opacity $list-menu-fade-duration $animation-ease-out;
  }

  // 菜单元素父节点
  &-items {
    box-sizing: border-box;
    overflow-x: hidden;
    overflow-y: auto;
    will-change: transform;

    // 所有子元素没有显示时透明处理
    > * {
      opacity: 0;
    }

    > .list-item {
      cursor: pointer;
    }

    // scss 语法，相当于 .list-menu-animating .list-menu-items
    .list-menu-animating & {
      // 动画过程中，把 overflow-y 设为 hidden，防止乱动
      overflow-y: hidden;

      > * {
        transition: opacity $list-menu-item-fade-duration $animation-ease-out;
      }
    }

    // scss 语法，相当于 .list-menu-open .list-menu-items > *
    .list-menu-open & {
      > * {
        opacity: 1;
        will-change: opacity;
      }
    }
  }

  // 以下定义打开菜单时，动画起始位置 transform-origin
  &-top-left {
    transform-origin: top left !important;
  }

  &-top-right {
    transform-origin: top right !important;
  }

  &-bottom-left {
    transform-origin: bottom left !important;
  }

  &-bottom-right {
    transform-origin: bottom right !important;
  }

  //.mdc-list-group,
  //.mdc-list {
  //  padding: 8px 0;
  //}

  //.mdc-list-item {
  //  position: relative;
  //  padding: 0 16px;
  //  outline: none;
  //  color: inherit;
  //  text-decoration: none;
  //  user-select: none;
  //
  //  @include mdc-typography(subheading2);
  //
  //  @include mdc-theme-dark(".mdc-simple-menu", true) {
  //    color: white;
  //  }
  //}
  //
  //.mdc-list-divider {
  //  @include mdc-theme-dark(".mdc-simple-menu", true) {
  //    border-color: rgba(white, .12);
  //  }
  //}
  //
  //.mdc-list-item__start-detail {
  //  color: rgba(black, .54);
  //
  //  @include mdc-theme-dark(".mdc-simple-menu", true) {
  //    color: rgba(white, .54);
  //  }
  //}
  //
  ///* stylelint-disable selector-no-qualifying-type */
  //&--selected.mdc-list-item,
  //&--selected.mdc-list-item .mdc-list-item__start-detail {
  //  @include mdc-theme-prop(color, primary);
  //}
  ///* stylelint-enable selector-no-qualifying-type */
  //
  ///* TODO(sgomes): Revisit when we have interactive lists. */
  //.mdc-list-item::before {
  //  position: absolute;
  //  top: 0;
  //  left: 0;
  //  width: 100%;
  //  height: 100%;
  //  transition: opacity 120ms $mdc-animation-deceleration-curve-timing-function;
  //  border-radius: inherit;
  //  background: currentColor;
  //  content: "";
  //  opacity: 0;
  //  pointer-events: none;
  //}
  //
  //.mdc-list-item:focus::before {
  //  opacity: .12;
  //}
  //
  //.mdc-list-item:active::before {
  //  /*
  //    Slightly darker value for visual distinction.
  //    This allows a full base that has distinct modes.
  //    Progressive enhancement with ripples will provide complete button spec alignment.
  //  */
  //  opacity: .18;
  //}
  //
  //.mdc-list-item[aria-disabled="true"] {
  //  cursor: default;
  //
  //  @include mdc-theme-prop(color, text-disabled-on-light);
  //
  //  @include mdc-theme-dark(".mdc-select") {
  //    @include mdc-theme-prop(color, text-disabled-on-dark);
  //  }
  //}
  //
  //.mdc-list-item[aria-disabled="true"] {
  //  &:focus::before,
  //  &:active::before {
  //    opacity: 0;
  //  }
  //}
}

