// button style
@import "../../base/variables/form";
@import "../../animation/variable";
@import "../../animation/function";
@import "../../animation/mixin";
@import "../../theme/mixin";
@import "../../ripple/mixin";
@import "variable";
@import "mixin";

.btn {
  position:                    relative;
  box-sizing:                  border-box;
  display:                     inline-block;
  min-width:                   $btn-min-width;
  padding:                     $input-padding-y $btn-padding-x;
  border:                      1px solid transparent; // 与 .btn-outline 统一
  border-radius:               $input-border-radius;
  overflow:                    hidden;
  font-weight:                 $btn-font-weight;
  line-height:                 $input-line-height;
  background:                  transparent;
  @include theme-prop(color, primary-on-light);
  text-align:                  center;
  text-decoration:             none;
  vertical-align:              middle;
  cursor:                      pointer;
  user-select:                 none;
  outline:                     0;
  -webkit-appearance:          none;
  -moz-osx-font-smoothing:     grayscale;
  -webkit-font-smoothing:      antialiased;
  -webkit-tap-highlight-color: transparent;

  // 对于 ripple-impact 使用 ripple 效果样式，所以需要把 .ripple-impact 除掉
  // ripple-base 中已经加了过滤 :not(.ripple-impact)
  @include ripple-base;
  &:not(.ripple-impact) {
    @include ripple-bg((pseudo: "::before", opacity: $btn-unfilled-ripple-opacity));
    @include ripple-bg((pseudo: "::after", opacity: $btn-unfilled-ripple-opacity));
  }

  // 对于 a 标签的处理
  &:hover {
    color:           currentColor;
    text-decoration: none;
  }

  &:focus,
  &:active {
    outline: 0;
  }

  &::-moz-focus-inner {
    padding: 0;
    border:  0;
  }

  // disabled
  fieldset:disabled &,
  &:disabled,
  &.disabled {
    @include theme-prop(color, disabled-on-light);
    @include theme-prop(background-color, transparent);
    pointer-events: none;
    cursor:         default;
  }
}

// 浮雕的，凸起和去掉阴影效果公用样式
.btn-raised,
.btn-unshadow {
  @include button-front($color: primary-on-dark);
  @include button-back($background-color: hint-on-light);

  //&.btn {
  //  @include button-ripple((background-color: #fff, opacity: $btn-filled-ripple-opacity));
  //}

  // disabled
  @include button-disabled($btn-bg-disabled);
}

// 浮雕的，凸起样式
.btn-raised {
  @include button-shadow;
  // disabled
  fieldset:disabled &,
  &:disabled,
  &.disabled {
    @include shadow(0);
  }
}

// outline 样式，设置边框
.btn-outline {
  border: 1px solid;
}

@if ($enable-custom-theme and $enable-custom-theme-for-btn) {
  // 定义主题样式
  @each $theme in ("primary", "secondary") {
    .btn-#{$theme} {
      @include button-front($color: #{$theme});

      // 不是浮雕和阴影效果使用该样式设置
      &:not(.btn-raised):not(.btn-unshadow) {
        @include button-ripple((theme-style: #{$theme}-alpha, opacity: 1));
      }

      &.btn-raised,
      &.btn-unshadow {
        // 设置前景色
        @include theme-prop(color, primary-on-#{$theme});
        // 设置背景色
        @include theme-prop(background-color, #{$theme});
        // 设置 ripple
        @include button-ripple((opacity: $btn-filled-ripple-opacity));

        // disabled
        @include button-disabled($btn-bg-disabled);
      }
    }
  }

  // 辅助颜色
  @each $theme in $theme-assist {
    .btn-#{$theme} {
      @include button-front($color: $theme, $assist: true);

      // 不是浮雕和阴影效果使用该样式设置
      &:not(.btn-raised):not(.btn-unshadow) {
        @include button-ripple((theme-style: #{$theme}-alpha, opacity: 1));
      }

      &.btn-raised,
      &.btn-unshadow {
        $color: map-get($theme-assist-colors, $theme);
        // 判断是用浅色还是深色
        $color-tone: theme-tone($color);

        // 对于 warning 警告颜色，由于橙色颜色偏浅色，故需要单独处理
        @if ($theme == "warning") {
          $color-tone: dark;
        }

        // 设置前景色
        @include theme-prop(color, primary-on-#{$color-tone});
        // 设置背景色
        @include theme-assist(background-color, $theme);
        // 设置 ripple
        @include button-ripple((opacity: $btn-filled-ripple-opacity));

        // disabled
        @include button-disabled($btn-bg-disabled);
      }
    }
  }
}

// Sizing
.btn-lg {
  font-weight: 400;
  @include btn-size($font-size-lg, $btn-padding-x-lg, $btn-padding-y-lg, $btn-border-radius-lg, $btn-line-height-lg);
}

.btn-sm {
  @include btn-size($font-size-xs, $btn-padding-x-sm, $btn-padding-y-sm, $btn-border-radius-sm, $btn-line-height-sm);
}

// 100% 宽度， 去掉圆角
.btn-full {
  display:       block;
  width:         100%;
  border-radius: 0;
}

// btn group
.btn-group {
  margin-left:  -$btn-group-margin-x;
  margin-right: -$btn-group-margin-x;

  > .btn {
    margin-bottom: $btn-group-margin-x * 2;
    margin-left:  $btn-group-margin-x;
    margin-right: $btn-group-margin-x;
  }
}
