/// Grid mixin

@import "../../base/variables/options";
@import "../../responsive/variable";

// 设置 row 样式
// 我们采用 flex 布局来实现
@mixin make-row($gutter: $grid-gutter-width) {
  box-sizing: border-box;
  display: flex;
  flex-wrap: wrap;
  margin-left: ($gutter / -2);
  margin-right: ($gutter / -2);

  * {
    box-sizing: border-box;
  }
}

// 设置列样式
@mixin make-col($size, $columns: $grid-columns) {
  flex: 0 0 percentage($size / $columns);
  // 设置最大宽度可以确保内容不会溢出，只有 IE10+ 和 Firefox 需要这样设置
  // 而 Chrome 和 Safari 不需要设置
  max-width: percentage($size / $columns);
}

// 定义生成 gird framework mixin
@mixin make-grid-columns($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $responsive-breakpoints) {
  // 定义列公共样式，通过占位符选择器
  %grid-column {
    position: relative;
    width: 100%;
    min-height: 1px; // 防止没内容时，列塌陷合并到一起
    padding-left: ($gutter / 2);
    padding-right: ($gutter / 2);
  }

  // fixme 响应式和非响应式布局待合并
  @if $enable-responsive {
    @each $breakpoint in map-keys($breakpoints) {
      // 返回前缀，比如：-md
      $infix: breakpoint-infix($breakpoint, $breakpoints);

      // 设置所有响应式的列样式，从 1 到 $columns
      @for $i from 1 through $columns {
        .col#{$infix}-#{$i} {
          @extend %grid-column;
        }
      }
      .col#{$infix} ,
      .col#{$infix}-auto {
        @extend %grid-column;
      }

      @include media-breakpoint-up($breakpoint, $breakpoints) {
        // 基于 Flexbox 设置相等宽度的列，例如 .col-md 等
        .col#{$infix} {
          flex-basis: 0;
          flex-grow: 1;
          max-width: 100%;
        }
        .col#{$infix}-auto {
          flex: 0 0 auto;
          width: auto;
          max-width: none;
        }

        @for $i from 1 through $columns {
          .col#{$infix}-#{$i} {
            @include make-col($i, $columns);
          }
        }

        // 重新排列 col 位置
        @for $i from 1 through $columns {
          .order#{$infix}-#{$i} {
            order: $i;
          }
        }
      }
    }
  } @else { // 如果不是响应式的情况
    @for $i from 1 through $columns {
      .col-#{$i} {
        @extend %grid-column;
      }
    }
    .col,
    .col-auto {
      @extend %grid-column;
    }
    .col {
      flex-basis: 0;
      flex-grow: 1;
      max-width: 100%;
    }
    .col-auto {
      flex: 0 0 auto;
      width: auto;
      max-width: none;
    }

    @for $i from 1 through $columns {
      .col-#{$i} {
        @include make-col($i, $columns);
      }
    }

    // 重新排列 col 位置
    @for $i from 1 through $columns {
      .order-#{$i} {
        order: $i;
      }
    }
  }
}
