# 需要对某一规则忽略时，可以使用 stylelint-disable 来处理，比如
# /* stylelint-disable color-no-hex */
# 基于 9.1.3 书写

# stylelint-config-standard 继承 stylelint-config-recommended，
# stylelint-config-recommended 有以下规则

#  "at-rule-no-unknown": true, # 无效的 css 规则
#  "block-no-empty": true, # 不允许规则中为空
#  "color-no-invalid-hex": true, # 无效的颜色值 Disallow invalid hex colors
#  "comment-no-empty": true, # 不允许空的注释
#  "declaration-block-no-duplicate-properties": [ # 不允许重复的属性
#    true,
#    {
#      ignore: ["consecutive-duplicates-with-different-values"] # 允许重复属性，但值不一样
#    }
#  ],
# 不允许定义了展开写的属性，又用简写的属性覆盖，比如 a {padding-left: 10px; padding: 20px; }
#  "declaration-block-no-shorthand-property-overrides": true,
#  "font-family-no-duplicate-names": true, # 字体不允许重复
#  "font-family-no-missing-generic-family-keyword": true, # 丢失了常用字体 Arial, sans-serif
#  "function-calc-no-unspaced-operator": true, # calc 函数操作符前后缺少空格
#  "function-linear-gradient-no-nonstandard-direction": true, # linear-gradient() 使用标准的语法 https://developer.mozilla.org/en-US/docs/Web/CSS/linear-gradient#Syntax
#  "keyframe-declaration-no-important": true, # 对于keyframe 表达式中不允许出现 !important Disallow !important within keyframe declarations.
#  "media-feature-name-no-unknown": true, # 媒体查询应该是已存在的名称 Disallow unknown media feature names.
#  "no-descending-specificity": true, # Disallow selectors of lower specificity from coming after overriding selectors of higher specificity. 不允许一个优先级高的选择器表达式出现在优先级低的前面 #container a { top: 10px; }   a { top: 0; }
#  "no-duplicate-at-import-rules": true, # Disallow duplicate @import rules within a stylesheet.
#  "no-duplicate-selectors": true, # 不允许出现重复的选择器
#  "no-empty-source": true, # 不允许一个空的样式文件
#  "no-extra-semicolons": true, # 不允许有多余的分号
#  "no-invalid-double-slash-comments": true, # 在 css 文件中不允许两个斜线来注释，但 sass 和 less 等除外
#  "property-no-unknown": true, # 不允许未知的属性 property
#  "selector-pseudo-class-no-unknown": true, # 不允许有未知的伪类，比如 :hover 是合法的
#  "selector-pseudo-element-no-unknown": true, # 不允许有未知的伪元素，比如 ::before 是合法的
#  "selector-type-no-unknown": true, # 不允许未知的标签选择符，比如 table div 等是合法的
#  "string-no-newline": true, # 字符串不允许跨行书写
#  "unit-no-unknown": true # 不允许不存在的单位

# stylelint-config-standard 有以下规则

# 在另一个规则前有一空行
#  "at-rule-empty-line-before": [ "always", {
#    except: [
#      "blockless-after-same-name-blockless", # 相同的名字块不用换行
#      "first-nested", # 首行不用换行
#    ],
#    ignore: ["after-comment"], # 或略注释之后换行
#  } ],
#  "at-rule-name-case": "lower", # 规则名称统一使用小写
#  "at-rule-name-space-after": "always-single-line", # 规则名称后需要加一空格
#  "at-rule-semicolon-newline-after": "always", # 分号之后必须换行再书写
#  "block-closing-brace-empty-line-before": "never", # 在一组规则结束时，是否加一空行，never 指从不
#  "block-closing-brace-newline-after": "always", # 每个独立的选择器后需要换行书写
#  "block-closing-brace-newline-before": "always-multi-line", # 每个 { 是否允许多行
#  "block-closing-brace-space-before": "always-single-line", # 空格规范
#  "block-opening-brace-newline-after": "always-multi-line", #
#  "block-opening-brace-space-after": "always-single-line",
#  "block-opening-brace-space-before": "always",
#  "color-hex-case": "lower", # 颜色小写值
#  "color-hex-length": "short", # 颜色短格式
#  "comment-empty-line-before": [ "always", { # 注释之前需要一空行
#    except: ["first-nested"], # 除了第一个表达式
#    ignore: ["stylelint-commands"], # 除了 stylelint 命令，比如 /* stylelint-disable color-no-hex */
#  } ],
#  "comment-whitespace-inside": "always", # 注释前后有空格
#  "custom-property-empty-line-before": [ "always", { # 自定义 css 属性之前添加一行
#    except: [
#      "after-custom-property", # 最后一个
#      "first-nested", # 第一个
#    ],
#    ignore: [
#      "after-comment", # 注释之后
#      "inside-single-line-block", # 单行时
#    ],
#  } ],
#  "declaration-bang-space-after": "never", # !important  ！和 important之前不需要空格
#  "declaration-bang-space-before": "always", # !important ！号之前需要空格
#  "declaration-block-semicolon-newline-after": "always-multi-line", # 分号后需要单独一行，但都写在一行是忽略
#  "declaration-block-semicolon-space-after": "always-single-line", # 分号之后需要一空格，指单行的时候
#  "declaration-block-semicolon-space-before": "never", # 分号之前从不需要空格
#  "declaration-block-single-line-max-declarations": 1, # 单行可以声明表达式数量，这里设为1
#  "declaration-block-trailing-semicolon": "always", # 总是需要一个分号
#  "declaration-colon-newline-after": "always-multi-line", # 冒号之后是否需要一新行，always-multi-line 表示只有在多行的时候
#  "declaration-colon-space-after": "always-single-line", # 冒号之后需要一空格，只有单行的时候
#  "declaration-colon-space-before": "never", # 冒号之前是否有空额
#  "declaration-empty-line-before": [ "always", { # 声明一个 css 属性之前是否需要一空行
#    except: [
#      "after-declaration",
#      "first-nested",
#    ],
#    ignore: [
#      "after-comment",
#      "inside-single-line-block",
#    ],
#  } ],
#  "function-comma-newline-after": "always-multi-line", # css 函数逗号后是否需要新行，always-multi-line 表示单行和多行都可以
#  "function-comma-space-after": "always-single-line", # 逗号之后是否有空格，单行是需要
#  "function-comma-space-before": "never", # 逗号之前是否需要空格
#  "function-max-empty-lines": 0, # 函数体中的内容写为多行时，不允许中间再插入空行
#  "function-name-case": "lower", # 函数名字小写，比如 translate 等
#  "function-parentheses-newline-inside": "always-multi-line", # 括号是否在新行，函数体单行时不需要，多行需要
#  "function-parentheses-space-inside": "never-single-line", # 括号间空格，单行不需要
#  "function-whitespace-after": "always", # 多个函数时，函数名称后是否需要空格
#  "indentation": 2, # 缩进，2个空格
#  "length-zero-no-unit": true, # 值为0时省略单位
#  "max-empty-lines": 1, # 最大的空行书
#  "media-feature-colon-space-after": "always", # 媒体查询，冒号后是否需要空格
#  "media-feature-colon-space-before": "never", # 媒体查询，冒号之前是否需要空格
#  "media-feature-name-case": "lower", # 媒体查询，小写
#  "media-feature-parentheses-space-inside": "never", # 媒体查询，括号前后是否加空格
#  "media-feature-range-operator-space-after": "always", # 媒体查询，比较符后面是否需要加空格
#  "media-feature-range-operator-space-before": "always", # 媒体查询，比较符前面是否需要加空格
#  "media-query-list-comma-newline-after": "always-multi-line", # 媒体查询，逗号放在上一行的后面
#  "media-query-list-comma-space-after": "always-single-line", # 媒体查询，逗号后需要空格
#  "media-query-list-comma-space-before": "never", # 媒体查询，逗号前不需要空格
#  "no-eol-whitespace": true, # 结束符号后面不允许有空白
#  "no-missing-end-of-source-newline": true, # 文件最后需要一空行
#  "number-leading-zero": "always", # 小数时，是否需要前面的 0
#  "number-no-trailing-zeros": true, # 小数后面不允许有多余的 0
#  "property-case": "lower", # css 属性名应该小写
#  "rule-empty-line-before": [ "always-multi-line", { # 每个规则之前加空行
#    except: ["first-nested"],
#    ignore: ["after-comment"],
#  } ],
#  "selector-attribute-brackets-space-inside": "never", # 属性选择符不用空格隔开 [target] {}
#  "selector-attribute-operator-space-after": "never", # 属性选择符操作符后面没有空格 [target="_blank"] {}
#  "selector-attribute-operator-space-before": "never", # 属性选择符操作符前面没有空格 [target="_blank"] {}
#  "selector-combinator-space-after": "always", # 组合选择符后面有空格
#  "selector-combinator-space-before": "always", # 组合选择符前面有空格
#  "selector-descendant-combinator-no-non-space": true, # 子孙选择符不需要多余的空格，一个就够了
#  "selector-list-comma-newline-after": "always", # 用逗号隔开的多个选择符，每个应该单独一行
#  "selector-list-comma-space-before": "never", # 用逗号隔开的多个选择符，逗号前没有空格
#  "selector-max-empty-lines": 0, # 选择器中间空行数为 0
#  "selector-pseudo-class-case": "lower", # 伪类小写
#  "selector-pseudo-class-parentheses-space-inside": "never", # 伪类括号前后没有空格
#  "selector-pseudo-element-case": "lower", # 伪元素小写
#  "selector-pseudo-element-colon-notation": "double", # 伪元素必须是多冒号
#  "selector-type-case": "lower", # 标签元素小写
#  "unit-case": "lower", # 单位小写
#  "value-list-comma-newline-after": "always-multi-line", # css 属性值，多个时，逗号前后值可以在一行，也可以在多行书写
#  "value-list-comma-space-after": "always-single-line", # css 属性值，多个时，逗号后需要空格或换行
#  "value-list-comma-space-before": "never", # css 属性值，多个时，逗号前不需要空格
#  "value-list-max-empty-lines": 0, # css 属性值，多个时，不要出现空白行

extends: stylelint-config-standard
ignoreFiles:
  - node_modules/**/*
  - _gh_pages/**/*
  - dist/**/*
  - components/normalize/_normalize-css.scss
plugins:
  - stylelint-scss
  - stylelint-order
rules:
  # Follow best practices 字体需要的时候应该用引号括起来
  font-family-name-quotes: always-where-recommended
  # https://stackoverflow.com/a/34383157/467582 需要引号
  function-url-quotes: always
  # https://www.w3.org/TR/selectors/#attribute-selectors
  # http://stackoverflow.com/q/3851091 # 属性选择符值，用引号括起来
  selector-attribute-quotes: always
  # Double-quotes are our convention throughout our codebase within (S)CSS. They also reflect how
  # attribute strings are normally quoted within the DOM.
  string-quotes: double # 使用双引号
  # 声明的单位
  declaration-property-unit-whitelist:
    font-size:
      - "rem"
      - "px"
      - "%"
  # The following prefix rules are enabled since we use autoprefixer
  # 不需要加前缀，使用autoprefixer自动补齐
  at-rule-no-vendor-prefix: true
  media-feature-name-no-vendor-prefix: true
  selector-no-vendor-prefix: true
  value-no-vendor-prefix: true # 不需要加前缀
  # Usually if you're nesting past 4 levels deep there's a problem 嵌套深度
  max-nesting-depth: 4
  # selector 组合选择符个数
  selector-max-compound-selectors: 4
  # 允许组合选择符各自组合个数
  # For specificity: disallow IDs (0). Allow for complex combinations of classes, pseudo-classes,
  # attribute modifiers based on selector-max-compound-selectors, plus an addition for
  # pseudo-classes (4). Allow for pseudo-elements (1).
  selector-max-specificity: 0,5,2
  no-descending-specificity: null
  at-rule-no-unknown: # 不应该有不存在的规则
    - true
    - ignoreAtRules: # 以下忽略
      - at-root
      - content
      - each
      - else
      - error
      - for
      - function
      - include
      - if
      - mixin
      - return
      - warn
      - while
      - extend
  # Disallow "@extend" in scss.
  # http://csswizardry.com/2016/02/mixins-better-for-performance/
  # http://vanseodesign.com/css/sass-mixin-or-extend/
  # Besides performance, @extend actually *changes* the selector precedence by creating a compound
  # selector, which can lead to ambiguous results.
  # 限定的不使用规则列表
  #  at-rule-blacklist:
  #    - extend

  # Extremely useful for typos, and anything emergent can be ignored by this rule
  property-no-unknown:
    - true
    - ignoreProperties:
        - contain
  # There is no reason that a specific ID would be needed for UI components
  # 不需要 id 选择符
  selector-max-id: 0
  # 不使用指定的标签元素来定义属性，比如 a.link {}，应该写成 .link{}
  selector-no-qualifying-type:
    - true
    - ignore:
       - attribute
  # 标签元素最多个数，这里设为零
  #  selector-max-type:
  #    - 0
  #    - ignoreTypes:
  #        - /fieldset/
  # 是否允许使用通用选择符 * ，以及个数
  selector-max-universal: 0
  # Names are more semantic than numbers font-weight 使用名称而非数字
  font-weight-notation: null
  # http://www.paulirish.com/2010/the-protocol-relative-url/  background 中的 url 不要使用 scheme-relative url 即以 // 开头的
  function-url-no-scheme-relative: true
  # 注释中的黑名单，以下对于 TODO 和 FIXME 给出警告
  comment-word-blacklist:
    -
      - /^TODO:/
      - /^FIXME:/
    - severity: warning
  # 小数时，不需要前面的 0
  number-leading-zero: never
  at-rule-empty-line-before: # 规则前必须加空行
    - always
    -
      except:
        - blockless-after-blockless
        - first-nested
      ignore:
        - after-comment
        - inside-block
      ignoreAtRules:
        - else
  block-closing-brace-newline-after:
    - always
    - ignoreAtRules:
      - if
      - else
  color-named: never # 不使用颜色名称来定义颜色
  shorthand-property-no-redundant-values: true # 能简写的就简写，比如 margin: 1px 1px 1px 1px;
  no-unknown-animations: true # 不应该使用无定义的动画名称，比如 a { animation-name: fancccy-slide; }  @keyframes fancy-slide {}
  function-comma-newline-before: always-multi-line # 在逗号前添加新行
  value-keyword-case: lower # 属性值应该小写
  value-list-comma-newline-before: never-multi-line ## css 属性值，多个时，逗号前后值可以在一行，也可以在多行书写
  declaration-block-semicolon-newline-before: never-multi-line
  selector-list-comma-space-after: always-single-line # 逗号后是否有空格
  selector-list-comma-space-before: never # 逗号前是否有空格
  selector-list-comma-newline-after: always-multi-line # 用逗号隔开的多个选择符，每个应该单独一行
  media-query-list-comma-newline-before: never-multi-line # 媒体查询，逗号放在上一行的后面
  # at-rule-name-newline-after: always-multi-line
  at-rule-semicolon-newline-after: always # 分号之后必须是新的行
  at-rule-semicolon-space-before: never # 分号之前必须有空格
  no-eol-whitespace: null
  value-list-max-empty-lines: 1
  function-max-empty-lines: 1
  selector-pseudo-class-no-unknown:
    - true
    - ignorePseudoClasses:
      - global

  # 以下为排序插件 stylelint-order
  order/order: # 顺序按照以下方式排序，本地规则（比如scss 中的 @include @extend 等），自定义 css 属性，css 属性
    -
      - custom-properties
      - declarations
      -
        type: at-rule
        hasBlock: false
    -
      unspecified: ignore # 为未知的忽略，即未知的不参与排序显示
      disableFix: true # 自动按照配置好的顺序 fix
  # 以下排序参考 https://github.com/sasstools/sass-lint/blob/develop/lib/config/property-sort-orders/smacss.yml
  # 和 Bootstrap 并做了调整，对于四个方向设置，采用先写上下，再写左右的风格
  order/properties-order:
    # 伪类内容
    - content

    # Layout
    - position
    - top
    - right
    - bottom
    - left
    - z-index
    - display

    # Flex Layout
    - flex # flex属性是 flex-grow, flex-shrink 和 flex-basis 的简写，默认值为 0 1 auto
    - flex-align
    - flex-basis # 设置主轴上的初始大小
    - flex-direction
    - flex-wrap
    - flex-flow # 是 flex-direction 和 flex-wrap 的简写形式，默认值为row nowrap
    - flex-shrink
    - flex-grow
    - flex-order
    - flex-pack
    - align-content
    - align-items
    - align-self
    - justify-content
    - order

    # Box

    - box-sizing
    - width
    - min-width
    - max-width

    - height
    - min-height
    - max-height

    - margin
    - margin-top
    - margin-right
    - margin-bottom
    - margin-left

    - padding
    - padding-top
    - padding-right
    - padding-bottom
    - padding-left

    # Border

    - border
    - border-top
    - border-right
    - border-bottom
    - border-left
    - border-width
    - border-top-width
    - border-right-width
    - border-bottom-width
    - border-left-width

    - border-style
    - border-top-style
    - border-right-style
    - border-bottom-style
    - border-left-style

    - border-color
    - border-top-color
    - border-right-color
    - border-bottom-color
    - border-left-color

    - border-radius
    - border-top-left-radius
    - border-top-right-radius
    - border-bottom-left-radius
    - border-bottom-right-radius

    - border-image
    - border-image-source
    - border-image-slice
    - border-image-width
    - border-image-outset
    - border-image-repeat
    - border-spacing
    - border-collapse

    # 描边

    - outline
    - outline-width
    - outline-style
    - outline-color
    - outline-offset

    - box-shadow

    # Overflow
    - overflow
    - overflow-x
    - overflow-y
    - '-webkit-overflow-scrolling'
    - '-ms-overflow-style'

    # 浮动
    - float
    - clear

    # 列布局
    - columns
    - column-count
    - column-fill
    - column-gap
    - column-rule
    - column-rule-width
    - column-rule-style
    - column-rule-color
    - column-span
    - column-width

    - grid-gap
    - grid-template-columns

    # 字体和排版
    - font
    - font-family
    - font-size
    - font-style
    - font-weight
    - font-variant # 定义小型大写字母
    - font-size-adjust # 调整字体大小，目前只有 Firefox 实现了
    - font-stretch # 为字体定义一个正常或经过伸缩变形的字体外观
    - font-emphasize # 目前浏览器不支持
    - font-emphasize-position
    - font-emphasize-style
    - font-smooth
    - font-smoothing
    - '-moz-osx-font-smoothing'
    - '-webkit-font-smoothing'

    - hyphens # 断行时连字符的处理
    - line-height

    # 前景和背景
    - color
    - background
    - background-color
    - background-image
    - background-repeat
    - background-attachment
    - background-position
    - background-position-x
    - background-position-y
    - background-clip
    - background-origin
    - background-size
    - filter
    - fill # svg 中填充
    - stroke
    - clip

    # 对齐方式
    - text-align
    - text-align-last
    - text-emphasis # 目前Firefox和 chrome浏览器支持
    - text-emphasis-color
    - text-emphasis-style
    - text-emphasis-position
    - text-decoration
    - text-indent
    - text-justify
    - text-outline
    - text-overflow
    - text-overflow-ellipsis
    - text-overflow-mode
    - text-rendering
    - text-shadow
    - text-transform
    - text-wrap
    - letter-spacing
    - '-webkit-line-clamp'
    - word-break
    - word-spacing
    - word-wrap
    - overflow-wrap
    - tab-size
    - white-space
    - vertical-align
    - direction # 设置文本的显示方向
    - unicode-bidi # 设置文本方向

    # List
    - list-style
    - list-style-position
    - list-style-type
    - list-style-image

    # 动画
    - opacity
    - '-ms-interpolation-mode'
    - perspective # 元素被查看位置的视图
    - animation
    - animation-name
    - animation-duration
    - animation-play-state
    - animation-timing-function
    - animation-delay
    - animation-iteration-count

    - transform
    - transform-box
    - transform-origin
    - transform-style

    - transition
    - transition-delay
    - transition-duration
    - transition-property
    - transition-timing-function

    - will-change

    # Cursor

    - cursor
    - pointer-events
    - user-select

    # Other
    - resize
    - touch-action
    - visibility
    - table-layout
    - empty-cells
    - caption-side
    - quotes
    - counter-reset
    - counter-increment
    - nav-index
    - nav-up
    - nav-down
    - nav-left
    - nav-right
    - appearance # 设置元素的默认形状
    - speak

    # 打印属性
    - orphans
    - page-break-after
    - page-break-before
    - page-break-inside
    - widows

  # stylelint-scss 插件配置
  # Prevents unneeded nesting selectors 不要写多余的嵌套 &
  scss/selector-no-redundant-nesting-selector: true
  # import 时不用写下划线
  scss/at-import-no-partial-leading-underscore: true
  # @else 语句后写内容需要在新的一行中写
  scss/at-else-closing-brace-newline-after: always-last-in-chain
  # @else 前面需要空格
  scss/at-else-closing-brace-space-after: always-intermediate
  # @else 前面不需要空行
  scss/at-else-empty-line-before: never
  # @if 语句后写内容需要在新的一行中写
  scss/at-if-closing-brace-newline-after: always-last-in-chain
  # @if 前面需要空格
  scss/at-if-closing-brace-space-after: always-intermediate
