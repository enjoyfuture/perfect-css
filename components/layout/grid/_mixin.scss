/// Grid mixin
@import "../../base/variables/options";
@import "../../responsive/variable";
@import "./variable";

// 设置 row 样式
// 我们采用 flex 布局来实现
@mixin make-row($gutter: $grid-gutter-width) {
  box-sizing:   border-box;
  display:      flex;
  flex-wrap:    wrap;
  margin-left:  ($gutter / -2);
  margin-right: ($gutter / -2);

  // 所有的包含 col 的样式设置 border-box 为 border-box
  [class*="col"] {
    box-sizing: border-box;
  }
}

// 设置列样式
@mixin make-col($size, $columns: $grid-columns) {
  flex:      0 0 percentage($size / $columns);
  // 设置最大宽度可以确保内容不会溢出，只有 IE10+ 和 Firefox 需要这样设置
  // 而 Chrome 和 Safari 不需要设置
  max-width: percentage($size / $columns);
}

// 定义列偏移 mixin，用 margin-left 设置其偏移量
@mixin make-col-offset($size, $columns: $grid-columns) {
  $num: $size / $columns;
  margin-left: if($num == 0, 0, percentage($num));
}

// 响应式和非响应式封装成公共的样式
// 相等宽度对应的样式
@mixin make-grid-columns-equal-width($columns, $infix: "") {
  // 设置所有响应式的列样式，从 1 到 $columns
  @for $i from 1 through $columns {
    .col#{$infix}-#{$i} {
      @extend %grid-column;
    }
  }
  .col#{$infix},
  .col#{$infix}-auto {
    @extend %grid-column;
  }
}

// 多个格子对应的样式
@mixin make-grid-columns-percentage($columns, $infix: "") {
  // 基于 Flexbox 设置相等宽度的列，例如 .col-md 等
  .col#{$infix} {
    flex-basis: 0;
    flex-grow:  1;
    max-width:  100%;
  }
  .col#{$infix}-auto {
    flex:      0 0 auto;
    width:     auto;
    max-width: none;
  }

  @for $i from 1 through $columns {
    .col#{$infix}-#{$i} {
      @include make-col($i, $columns);
    }
  }

  // 重新排列 col 位置
  .order#{$infix}-first {
    order: -1;
  }

  @for $i from 1 through $columns {
    .order#{$infix}-#{$i} {
      order: $i;
    }
  }

  // 设置 offset ，从 0 到 $columns - 1
  @for $i from 0 through ($columns - 1) {
    @if not ($infix == "" and $i == 0) { // 对于有响应式前缀，并且是第0个，则或略，例如 .offset-xs-0
      .offset#{$infix}-#{$i} {
        @include make-col-offset($i, $columns);
      }
    }
  }
}

// 定义生成 gird framework mixin
@mixin make-grid-columns($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $responsive-breakpoints) {
  // 定义列公共样式，通过占位符选择器
  %grid-column {
    position:      relative;
    width:         100%;
    min-height:    1px; // 防止没内容时，列塌陷合并到一起
    padding-left:  ($gutter / 2);
    padding-right: ($gutter / 2);
  }

  @if $enable-responsive {
    @each $breakpoint in map-keys($breakpoints) {
      // 返回前缀，比如：-md
      $infix: breakpoint-infix($breakpoint, $breakpoints);
      @include make-grid-columns-equal-width($columns, $infix);
      @include media-breakpoint-up($breakpoint, $breakpoints) {
        @include make-grid-columns-percentage($columns, $infix);
      }
    }
  } @else { // 如果不是响应式的情况
    @include make-grid-columns-equal-width($columns);
    @include make-grid-columns-percentage($columns);
  }
}
