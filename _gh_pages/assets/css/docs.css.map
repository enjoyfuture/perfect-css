{"version":3,"sources":["webpack:///./docs/assets/scss/docs/_catalogue.scss","webpack:///./components/theme/_mixin.scss","webpack:///./docs/assets/scss/common/_header.scss","webpack:///./docs/assets/scss/common/_footer.scss","webpack:///./components/theme/_variable.scss","webpack:///./docs/assets/scss/common/_menu.scss","webpack:///./docs/assets/scss/common/_catalogue.scss","webpack:///./docs/assets/scss/common/_anchor.scss","webpack:///./docs/assets/scss/common/_main.scss","webpack:///./docs/assets/scss/docs/_document.scss","webpack:///./docs/assets/scss/mixins/_header.scss","webpack:///./components/animation/_variable.scss","webpack:///./docs/assets/scss/docs/_example.scss","webpack:///./docs/assets/scss/mixins/_grid.scss","webpack:///./docs/assets/scss/docs/_highlight.scss","webpack:///./docs/assets/scss/docs/_highlight-custom.scss","webpack:///./docs/assets/scss/docs/_color-palette.scss"],"names":[],"mappings":"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","file":"../css/docs.css","sourcesContent":["// 目录和内容\n@import \"../../../../components/responsive/mixin\";\n@import \"../../../../components/theme/mixin\";\n@import \"../../../../components/animation/mixin\";\n@import \"../../../../components/base/variables/font\";\n@import \"../../../../components/layout/grid/variable\";\n\n.doc-catalogue-menu:hover {\n  .doc-catalogue-panel {\n    transform: translate(0, 0);\n  }\n}\n\n.doc-catalogue-panel {\n  position: fixed;\n  top: 64px;\n  right: 0;\n  z-index: 1000;\n  padding-top: .5rem;\n  padding-left: .5rem;\n  border-top: 1px solid;\n  border-bottom: 1px solid;\n  border-left: 1px solid;\n  overflow: hidden;\n  font-size: 12px;\n  background-color: #fff;\n  transform: translate(200%, 0);\n  @include theme-prop(border-color, secondary-lightest);\n  @include animation-transition(transform);\n}\n\n.doc-catalogue-icon {\n  position: fixed;\n  top: 4.5rem;\n  right: .5rem;\n  z-index: 1000;\n  cursor: pointer;\n  @include theme-prop(background-color, hint-on-dark);\n\n  .icon-pure-catalogue {\n    @include theme-prop(color, secondary);\n  }\n}\n\n.doc-catalogue-menu-right {\n  display: none;\n}\n\n@media screen and (min-width: 1200px) {\n  .doc-catalogue-menu {\n    display: none;\n  }\n\n  .doc-main {\n    display: flex;\n  }\n\n  .doc-content {\n    flex: 0 0 percentage(20 / $grid-columns);\n    max-width: percentage(20 / $grid-columns);\n  }\n\n  .doc-catalogue-menu-right {\n    display: block;\n    flex: 0 0 percentage(4 / $grid-columns);\n    max-width: percentage(4 / $grid-columns);\n    margin-left: 1rem;\n    border-left: 1px solid $grey-color-300;\n  }\n\n  .doc-catalogue-panel {\n    position: static;\n    right: auto;\n    margin-top: 1rem;\n    border: 0;\n    transform: translate(0, 0);\n  }\n\n  .doc-catalogue-header {\n    position: relative;\n    margin-top: 1.25rem;\n\n    &::before {\n      content: \"目录\";\n      position: absolute;\n      top: -2rem;\n      padding-left: .5rem;\n      font-size: $font-size;\n      font-weight: 500;\n    }\n  }\n}\n\n.doc-catalogue {\n  .menu-title {\n    position: relative;\n    min-width: 200px;\n    padding-left: .5rem;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n\n    &:hover::after,\n    &.active::after {\n      content: \"\";\n      position: absolute;\n      top: 25%;\n      bottom: 20%;\n      left: 0;\n      border-left: 1px solid;\n      @include theme-prop(border-left-color, secondary);\n    }\n\n    &.active::after {\n      border-left-width: 2px;\n    }\n  }\n}\n","// theme mixin\n@import \"./variable\";\n@import \"./function\";\n\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $theme-property-values (_variables.scss).\n */\n\n// 给属性 $property 设置颜色 $style 值\n// 属性 $property 一般用在 color background-color border-color 等，也可用在任何可以设置颜色值的属性上\n// $style 应该是 $theme-property-values 中某个 key\n// 该 mixin 主要用来设置主题颜色值，并且设置了主题 css 变量值\n// 用户通过修改 css 变量值可以动态的修改整个主题值，比如在 body 上修改 css 变量值\n@mixin theme-color-prop($property, $style, $important) {\n  @if $important {\n    #{$property}: map-get($theme-property-values, $style) !important;\n    #{$property}: var(--theme-#{$style}, map-get($theme-property-values, $style)) !important;\n  } @else {\n    #{$property}: map-get($theme-property-values, $style);\n    #{$property}: var(--theme-#{$style}, map-get($theme-property-values, $style));\n  }\n}\n\n// 用来设置主题色对应的对比色调值，浅色还是深色\n// $style 应该是 $theme-contrast-tone-property-values 中某个 key\n// 该 mixin 除了设置了对比色调值，还设置了对应的 css 变量值\n@mixin theme-contrast-tone-prop($property, $style, $important) {\n  // 根据 $style 返回变量，主要是 light 或 dark 变量\n  $theme-var: theme-contrast-tone-var($style);\n\n  @if $important {\n    #{$property}: map-get($theme-contrast-tone-property-values, $style) !important;\n    #{$property}: var(--theme-#{$theme-var}, map-get($theme-contrast-tone-property-values, $style)) !important;\n  } @else {\n    #{$property}: map-get($theme-contrast-tone-property-values, $style);\n    #{$property}: var(--theme-#{$theme-var}, map-get($theme-contrast-tone-property-values, $style));\n  }\n}\n\n// 设置辅助颜色 mixin\n// 根据给定的 $style ($theme-assist-colors 中的 key) 和 $opacity 设置颜色\n@mixin theme-assist($property, $style, $opacity: 1, $important: false) {\n\n  $color: map-get($theme-assist-colors, $style);\n\n  @if ($property == \"backgroud-color\" and $opacity != 1) {\n    // 变量 --theme-#{$style} 在 theme.scss 中定义\n    $css-var: var(--theme-#{$style}, $color);\n\n    @if $important {\n      background-color: rgba($color, $opacity) !important;\n    } @else {\n      background-color: rgba($color, $opacity);\n    }\n\n    // 可以动态的设置颜色透明度，属于 CSS 4 color 范畴，目前浏览器支持的不是很好\n    // 可以用 rgba 来代替，但只能静态设置，不可以随着颜色和透明度的变化动态设置\n    // https://drafts.csswg.org/css-color/#modifying-colors\n    @supports (background-color: color(green a(10%))) {\n      @if $important {\n        background-color: color(#{$css-var} a(#{percentage($opacity)})) !important;\n      } @else {\n        background-color: color(#{$css-var} a(#{percentage($opacity)}));\n      }\n    }\n  } @else {\n    // 也可以使用 alpha($color); 区别是 function alpha 也可以处理 the proprietary Microsoft `alpha(opacity=20)\n    // 而 function opacity 只支持颜色值，如果不是颜色值则报错\n    $alpha: opacity($color);\n\n    @if ($alpha == 1) {\n      @if $important {\n        #{$property}: $color !important;\n      } @else {\n        #{$property}: $color;\n      }\n    } @else {\n      @if $important {\n        #{$property}: rgba($color, $opacity) !important;\n      } @else {\n        #{$property}: rgba($color, $opacity);\n      }\n    }\n  }\n\n  // 因为不支持以下写法，所以只处理 $opacity == 1 的情况\n  // #{$property}: rgba(var(--theme-#{$style}, $color), $opacity);\n  @if ($opacity == 1) {\n    @if $important {\n      #{$property}: var(--theme-#{$style}, $color) !important;\n    } @else {\n      #{$property}: var(--theme-#{$style}, $color);\n    }\n  }\n}\n\n// 糅合 theme-color-prop 和 theme-contrast-tone-prop 和 theme-assist\n// 如果 $style 是颜色值，则直接设置颜色\n@mixin theme-prop($property, $style, $opacity: 1, $important: false) {\n  // 如果是颜色值，则直接设置\n  @if theme-is-valid-theme-prop-value($style) {\n    @if $important {\n      #{$property}: $style !important;\n    } @else {\n      #{$property}: $style;\n    }\n  } @else {\n    // 看是否在 $theme-property-values 中\n    $color: map-get($theme-property-values, $style);\n\n    @if ($color) {\n      @include theme-color-prop($property, $style, $important);\n    } @else {\n      // 再判断是否在 $theme-contrast-tone-property-values 中\n      $color: map-get($theme-contrast-tone-property-values, $style);\n\n      @if ($color) {\n        @include theme-contrast-tone-prop($property, $style, $important);\n      } @else {\n        // 最后判断是否在辅助颜色 $theme-assist-colors 中\n        $color: map-get($theme-assist-colors, $style);\n\n        @if ($color) {\n          @include theme-assist($property, $style, $opacity, $important);\n        } @else {\n          @error \"无效的主题属性值，#{$style} 必须是以下的某一 key $theme-property-values: #{map-keys($theme-property-values)}, $theme-contrast-tone-property-values: #{map-keys($theme-contrast-tone-property-values)}, $theme-assist-colors: #{map-keys($theme-assist-colors)}\";\n        }\n      }\n    }\n  }\n}\n\n// 通过设置前后景来定制主题，该 mixin 只处理简单的 color 和 background-color ，对于更复制的需要组件单独定义\n// $style 指 $theme-property-values 或 $theme-assist-colors 中属性值\n// $fore true 指前景，false 指背景，默认 true\n@mixin theme($style, $fore: true) {\n  $themes: $theme-property-values;\n  $themes: map-merge($theme-assist-colors, $themes);\n  $color: map-get($themes, $style);\n\n  @if ($color == null) {\n    @error \"无效的主题属性值，#{$style} 必须是以下的某一 key $theme-property-values: #{map-keys($theme-property-values)}, $theme-assist-colors: #{map-keys($theme-assist-colors)}\";\n  }\n\n  // 色调，判断是深色还是浅色\n  $tone: theme-tone($color);\n  // 对比色调\n  $contrast-tone: theme-contrast-tone($color);\n\n  @if ($fore) {\n    color: $color;\n    color: var(--theme-#{$style}, $color);\n    background-color: map-get($theme-contrast-tone-property-values, primary-on-#{$tone});\n    background-color: var(--theme-#{$contrast-tone}-primary, map-get($theme-contrast-tone-property-values, primary-on-#{$tone}));\n  } @else {\n    color: map-get($theme-contrast-tone-property-values, primary-on-#{$tone});\n    color: var(--theme-#{$contrast-tone}-primary, map-get($theme-contrast-tone-property-values, primary-on-#{$tone}));\n    background-color: $color;\n    background-color: var(--theme-#{$style}, $color);\n  }\n}\n\n// 设置主题对应的背景和前景颜色 class\n// 如果 $tone 设为 true，则会给出对应的前景或背景对比颜色色调值（深色或浅色），\n// 这样可以突出对比度，方便阅读，在需要的地方可以调用该 mixin ，并且参数 $tone 设为 true 即可\n@mixin theme-classes($tone: false) {\n  @each $style, $color in $theme-property-values {\n    $color-alpha: alpha($color);\n\n    // 设置 primary 和 secondary 以及浅色和深色背景颜色\n    // .theme-primary-bg {background-color: #2196f3; background-color: var(--theme-primary, #2196f3);}\n    // 对于 $style 值为 background 时\n    // .theme-background {background-color: #fff; background-color: var(--theme-background, #fff);}\n    $class-name: if($style == \"background\", $style, #{$style}-bg);\n\n    .theme-#{$class-name} {\n      @include theme-prop(background-color, $style, true);\n\n      @if ($tone) {\n        @if ($color-alpha == 1) {\n          @include theme-prop(color, primary-on-#{$style}, true);\n        } @else {\n          @include theme-prop(color, primary-on-light, true);\n        }\n      }\n    }\n\n    // 设置 primary 和 secondary 以及浅色和深色前景颜色\n    // .theme-primary {color: #2196f3; color: var(--theme-primary, #2196f3);}\n    @if $style != \"background\" {\n      .theme-#{$style} {\n        @include theme-prop(color, $style, true);\n\n        @if ($tone) {\n          @if ($color-alpha == 1) {\n            @include theme-prop(background-color, primary-on-#{$style}, true);\n          } @else {\n            @include theme-prop(background-color, primary-on-dark, true);\n          }\n        }\n      }\n    }\n  }\n}\n\n// 设置辅助颜色对应的背景和前景颜色 class\n// 如果 $tone 设为 true，则会给出对应的前景或背景对比颜色色调值（深色或浅色），\n// 这样可以突出对比度，方便阅读，在需要的地方可以调用该 mixin ，并且参数 $tone 设为 true 即可\n@mixin theme-assist-classes($tone: false) {\n  @each $theme, $color in $theme-assist-colors {\n    $color-alpha: alpha($color);\n\n    // 辅助颜色背景色\n    // .theme-success-bg {background-color: #4caf50; background-color: var(--theme-success, #4caf50);}\n    .theme-#{$theme}-bg {\n      background-color: $color !important;\n      background-color: var(--theme-#{$theme}, $color) !important;\n\n      @if ($tone) {\n        $contrast-tone: if($color-alpha == 1, theme-contrast-tone($color), \"dark\");\n        $color: map-get(map-get($theme-text-colors, $contrast-tone), primary);\n\n        color: $color !important;\n      }\n    }\n\n    // 辅助颜色前景色\n    // .theme-success {color: #4caf50; color: var(--theme-success, #4caf50);}\n    .theme-#{$theme} {\n      color: $color !important;\n      color: var(--theme-#{$theme}, $color) !important;\n\n      @if ($tone) {\n        $contrast-tone: theme-contrast-tone($color);\n        $color: map-get(map-get($theme-text-colors, $contrast-tone), primary);\n\n        background-color: $color !important;\n      }\n    }\n  }\n}\n\n// 设置灰度颜色对应的背景和前景颜色 class\n// 如果 $tone 设为 true，则会给出对应的前景或背景对比颜色色调值（深色或浅色），\n// 这样可以突出对比度，方便阅读，在需要的地方可以调用该 mixin ，并且参数 $tone 设为 true 即可\n@mixin theme-grey-classes($tone: false) {\n  // 灰度颜色前景-背景颜色值\n  @each $theme, $color in $greys {\n    .theme-grey-#{$theme} {\n      color: $color !important;\n\n      @if ($tone) {\n        $contrast-tone: theme-contrast-tone($color);\n        $color: map-get(map-get($theme-text-colors, $contrast-tone), primary);\n\n        background-color: $color !important;\n      }\n    }\n\n    .theme-grey-bg-#{$theme} {\n      background-color: $color !important;\n\n      @if ($tone) {\n        $contrast-tone: theme-contrast-tone($color);\n        $color: map-get(map-get($theme-text-colors, $contrast-tone), primary);\n\n        color: $color !important;\n      }\n    }\n  }\n}\n","@import \"../../../../components/theme/mixin\";\n\n.navbar-primary {\n  @include theme-prop(background-color, primary-on-light);\n}\n\n.drawer-toggle {\n  .icon-pure-menu {\n    @include theme-prop(color, secondary-on-dark);\n  }\n\n  &:hover {\n    .icon-pure-menu {\n      @include theme-prop(color, primary-on-dark);\n    }\n  }\n}\n","// 页面底部样式\n\n@import \"../../../../components/theme/variable\";\n@import \"../../../../components/base/variables/font\";\n\n.footer-assist {\n  // 此处的数值等于 footer 的高度 + 预留的间距\n  margin-top: $font-size-base * $line-height-base + 2rem;\n}\n\n.footer {\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  padding: 1rem 0;\n  border-top: 1px solid $grey-color-300;\n  color: map-get(map-get($theme-text-colors, dark), secondary);\n  background: #fff;\n}\n","// 自定义主题颜色\n@import \"./color-palette\";\n@import \"../base/variables/options\";\n@import \"./function\";\n\n// 定义颜色透明度\n$alpha: .16 !default;\n\n// FIXME 是否把浅色和深色颜色值去掉\n// 主题颜色，换肤一般改变这三个基本颜色即可\n// 这三种基本颜色主题，会用在所有 CSS 组件上，\n$theme-primary: #2196f3 !default; // 主颜色，使用蓝色 $blue-500 #2196f3\n$theme-secondary: #e040fb !default; // 次颜色，也叫强调(accent)颜色，使用紫色 $purple-a-200 #e040fb\n$theme-background: #fff !default; // 背景颜色，默认白色\n\n// 主题颜色浅色\n$theme-primary-light: #64b5f6 !default; // 取 $blue-300\n$theme-secondary-light: #ea80fc !default; // 取 $purple-a-100\n\n// 主题颜色更浅色\n$theme-primary-lighter: #bbdefb !default; // 取 $blue-100\n$theme-secondary-lighter: #e1bee7 !default; // 取 $purple-100\n\n// 主题颜色最浅色\n$theme-primary-lightest: #e3f2fd !default; // 取 $blue-50\n$theme-secondary-lightest: #f3e5f5 !default; // 取 $purple-50\n\n// 主题颜色深色\n$theme-primary-dark: #1976d2 !default; // 取 $blue-700\n$theme-secondary-dark: #d500f9 !default; // 取 $purple-a-400\n\n// 主题颜色更深色\n$theme-primary-darker: #1565c0 !default; // 取 $blue-800\n$theme-secondary-darker: #a0f !default; // 取 $purple-a-700\n\n// 主题颜色最深色\n$theme-primary-darkest: #0d47a1 !default; // 取 $blue-900\n$theme-secondary-darkest: #4a148c !default; // 取 $purple-900\n\n// 主题颜色透明色，有的地方需要设置透明的背景色，这时可以使用该变量，比如波纹组件中\n// 如果浏览器支持了 CSS module，我们可以动态的修改 color 值，直接使用 $theme-primary 加透明参数值即可，只是目前浏览器还不支持。\n// 关于 CSS Color Level 4 提供了大量关于 Color 的处理，只是好多还没有实现，未来这些功能都实现后，CSS Color 的处理将变得更方便，更灵活，期待中......\n// https://www.w3.org/TR/2016/WD-css-color-4-20160705/\n$theme-primary-alpha: rgba($theme-primary, $alpha) !default;\n$theme-secondary-alpha: rgba($theme-secondary, $alpha) !default;\n\n// 浅色或深色色调，给出基本颜色的对比色调， light or dark\n$theme-primary-contrast-tone: theme-contrast-tone($theme-primary);\n$theme-secondary-contrast-tone: theme-contrast-tone($theme-secondary);\n\n// 主题颜色浅色对比色调\n$theme-primary-light-contrast-tone: theme-contrast-tone($theme-primary-light);\n$theme-secondary-light-contrast-tone: theme-contrast-tone($theme-secondary-light);\n\n// 主题颜色更浅色对比色调\n$theme-primary-lighter-contrast-tone: theme-contrast-tone($theme-primary-lighter);\n$theme-secondary-lighter-contrast-tone: theme-contrast-tone($theme-secondary-lighter);\n\n// 主题颜色最浅色对比色调\n$theme-primary-lightest-contrast-tone: theme-contrast-tone($theme-primary-lightest);\n$theme-secondary-lightest-contrast-tone: theme-contrast-tone($theme-secondary-lightest);\n\n// 主题颜色深色对比色调\n$theme-primary-dark-contrast-tone: theme-contrast-tone($theme-primary-dark);\n$theme-secondary-dark-contrast-tone: theme-contrast-tone($theme-secondary-dark);\n\n// 主题颜色更深色对比色调\n$theme-primary-darker-contrast-tone: theme-contrast-tone($theme-primary-darker);\n$theme-secondary-darker-contrast-tone: theme-contrast-tone($theme-secondary-darker);\n\n// 主题颜色最深色对比色调\n$theme-primary-darkest-contrast-tone: theme-contrast-tone($theme-primary-darkest);\n$theme-secondary-darkest-contrast-tone: theme-contrast-tone($theme-secondary-darkest);\n\n// 主题颜色透明色对比色调\n$theme-primary-alpha-contrast-tone: theme-contrast-tone($theme-primary-alpha);\n$theme-secondary-alpha-contrast-tone: theme-contrast-tone($theme-secondary-alpha);\n\n// 背景色对比色调\n$theme-background-contrast-tone: theme-contrast-tone($theme-background);\n\n// 定义文本默认颜色，默认颜色深色用黑色，浅色用白色\n// 分为基本颜色、次要颜色、提示性颜色和禁用颜色，分别用在基础颜色、过渡颜色、提示或暗色和表单 disabled readonly 以及其他禁用\n$theme-text-colors: (\n  dark: (\n    primary: rgba(0, 0, 0, .87),\n    secondary: rgba(0, 0, 0, .54),\n    hint: rgba(0, 0, 0, .38),\n    disabled: rgba(0, 0, 0, .38)\n  ),\n  light: (\n    primary: #fff,\n    secondary: rgba(255, 255, 255, .7),\n    hint: rgba(255, 255, 255, .5),\n    disabled: rgba(255, 255, 255, .5)\n  )\n);\n\n// 主题属性值\n$theme-property-values: (\n  // 主题颜色\n  primary: $theme-primary,\n  secondary: $theme-secondary,\n  background: $theme-background,\n\n  // 主题颜色浅色\n  primary-light: $theme-primary-light,\n  secondary-light: $theme-secondary-light,\n\n  // 主题颜色更浅色\n  primary-lighter: $theme-primary-lighter,\n  secondary-lighter: $theme-secondary-lighter,\n\n  // 主题颜色最浅色\n  primary-lightest: $theme-primary-lightest,\n  secondary-lightest: $theme-secondary-lightest,\n\n  // 主题颜色深色\n  primary-dark: $theme-primary-dark,\n  secondary-dark: $theme-secondary-dark,\n\n  // 主题颜色更深色\n  primary-darker: $theme-primary-darker,\n  secondary-darker: $theme-secondary-darker,\n\n  // 主题颜色最深色\n  primary-darkest: $theme-primary-darkest,\n  secondary-darkest: $theme-secondary-darkest,\n\n  // 主题颜色透明色\n  primary-alpha: $theme-primary-alpha,\n  secondary-alpha: $theme-secondary-alpha,\n\n) !default;\n\n// 主题基本颜色对比色调值集合，根据主题基本颜色计算出对应的对比色调值，浅色还是深色色调值\n$theme-contrast-tone-property-values: (\n  // 可以用在 background-color border-color 或 color 等可以设置颜色的属性上\n  // 当 map-get($theme-text-colors, $theme-primary-contrast-tone) 返回 light 时，对应浅色值\n  // 当 map-get($theme-text-colors, $theme-primary-contrast-tone) 返回 dark 时，对应深色值\n\n  // 用在 $theme-primary 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary: map-get(map-get($theme-text-colors, $theme-primary-contrast-tone), primary),\n  secondary-on-primary: map-get(map-get($theme-text-colors, $theme-primary-contrast-tone), secondary),\n  hint-on-primary: map-get(map-get($theme-text-colors, $theme-primary-contrast-tone), hint),\n  disabled-on-primary: map-get(map-get($theme-text-colors, $theme-primary-contrast-tone), disabled),\n\n  // 用在 $theme-primary-light 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary-light: map-get(map-get($theme-text-colors, $theme-primary-light-contrast-tone), primary),\n  secondary-on-primary-light: map-get(map-get($theme-text-colors, $theme-primary-light-contrast-tone), secondary),\n  hint-on-primary-light: map-get(map-get($theme-text-colors, $theme-primary-light-contrast-tone), hint),\n  disabled-on-primary-light: map-get(map-get($theme-text-colors, $theme-primary-light-contrast-tone), disabled),\n\n  // 用在 $theme-primary-lighter 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary-lighter: map-get(map-get($theme-text-colors, $theme-primary-lighter-contrast-tone), primary),\n  secondary-on-primary-lighter: map-get(map-get($theme-text-colors, $theme-primary-lighter-contrast-tone), secondary),\n  hint-on-primary-lighter: map-get(map-get($theme-text-colors, $theme-primary-lighter-contrast-tone), hint),\n  disabled-on-primary-lighter: map-get(map-get($theme-text-colors, $theme-primary-lighter-contrast-tone), disabled),\n\n  // 用在 $theme-primary-lightest 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary-lightest: map-get(map-get($theme-text-colors, $theme-primary-lightest-contrast-tone), primary),\n  secondary-on-primary-lightest: map-get(map-get($theme-text-colors, $theme-primary-lightest-contrast-tone), secondary),\n  hint-on-primary-lightest: map-get(map-get($theme-text-colors, $theme-primary-lightest-contrast-tone), hint),\n  disabled-on-primary-lightest: map-get(map-get($theme-text-colors, $theme-primary-lightest-contrast-tone), disabled),\n\n  // 用在 $theme-primary-dark 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary-dark: map-get(map-get($theme-text-colors, $theme-primary-dark-contrast-tone), primary),\n  secondary-on-primary-dark: map-get(map-get($theme-text-colors, $theme-primary-dark-contrast-tone), secondary),\n  hint-on-primary-dark: map-get(map-get($theme-text-colors, $theme-primary-dark-contrast-tone), hint),\n  disabled-on-primary-dark: map-get(map-get($theme-text-colors, $theme-primary-dark-contrast-tone), disabled),\n\n  // 用在 $theme-primary-darker 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary-darker: map-get(map-get($theme-text-colors, $theme-primary-darker-contrast-tone), primary),\n  secondary-on-primary-darker: map-get(map-get($theme-text-colors, $theme-primary-darker-contrast-tone), secondary),\n  hint-on-primary-darker: map-get(map-get($theme-text-colors, $theme-primary-darker-contrast-tone), hint),\n  disabled-on-primary-darker: map-get(map-get($theme-text-colors, $theme-primary-darker-contrast-tone), disabled),\n\n  // 用在 $theme-primary-darkest 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary-darkest: map-get(map-get($theme-text-colors, $theme-primary-darkest-contrast-tone), primary),\n  secondary-on-primary-darkest: map-get(map-get($theme-text-colors, $theme-primary-darkest-contrast-tone), secondary),\n  hint-on-primary-darkest: map-get(map-get($theme-text-colors, $theme-primary-darkest-contrast-tone), hint),\n  disabled-on-primary-darkest: map-get(map-get($theme-text-colors, $theme-primary-darkest-contrast-tone), disabled),\n\n  // 用在主题颜色主颜色透明色 $theme-primary-alpha 上的 primary secondary hint 和 disabled 对比颜色，深色主题用浅色对比色调\n  primary-on-primary-alpha: map-get(map-get($theme-text-colors, $theme-primary-alpha-contrast-tone), primary),\n  secondary-on-primary-alpha: map-get(map-get($theme-text-colors, $theme-primary-alpha-contrast-tone), secondary),\n  hint-on-primary-alpha: map-get(map-get($theme-text-colors, $theme-primary-alpha-contrast-tone), hint),\n  disabled-on-primary-alpha: map-get(map-get($theme-text-colors, $theme-primary-alpha-contrast-tone), disabled),\n\n  // 用在 $theme-secondary 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary: map-get(map-get($theme-text-colors, $theme-secondary-contrast-tone), primary),\n  secondary-on-secondary: map-get(map-get($theme-text-colors, $theme-secondary-contrast-tone), secondary),\n  hint-on-secondary: map-get(map-get($theme-text-colors, $theme-secondary-contrast-tone), hint),\n  disabled-on-secondary: map-get(map-get($theme-text-colors, $theme-secondary-contrast-tone), disabled),\n\n  // 用在 $theme-secondary-light 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary-light: map-get(map-get($theme-text-colors, $theme-secondary-light-contrast-tone), primary),\n  secondary-on-secondary-light: map-get(map-get($theme-text-colors, $theme-secondary-light-contrast-tone), secondary),\n  hint-on-secondary-light: map-get(map-get($theme-text-colors, $theme-secondary-light-contrast-tone), hint),\n  disabled-on-secondary-light: map-get(map-get($theme-text-colors, $theme-secondary-light-contrast-tone), disabled),\n\n  // 用在 $theme-secondary-lighter 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary-lighter: map-get(map-get($theme-text-colors, $theme-secondary-lighter-contrast-tone), primary),\n  secondary-on-secondary-lighter: map-get(map-get($theme-text-colors, $theme-secondary-lighter-contrast-tone), secondary),\n  hint-on-secondary-lighter: map-get(map-get($theme-text-colors, $theme-secondary-lighter-contrast-tone), hint),\n  disabled-on-secondary-lighter: map-get(map-get($theme-text-colors, $theme-secondary-lighter-contrast-tone), disabled),\n\n  // 用在 $theme-secondary-lightest 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary-lightest: map-get(map-get($theme-text-colors, $theme-secondary-lightest-contrast-tone), primary),\n  secondary-on-secondary-lightest: map-get(map-get($theme-text-colors, $theme-secondary-lightest-contrast-tone), secondary),\n  hint-on-secondary-lightest: map-get(map-get($theme-text-colors, $theme-secondary-lightest-contrast-tone), hint),\n  disabled-on-secondary-lightest: map-get(map-get($theme-text-colors, $theme-secondary-lightest-contrast-tone), disabled),\n\n  // 用在 $theme-secondary-dark 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary-dark: map-get(map-get($theme-text-colors, $theme-secondary-dark-contrast-tone), primary),\n  secondary-on-secondary-dark: map-get(map-get($theme-text-colors, $theme-secondary-dark-contrast-tone), secondary),\n  hint-on-secondary-dark: map-get(map-get($theme-text-colors, $theme-secondary-dark-contrast-tone), hint),\n  disabled-on-secondary-dark: map-get(map-get($theme-text-colors, $theme-secondary-dark-contrast-tone), disabled),\n\n  // 用在 $theme-secondary-darker 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary-darker: map-get(map-get($theme-text-colors, $theme-secondary-darker-contrast-tone), primary),\n  secondary-on-secondary-darker: map-get(map-get($theme-text-colors, $theme-secondary-darker-contrast-tone), secondary),\n  hint-on-secondary-darker: map-get(map-get($theme-text-colors, $theme-secondary-darker-contrast-tone), hint),\n  disabled-on-secondary-darker: map-get(map-get($theme-text-colors, $theme-secondary-darker-contrast-tone), disabled),\n\n  // 用在 $theme-secondary-darkest 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary-darkest: map-get(map-get($theme-text-colors, $theme-secondary-darkest-contrast-tone), primary),\n  secondary-on-secondary-darkest: map-get(map-get($theme-text-colors, $theme-secondary-darkest-contrast-tone), secondary),\n  hint-on-secondary-darkest: map-get(map-get($theme-text-colors, $theme-secondary-darkest-contrast-tone), hint),\n  disabled-on-secondary-darkest: map-get(map-get($theme-text-colors, $theme-secondary-darkest-contrast-tone), disabled),\n\n  // 用在主题颜色次颜色透明色 $theme-secondary-alpha 上的 primary secondary hint 和 disabled 对比颜色，深色主题用浅色对比色调\n  primary-on-secondary-alpha: map-get(map-get($theme-text-colors, $theme-secondary-alpha-contrast-tone), primary),\n  secondary-on-secondary-alpha: map-get(map-get($theme-text-colors, $theme-secondary-alpha-contrast-tone), secondary),\n  hint-on-secondary-alpha: map-get(map-get($theme-text-colors, $theme-secondary-alpha-contrast-tone), hint),\n  disabled-on-secondary-alpha: map-get(map-get($theme-text-colors, $theme-secondary-alpha-contrast-tone), disabled),\n\n  // 用在 $theme-background 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-background: map-get(map-get($theme-text-colors, $theme-background-contrast-tone), primary),\n  secondary-on-background: map-get(map-get($theme-text-colors, $theme-background-contrast-tone), secondary),\n  hint-on-background: map-get(map-get($theme-text-colors, $theme-background-contrast-tone), hint),\n  disabled-on-background: map-get(map-get($theme-text-colors, $theme-background-contrast-tone), disabled),\n\n  // 用在浅色主题上的 primary secondary hint 和 disabled 对比色调，浅色主题用深色对比色调\n  primary-on-light: map-get(map-get($theme-text-colors, dark), primary),\n  secondary-on-light: map-get(map-get($theme-text-colors, dark), secondary),\n  hint-on-light: map-get(map-get($theme-text-colors, dark), hint),\n  disabled-on-light: map-get(map-get($theme-text-colors, dark), disabled),\n\n  // 用在深色主题上的 primary secondary hint 和 disabled 对比颜色，深色主题用浅色对比色调\n  primary-on-dark: map-get(map-get($theme-text-colors, light), primary),\n  secondary-on-dark: map-get(map-get($theme-text-colors, light), secondary),\n  hint-on-dark: map-get(map-get($theme-text-colors, light), hint),\n  disabled-on-dark: map-get(map-get($theme-text-colors, light), disabled),\n) !default;\n\n// 除了三种基本颜色外，又定义了成功 success 、信息 info、警告 warning 、错误 error 四种辅助颜色，\n// 这四种颜色主要用在背景，文本，按钮等上，用来区分文本颜色和背景，以及表单样式（比如校验失败和成功的颜色）等\n$theme-assist: (\"success\", \"info\", \"warning\", \"error\") !default;\n\n// 辅助颜色值\n$theme-assist-colors: (\n  success: #43a047, // $green-600\n  info: #0097a7, // $cyan-700\n  warning: #fbc02d, // $yellow-700\n  error: #f44336, // $red-500\n\n  // 辅助颜色浅色\n  success-light: #81c784, // $green-300\n  info-light: #4dd0e1, // $cyan-300\n  warning-light: #fff176, // $yellow-300\n  error-light: #e57373, // $red-300\n\n  // 辅助颜色更浅色\n  success-lighter: #c8e6c9, // $green-100\n  info-lighter: #b2ebf2, // $cyan-100\n  warning-lighter: #fff9c4, // $yellow-100\n  error-lighter: #ffcdd2, // $red-100\n\n  // 辅助颜色深色\n  success-dark: #2e7d32, // $green-800\n  info-dark: #00838f, // $cyan-800\n  warning-dark: #f9a825, // $yellow-800\n  error-dark: #c62828, // $red-800\n\n  // 辅助颜色透明色\n  success-alpha: rgba(#4caf50, $alpha),\n  info-alpha: rgba(#00bcd4, $alpha),\n  warning-alpha: rgba(#ffeb3b, $alpha),\n  error-alpha: rgba(#f44336, $alpha),\n) !default;\n\n// 常用灰色颜色，提供了黑色透明度和灰色本身颜色两种方案，根据配置项 $enable-transparent 来选择其中一种方案\n// 默认使用黑色透明度，可以通过修改 base/variables/_options.scss 中变量 $enable-transparent 来选择不同的方案\n\n// 灰色颜色，对于灰色颜色，这里没有采用 css 变量处理\n$greys: (\n  50: #fafafa,\n  100: #f5f5f5,\n  200: #eee,\n  300: #e0e0e0,\n  400: #bdbdbd,\n  500: #9e9e9e,\n  600: #757575,\n  700: #616161,\n  800: #424242,\n  900: #212121\n) !default;\n\n// 灰色透明色\n$greys-transparent: (\n  50: rgba(0, 0, 0, .02), // 相当于 #fafafa;\n  100: rgba(0, 0, 0, .04), // 相当于 #f5f5f5\n  200: rgba(0, 0, 0, .065), // 相当于 #eeeeee\n  300: rgba(0, 0, 0, .12), // 相当于 #e0e0e0\n  400: rgba(0, 0, 0, .26), // 相当于 #bdbdbd\n  500: rgba(0, 0, 0, .38), // 相当于 #9e9e9e\n  600: rgba(0, 0, 0, .54), // 相当于 #757575\n  700: rgba(0, 0, 0, .62), // 相当于 #616161\n  800: rgba(0, 0, 0, .74), // 相当于 #424242\n  900: rgba(0, 0, 0, .87) // 相当于 #212121\n) !default;\n\n// 白色、黑色和透明色\n$white: #fff !default;\n$black: #000 !default;\n$transparent: rgba(0, 0, 0, 0) !default; // 透明色\n\n$grey-color-50: if($enable-transparent, map-get($greys-transparent, 50), map-get($greys, 50)) !default;\n$grey-color-100: if($enable-transparent, map-get($greys-transparent, 100), map-get($greys, 100)) !default;\n$grey-color-200: if($enable-transparent, map-get($greys-transparent, 200), map-get($greys, 200)) !default;\n$grey-color-300: if($enable-transparent, map-get($greys-transparent, 300), map-get($greys, 300)) !default;\n$grey-color-400: if($enable-transparent, map-get($greys-transparent, 400), map-get($greys, 400)) !default;\n$grey-color-500: if($enable-transparent, map-get($greys-transparent, 500), map-get($greys, 500)) !default;\n$grey-color-600: if($enable-transparent, map-get($greys-transparent, 600), map-get($greys, 600)) !default;\n$grey-color-700: if($enable-transparent, map-get($greys-transparent, 700), map-get($greys, 700)) !default;\n$grey-color-800: if($enable-transparent, map-get($greys-transparent, 800), map-get($greys, 800)) !default;\n$grey-color-900: if($enable-transparent, map-get($greys-transparent, 900), map-get($greys, 900)) !default;\n","@import \"../../../../components/theme/variable\";\n@import \"../../../../components/theme/mixin\";\n\n.perfect-menu {\n  &.menu, .menu {\n    margin-left: 0;\n  }\n\n  .menu-title {\n    padding: .5rem 1rem;\n\n    &:hover {\n      @include theme-prop(color, primary-light);\n    }\n\n    &.active {\n      @include theme-prop(color, primary);\n    }\n  }\n\n  .menu-sub-title {\n    &:hover {\n      @include theme-prop(color, primary);\n    }\n\n    &.active {\n      border-right: 3px solid;\n      @include theme-prop(color, primary-darker);\n      @include theme-prop(background-color, primary-lightest);\n\n      // 可以动态的设置颜色透明度，属于 CSS 4 color 范畴，目前浏览器都不支持\n      // 可以用 rgba 来代替，但只能静态设置，不可以随着颜色和透明度的变化动态设置\n      // https://drafts.csswg.org/css-color/#modifying-colors\n      // https://www.w3cplus.com/css4/color-mod.html\n      @supports (background-color: color(green a(10%))) {\n        $bg-color: var(--theme-primary-lightest);\n        $opacity: .8;\n\n        background-color: color(#{$bg-color} a(#{percentage($opacity)}));\n      }\n    }\n  }\n}\n\n","\n// 目录大纲编号 start\n.catalogue-counter {\n  counter-reset: outline1;\n\n  > h1, > h2, > h3, > h4, > h5, > h6 {\n    &::before {\n      margin-right: .5rem;\n    }\n  }\n}\n\n/* stylelint-disable selector-max-compound-selectors, selector-max-combinators */\n// 如果大纲第一级别是 h1\n.catalogue-counter > h1 {\n  counter-reset: outline2;\n\n  &::before {\n    content: counter(outline1, decimal) \". \";\n    counter-increment: outline1;\n  }\n\n  ~ h2 {\n    counter-reset: outline3;\n  }\n\n  ~ h2::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\";\n    counter-increment: outline2;\n  }\n\n  ~ h2 ~ h3 {\n    counter-reset: outline4;\n  }\n\n  ~ h2 ~ h3::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\";\n    counter-increment: outline3;\n  }\n\n  ~ h2 ~ h3 ~ h4 {\n    counter-reset: outline5;\n  }\n\n  ~ h2 ~ h3 ~ h4::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\";\n    counter-increment: outline4;\n  }\n\n  ~ h2 ~ h3 ~ h4 ~ h5 {\n    counter-reset: outline6;\n  }\n\n  ~ h2 ~ h3 ~ h4 ~ h5::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\" counter(outline5, decimal) \".\";\n    counter-increment: outline5;\n  }\n\n  ~ h2 ~ h3 ~ h4 ~ h5 ~ h6::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\" counter(outline5, decimal) \".\" counter(outline6, decimal) \".\";\n    counter-increment: outline6;\n  }\n}\n\n// 如果大纲第一级别是 h2\n.catalogue-counter > h2 {\n  counter-reset: outline2;\n\n  &::before {\n    content: counter(outline1, decimal) \".\";\n    counter-increment: outline1;\n  }\n\n  ~ h3 {\n    counter-reset: outline3;\n  }\n\n  ~ h3::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\";\n    counter-increment: outline2;\n  }\n\n  ~ h3 ~ h4 {\n    counter-reset: outline4;\n  }\n\n  ~ h3 ~ h4::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\";\n    counter-increment: outline3;\n  }\n\n  ~ h3 ~ h4 ~ h5 {\n    counter-reset: outline5;\n  }\n\n  ~ h3 ~ h4 ~ h5::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\";\n    counter-increment: outline4;\n  }\n\n  ~ h3 ~ h4 ~ h5 ~ h6::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\" counter(outline5, decimal) \".\";\n    counter-increment: outline5;\n  }\n}\n\n// 如果大纲第一级别是 h3（h4以后的不再考虑）\n.catalogue-counter > h3 {\n  counter-reset: outline2;\n\n  &::before {\n    content: counter(outline1, decimal) \".\";\n    counter-increment: outline1;\n  }\n\n  ~ h4 {\n    counter-reset: outline3;\n  }\n\n  ~ h4::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\";\n    counter-increment: outline2;\n  }\n\n  ~ h4 ~ h5 {\n    counter-reset: outline4;\n  }\n\n  ~ h4 ~ h5::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\";\n    counter-increment: outline3;\n  }\n\n  ~ h4 ~ h5 ~ h6::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\";\n    counter-increment: outline4;\n  }\n}\n\n// 目录大纲编号 end\n","@import \"../../../../components/theme/mixin\";\n@import \"../../../../components/animation/variable\";\n\n.anchor-link {\n  font-weight: 400;\n  transition: color .16s $animation-ease-out, opacity .16s $animation-ease-out;\n\n  @include theme-prop(color, primary-light);\n\n  &:hover {\n    text-decoration: none;\n\n    @include theme-prop(color, primary);\n  }\n}\n","// 这里之所以定义 html 为 position: relative; 主要为了实现，不论页面高度如何，底部始终在最下面显示\n\nhtml {\n  position: relative;\n}\n\nhtml, body {\n  height: auto;\n  min-height: 100%;\n}\n","@import \"../../../../components/theme/variable\";\n@import \"../../../../components/theme/mixin\";\n@import \"../mixins/header\";\n\n.drawer-content {\n  overflow: hidden;\n}\n\n.doc-content-header {\n  padding-right: 4rem;\n\n  a {\n    margin-right: 1rem;\n\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n}\n\n.doc-main {\n  min-height: 500px;\n  padding: 0 1rem;\n}\n\n.doc-content {\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n  @include header-font-size;\n  @include header-margin;\n  @include header-anchor;\n\n  > p {\n    margin-top: 1rem;\n    margin-bottom: 1rem;\n    line-height: 2;\n  }\n\n  a {\n    margin-right: .25rem;\n    margin-left: .25rem;\n  }\n\n  > hr {\n    border-top: 1px dashed;\n    @include theme-prop(border-color, primary-light);\n  }\n}\n\n.doc-table {\n  width: 95%;\n  margin-bottom: 1rem;\n\n  tbody > tr:nth-of-type(odd) {\n    @include theme-prop(background-color, secondary-lightest);\n  }\n\n  th {\n    border-bottom: 1px solid;\n    @include theme-prop(border-bottom-color, secondary-lighter);\n  }\n\n  th,\n  td {\n    padding: .5rem 1rem;\n    border-top: 1px solid;\n    border-left: 1px solid;\n    @include theme-prop(border-color, secondary-lighter);\n\n    &:last-child {\n      border-right: 1px solid;\n      @include theme-prop(border-color, secondary-lighter);\n    }\n  }\n\n  tr:last-child > td {\n    border-bottom: 1px solid;\n    @include theme-prop(border-color, secondary-lighter);\n  }\n}\n","// h1~h6 margin\n@mixin header-margin {\n  > h1, > h2 {\n    margin-top: 3rem;\n\n    &:first-of-type {\n      margin-top: 1rem;\n    }\n  }\n\n  > h3, > h4, > h5, > h6 {\n    margin-top: 2rem;\n  }\n}\n\n// font-size\n@mixin header-font-size {\n  > h1 {\n    font-size: 1.75rem;\n  }\n\n  > h2 {\n    font-size: 1.5rem;\n  }\n\n  > h3 {\n    font-size: 1.25rem;\n  }\n\n  > h4 {\n    font-size: 1.125rem;\n  }\n}\n\n// 通过添加伪类 ::before 使 h1~h6 表现出来变高的效果，处理锚点\n@mixin header-anchor {\n  > h1, > h2, > h3, > h4, > h5, > h6 {\n    .anchor-header {\n      display: inline-block;\n      height: 5.5rem;\n      margin-top: -5.5rem;\n      visibility: hidden;\n    }\n\n    .anchor-link {\n      padding-left: .375rem;\n      opacity: 0;\n    }\n\n    &:hover > .anchor-link,\n    .anchor-link:focus {\n      opacity: 1;\n    }\n  }\n}\n","// 动画相关变量\n// https://material.io/guidelines/motion/duration-easing.html#duration-easing-common-durations\n$animation-ease-out: cubic-bezier(0, 0, .2, 1) !default; // 减速 deceleration-curve-timing\n$animation-ease-in-out: cubic-bezier(.4, 0, .2, 1) !default; // 先迅速加速，再缓慢减速 standard-curve-timing\n$animation-ease-in: cubic-bezier(.4, 0, 1, 1) !default; // 加速 acceleration-curve-timing\n$animation-sharp: cubic-bezier(.4, 0, .6, 1) !default; // 极速的变化 sharp-curve-timing\n\n// 动画函数\n$animation-timing-function: (\n  ease-out: $animation-ease-out,\n  ease-in-out: $animation-ease-in-out,\n  ease-in: $animation-ease-in-out,\n  sharp: $animation-ease-in-out\n);\n","@import \"../../../../components/base/mixins/clearfix\";\n@import \"../../../../components/theme/variable\";\n@import \"../../../../components/theme/mixin\";\n@import \"../../../../components/animation/mixin\";\n@import \"../mixins/grid\";\n\n// 例子样式\n.doc-example {\n  position: relative;\n  margin-bottom: 1rem;\n  border: 1px solid;\n  border-radius: 4px;\n  transition: all .2s;\n\n  @include theme-prop(border-color, secondary-lighter);\n\n  &:hover {\n    .icon-pure-code,\n    .icon-pure-code-expand {\n      @include theme-prop(color, secondary);\n    }\n  }\n}\n\n.doc-example-render {\n  padding: 1rem 1rem 0;\n\n  p:last-of-type {\n    margin-bottom: 0;\n  }\n}\n\n.doc-example-expand {\n  position: relative;\n  display: flex;\n  justify-content: flex-end;\n  margin: .5rem 2rem;\n}\n\n.icon-pure-code,\n.icon-pure-code-expand {\n  transform: rotate(-45deg) scale(.6);\n  @include theme-prop(color, secondary-lighter);\n}\n\n.doc-code-icon {\n  width: 2.5rem;\n  cursor: pointer;\n\n  &:hover {\n    .icon-pure-code,\n    .icon-pure-code-expand {\n      @include theme-prop(color, secondary);\n    }\n\n    + .tooltip {\n      top: -3rem;\n      right: -.8rem;\n      display: block;\n      opacity: .8;\n    }\n  }\n}\n\n.doc-example-highlight.highlight {\n  display: none;\n  border: 0;\n  border-top: 1px dashed;\n  @include theme-prop(border-top-color, secondary-lighter);\n  @include animation-transition(display);\n}\n\n.doc-code-copy {\n  position: absolute;\n  top: 1rem;\n  right: 3rem;\n  display: none;\n\n  .icon-pure-copy {\n    transform: scale(.4);\n    cursor: pointer;\n    @include theme-prop(color, secondary-lighter);\n  }\n\n  &:hover {\n    .icon-pure-copy {\n      @include theme-prop(color, secondary);\n    }\n\n    + .tooltip {\n      top: -2rem;\n      right: 1.5rem;\n      display: block;\n      opacity: .8;\n    }\n  }\n}\n\n.doc-example-highlight {\n  position: relative;\n\n  &:hover .doc-code-copy {\n    display: block;\n\n    .icon-pure-copy {\n      @include theme-prop(color, secondary);\n    }\n  }\n}\n\n// 栅格例子样式\n.doc-example-row {\n  @include grid-example;\n}\n\n.doc-example-row-flex-cols .row {\n  min-height: 5rem;\n  @include theme-prop(background-color, primary-lightest);\n}\n\n.doc-example-row-gutters {\n  .no-gutters {\n    margin-top: 1rem;\n  }\n\n  [class^=\"col\"] > div {\n    @include theme-prop(background-color, secondary-light);\n  }\n}\n\n//// 例子样式\n// .doc-example-render {\n//  position: relative;\n//  padding: 1rem;\n//  margin: 1rem .5rem;\n//  border: solid $theme-primary;\n//  border-width: 1px 0 0;\n//  @include clearfix();\n// }\n//\n// @media (min-width: 640px) {\n//  .doc-example-render {\n//    padding: 1.5rem;\n//    margin-bottom: 0;\n//    margin-left: 0;\n//    margin-right: 0;\n//    border-width: 1px 1px 0;\n//  }\n// }\n//\n//// 容器例子样式\n// .doc-example-container {\n//  .container-fluid,\n//  .container {\n//    padding: 20px;\n//    color: darken(#9c27b0, 20%);\n//    background-color: lighten(#9c27b0, 48%);\n//    text-align: center;\n//  }\n// }\n//\n\n","@import \"../../../../components/theme/mixin\";\n\n@mixin grid-example {\n  .row + .row {\n    margin-top: 1rem;\n  }\n  // 嵌套的样式\n  .row .row {\n    border: 1px solid;\n  }\n\n  [class*=\"col\"] {\n    padding-top: .5rem;\n    padding-bottom: .5rem;\n    color: #fff;\n    text-align: center;\n\n    @include theme-prop(background-color, primary-light);\n\n    &:nth-of-type(2n) {\n      @include theme-prop(background-color, primary);\n    }\n  }\n}\n",".highlight table td { padding: 5px; }\n.highlight table pre { margin: 0; }\n\n.highlight .cm {\n  font-style: italic;\n  color: #998;\n}\n\n.highlight .cp {\n  font-weight: bold;\n  color: #999;\n}\n\n.highlight .c1 {\n  font-style: italic;\n  color: #998;\n}\n\n.highlight .cs {\n  font-style: italic;\n  font-weight: bold;\n  color: #999;\n}\n\n.highlight .c, .highlight .cd {\n  font-style: italic;\n  color: #998;\n}\n\n.highlight .err {\n  color: #a61717;\n  background-color: #e3d2d2;\n}\n\n.highlight .gd {\n  color: #000;\n  background-color: #fdd;\n}\n\n.highlight .ge {\n  font-style: italic;\n  color: #000;\n}\n\n.highlight .gr {\n  color: #a00;\n}\n\n.highlight .gh {\n  color: #999;\n}\n\n.highlight .gi {\n  color: #000;\n  background-color: #dfd;\n}\n\n.highlight .go {\n  color: #888;\n}\n\n.highlight .gp {\n  color: #555;\n}\n\n.highlight .gs {\n  font-weight: bold;\n}\n\n.highlight .gu {\n  color: #aaa;\n}\n\n.highlight .gt {\n  color: #a00;\n}\n\n.highlight .kc {\n  font-weight: bold;\n  color: #000;\n}\n\n.highlight .kd {\n  font-weight: bold;\n  color: #000;\n}\n\n.highlight .kn {\n  font-weight: bold;\n  color: #000;\n}\n\n.highlight .kp {\n  font-weight: bold;\n  color: #000;\n}\n\n.highlight .kr {\n  font-weight: bold;\n  color: #000;\n}\n\n.highlight .kt {\n  font-weight: bold;\n  color: #458;\n}\n\n.highlight .k, .highlight .kv {\n  font-weight: bold;\n  color: #000;\n}\n\n.highlight .mf {\n  color: #099;\n}\n\n.highlight .mh {\n  color: #099;\n}\n\n.highlight .il {\n  color: #099;\n}\n\n.highlight .mi {\n  color: #099;\n}\n\n.highlight .mo {\n  color: #099;\n}\n\n.highlight .m, .highlight .mb, .highlight .mx {\n  color: #099;\n}\n\n.highlight .sb {\n  color: #d14;\n}\n\n.highlight .sc {\n  color: #d14;\n}\n\n.highlight .sd {\n  color: #d14;\n}\n\n.highlight .s2 {\n  color: #d14;\n}\n\n.highlight .se {\n  color: #d14;\n}\n\n.highlight .sh {\n  color: #d14;\n}\n\n.highlight .si {\n  color: #d14;\n}\n\n.highlight .sx {\n  color: #d14;\n}\n\n.highlight .sr {\n  color: #009926;\n}\n\n.highlight .s1 {\n  color: #d14;\n}\n\n.highlight .ss {\n  color: #990073;\n}\n\n.highlight .s {\n  color: #d14;\n}\n\n.highlight .na {\n  color: #008080;\n}\n\n.highlight .bp {\n  color: #999;\n}\n\n.highlight .nb {\n  color: #0086b3;\n}\n\n.highlight .nc {\n  font-weight: bold;\n  color: #458;\n}\n\n.highlight .no {\n  color: #008080;\n}\n\n.highlight .nd {\n  font-weight: bold;\n  color: #3c5d5d;\n}\n\n.highlight .ni {\n  color: #800080;\n}\n\n.highlight .ne {\n  font-weight: bold;\n  color: #900;\n}\n\n.highlight .nf {\n  font-weight: bold;\n  color: #900;\n}\n\n.highlight .nl {\n  font-weight: bold;\n  color: #900;\n}\n\n.highlight .nn {\n  color: #555;\n}\n\n.highlight .nt {\n  color: #000080;\n}\n\n.highlight .vc {\n  color: #008080;\n}\n\n.highlight .vg {\n  color: #008080;\n}\n\n.highlight .vi {\n  color: #008080;\n}\n\n.highlight .nv {\n  color: #008080;\n}\n\n.highlight .ow {\n  font-weight: bold;\n  color: #000;\n}\n\n.highlight .o {\n  font-weight: bold;\n  color: #000;\n}\n\n.highlight .w {\n  color: #bbb;\n}\n\n.highlight {\n  background-color: #f8f8f8;\n}\n","// 自定义 highlight 样式\n@import \"../../../../components/responsive/mixin\";\n@import \"../../../../components/theme/variable\";\n@import \"../../../../components/theme/mixin\";\n\n.highlighter-rouge {\n  margin-bottom: 1rem;\n\n  &:hover {\n    position: relative;\n\n    .doc-code-copy {\n      display: block;\n    }\n  }\n}\n\n.highlight {\n  padding: 1rem;\n  border: 1px solid;\n  -ms-overflow-style: -ms-autohiding-scrollbar;\n  background-color: transparent;\n  @include theme-prop(border-color, secondary-lighter);\n}\n\n.highlight pre {\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  border: 0;\n  background-color: transparent;\n}\n\n.highlight pre code {\n  font-size: inherit;\n}\n","// 定义色彩卡样式\n.doc-color-group {\n  color: #fff;\n}\n\n.doc-primary-color {\n  margin-bottom: .5rem;\n}\n\n.doc-color-title {\n  padding: .75rem 1rem 2rem;\n}\n\n.doc-color {\n  display: flex;\n  justify-content: space-between;\n  padding: .75rem 1rem;\n}\n\n.doc-color-dark {\n  color: rgba(0, 0, 0, .87);\n}\n\n.doc-color-a {\n  margin-top: .5rem;\n}\n\n.doc-color-panel {\n  margin-bottom: 3rem;\n  padding-right: 10px;\n  padding-left: 10px;\n\n  > .col {\n    padding-right: 0;\n    padding-left: 0;\n  }\n}\n"],"sourceRoot":""}