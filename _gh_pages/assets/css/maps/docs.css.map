<<<<<<< HEAD
{"version":3,"sources":["docs.css","_iconfont.scss","../../../scss/theme/_function.scss","_main.scss","../../../scss/theme/_variable.scss","_journey.scss","../../../scss/responsive/_mixin.scss","_document.scss","_catalogue.scss","../../../scss/theme/_mixin.scss","_copy.scss","_example.scss","../../../scss/base/mixins/_clearfix.scss","../../../scss/theme/_color_palette.scss","_highlight.scss","_highlight-custom.scss","_footer.scss","_color-palette.scss"],"names":[],"mappings":"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D;EACE,eAAc;EACd,kBAAiB;CAClB;;AACD;EACE,eAAc;EACd,kBAAiB;CAClB;;AACD;EACE,eAAc;EACd,kBAAiB;CAClB;;AACD;EACE,eAAc;EACd,kBAAiB;CAClB;;AACD;EACE,eAAc;EACd,kBAAiB;CAClB;;AACD;EACE,eAAc;CACf;;AACD;EACE,eAAc;CACf;;AACD;EACE,eAAc;CACf;;AACD;EACE,eAAc;CACf;;AACD;EACE,eAAc;CACf;;AACD;EACE,eAAc;CACf;;AACD;EACE,YAAW;CACZ;;AACD;EACE,YAAW;CACZ;;AACD;EACE,YAAW;CACZ;;AACD;EACE,YAAW;CACZ;;AACD;EACE,YAAW;CACZ;;AACD;EACE,YAAW;CACZ;;AACD;EACE,YAAW;CACZ;;AACD;EACE,YAAW;CACZ;;AACD;EACE,eAAc;CACf;;AACD;EACE,YAAW;CACZ;;AACD;EACE,eAAc;CACf;;AACD;EACE,YAAW;CACZ;;AACD;EACE,eAAc;CACf;;AACD;EACE,eAAc;CACf;;AACD;EACE,eAAc;CACf;;AACD;EACE,eAAc;EACd,kBAAiB;CAClB;;AACD;EACE,eAAc;CACf;;AACD;EACE,eAAc;EACd,kBAAiB;CAClB;;AACD;EACE,eAAc;CACf;;AACD;EACE,eAAc;EACd,kBAAiB;CAClB;;AACD;EACE,eAAc;EACd,kBAAiB;CAClB;;AACD;EACE,eAAc;EACd,kBAAiB;CAClB;;AACD;EACE,eAAc;CACf;;AACD;EACE,eAAc;CACf;;AACD;EACE,eAAc;CACf;;AACD;EACE,eAAc;CACf;;AACD;EACE,eAAc;CACf;;AACD;EACE,eAAc;CACf;;AACD;EACE,eAAc;EACd,kBAAiB;CAClB;;AACD;EACE,eAAc;EACd,kBAAiB;CAClB;;AACD;EACE,eAAc;CACf;;AACD;EACE,0BAAyB;CAC1B;;AZjLD;;;GAGG;Aa/BH;EACE,cAAa;EACb,mBAAkB;EAClB,0BXDqB;EWErB,6CAA4C;EAC5C,0BF8SgB;CEvSjB;;AT0DG;EStEJ;IAQI,8BAA6B;IAC7B,eAAc;IACd,gBAAe;GAElB;CfgsBA;;Ae9rBD;EAEI,cAAa;CACd;;AAGH;EACE,WAAU;EACV,cAAa;EACb,iBAAgB;EAChB,UAAS;EACT,8BAA6B;CAC9B;;AAED;EACE,mBAAkB;EAClB,eAAc;CACf;;AbHD;;;GAGG;Ac/BH;EAEE,oBAAmB;CACpB;;AAED;EACE,mBAAkB;EAClB,UAAS;EACT,YAAW;EACX,gBAAe;EACf,8BH0SgB;EGzShB,2BZa+B;CYZhC;;ACfD;EACE,YAAW;CACZ;;AAED;EACE,qBAAoB;CACrB;;AAED;EACE,0BAAyB;CAC1B;;AAED;EACE,qBAAa;EAAb,cAAa;EACb,uBAA8B;MAA9B,+BAA8B;EAC9B,qBAAoB;CACrB;;AAED;EACE,2BAAyB;CAC1B;;AAED;EACE,kBAAiB;CAClB;;AAED;EACE,mBAAkB;EAClB,oBAAmB;EACnB,oBAAmB;CAKpB;;AARD;EAKI,gBAAe;EACf,iBAAgB;CACjB","file":"../docs.css","sourcesContent":["@charset \"UTF-8\";\n@font-face {\n  font-family: \"icon\";\n  src: url(\"../fonts/iconfont.eot?t=1493977267384\");\n  /* IE9*/\n  src: url(\"../fonts/iconfont.eot?t=1493977267384#iefix\") format(\"embedded-opentype\"), url(\"../fonts/iconfont.woff?t=1493977267384\") format(\"woff\"), url(\"../fonts/iconfont.ttf?t=1493977267384\") format(\"truetype\"), url(\"../fonts/iconfont.svg?t=1493977267384#iconfont\") format(\"svg\");\n  /* iOS 4.1- */\n}\n\n.icon {\n  font-family: \"icon\" !important;\n  font-size: 16px;\n  font-style: normal;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.icon-catalogue::before {\n  content: \"\\e601\";\n}\n\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\nhtml {\n  position: relative;\n}\n\nhtml, body {\n  height: auto;\n  min-height: 100%;\n}\n\nbody {\n  background-color: rgba(0, 0, 0, 0.02);\n}\n\n.doc-journey {\n  position: relative;\n  padding: 2rem 15px;\n}\n\n.doc-journey h1 {\n  line-height: 1;\n}\n\n.doc-journey .btn {\n  width: 100%;\n  padding: 0.75rem 1.5rem;\n  margin-bottom: 1rem;\n  border-radius: 5px;\n  font-size: 1.125rem;\n}\n\n@media (min-width: 600px) {\n  .doc-journey {\n    padding-top: 2.5rem;\n    padding-bottom: 2.5rem;\n  }\n}\n\n@media (min-width: 1024px) {\n  .doc-journey h1 {\n    font-size: 3rem;\n  }\n  .doc-journey .btn {\n    padding: 0.875rem 2rem;\n    border-radius: 5px;\n    font-size: 1.125rem;\n  }\n  .doc-journey .btn:first-child {\n    margin-right: 2rem;\n  }\n}\n\n@media (min-width: 1440px) {\n  .doc-journey .btn {\n    width: 40%;\n  }\n}\n\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n.drawer-content {\n  background: rgba(0, 0, 0, 0.02);\n}\n\n.doc-main {\n  min-height: 500px;\n  padding: 1.5rem 1rem;\n}\n\n.doc-content-header > a {\n  margin: 0 .5rem;\n}\n\n.doc-content {\n  border-right: 1px solid rgba(0, 0, 0, 0.065);\n}\n\n.doc-content > h2 {\n  margin-top: 2rem;\n}\n\n.doc-content > h3 {\n  margin-top: 1.5rem;\n}\n\n.doc-table {\n  width: 80%;\n}\n\n.doc-table tr:nth-of-type(odd) {\n  background: #f9f9f9;\n}\n\n.doc-table th {\n  border-bottom: 1px solid #ddd;\n}\n\n.doc-table th,\n.doc-table td {\n  padding: .5rem 1.5rem;\n  border-top: 1px solid #ddd;\n  border-left: 1px solid #ddd;\n}\n\n.doc-table th:last-child,\n.doc-table td:last-child {\n  border-right: 1px solid #ddd;\n}\n\n.doc-table tr:last-child > td {\n  border-bottom: 1px solid #ddd;\n}\n\n.doc-catalogue-header {\n  position: relative;\n}\n\n.doc-catalogue-header::before {\n  content: '目录';\n  position: absolute;\n  top: -25px;\n  padding-left: 1rem;\n  color: #999;\n}\n\n.doc-catalogue {\n  margin-left: 1rem;\n}\n\n.doc-catalogue.doc-catalogue-header {\n  margin-left: .5rem;\n}\n\n.doc-catalogue .menu-title {\n  position: relative;\n  width: 230px;\n  padding-left: 1rem;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.doc-catalogue .menu-title:hover::after, .doc-catalogue .menu-title.active::after {\n  content: '';\n  position: absolute;\n  top: 25%;\n  bottom: 20%;\n  left: 0;\n  border-left: 1px solid #193c5a;\n}\n\n.doc-catalogue .menu-title.active::after {\n  border-left: 2px solid #193c5a;\n}\n\n.doc-catalogue-panel {\n  margin-top: 50px;\n}\n\n@media (max-width: 1023px) {\n  .doc-catalogue-panel {\n    display: none !important;\n  }\n}\n\n.doc-content {\n  counter-reset: outline1;\n}\n\n.doc-content h1::before, .doc-content h2::before, .doc-content h3::before, .doc-content h4::before, .doc-content h5::before, .doc-content h6::before {\n  margin-right: .5rem;\n}\n\n.doc-content > h1 {\n  counter-reset: outline2;\n}\n\n.doc-content > h1::before {\n  content: counter(outline1, decimal) \". \";\n  counter-increment: outline1;\n}\n\n.doc-content > h1 ~ h2 {\n  counter-reset: outline3;\n}\n\n.doc-content > h1 ~ h2::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\";\n  counter-increment: outline2;\n}\n\n.doc-content > h1 ~ h2 ~ h3 {\n  counter-reset: outline4;\n}\n\n.doc-content > h1 ~ h2 ~ h3::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\";\n  counter-increment: outline3;\n}\n\n.doc-content > h1 ~ h2 ~ h3 ~ h4 {\n  counter-reset: outline5;\n}\n\n.doc-content > h1 ~ h2 ~ h3 ~ h4::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\";\n  counter-increment: outline4;\n}\n\n.doc-content > h1 ~ h2 ~ h3 ~ h4 ~ h5 {\n  counter-reset: outline6;\n}\n\n.doc-content > h1 ~ h2 ~ h3 ~ h4 ~ h5::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\" counter(outline5, decimal) \".\";\n  counter-increment: outline5;\n}\n\n.doc-content > h1 ~ h2 ~ h3 ~ h4 ~ h5 ~ h6::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\" counter(outline5, decimal) \".\" counter(outline6, decimal) \".\";\n  counter-increment: outline6;\n}\n\n.doc-content > h2 {\n  counter-reset: outline2;\n}\n\n.doc-content > h2::before {\n  content: counter(outline1, decimal) \".\";\n  counter-increment: outline1;\n}\n\n.doc-content > h2 ~ h3 {\n  counter-reset: outline3;\n}\n\n.doc-content > h2 ~ h3::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\";\n  counter-increment: outline2;\n}\n\n.doc-content > h2 ~ h3 ~ h4 {\n  counter-reset: outline4;\n}\n\n.doc-content > h2 ~ h3 ~ h4::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\";\n  counter-increment: outline3;\n}\n\n.doc-content > h2 ~ h3 ~ h4 ~ h5 {\n  counter-reset: outline5;\n}\n\n.doc-content > h2 ~ h3 ~ h4 ~ h5::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\";\n  counter-increment: outline4;\n}\n\n.doc-content > h2 ~ h3 ~ h4 ~ h5 ~ h6::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\" counter(outline5, decimal) \".\";\n  counter-increment: outline5;\n}\n\n.doc-content > h3 {\n  counter-reset: outline2;\n}\n\n.doc-content > h3::before {\n  content: counter(outline1, decimal) \".\";\n  counter-increment: outline1;\n}\n\n.doc-content > h3 ~ h4 {\n  counter-reset: outline3;\n}\n\n.doc-content > h3 ~ h4::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\";\n  counter-increment: outline2;\n}\n\n.doc-content > h3 ~ h4 ~ h5 {\n  counter-reset: outline4;\n}\n\n.doc-content > h3 ~ h4 ~ h5::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\";\n  counter-increment: outline3;\n}\n\n.doc-content > h3 ~ h4 ~ h5 ~ h6::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\";\n  counter-increment: outline4;\n}\n\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $theme-property-values (_variables.scss).\n */\n.doc-copy {\n  position: relative;\n}\n\n.doc-copy-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n  padding: .3rem .7rem;\n  border: 0;\n  color: #fff;\n  cursor: pointer;\n  outline: none;\n  background: #2196f3;\n  background: var(--theme-primary, #2196f3);\n}\n\n.doc-copy-btn:hover {\n  background: #1976d2;\n  background: var(--theme-primary-dark, #1976d2);\n}\n\n.doc-copy + .highlight {\n  margin-top: 0;\n}\n\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n.doc-example-render {\n  position: relative;\n  padding: 1rem;\n  margin: 1rem .5rem;\n  border: solid #2196f3;\n  border-width: 1px 0 0;\n}\n\n.doc-example-render::after {\n  content: \"\";\n  display: block;\n  clear: both;\n}\n\n@media (min-width: 640px) {\n  .doc-example-render {\n    padding: 1.5rem;\n    margin-bottom: 0;\n    margin-left: 0;\n    margin-right: 0;\n    border-width: 1px 1px 0;\n  }\n}\n\n.doc-example-container .container-fluid,\n.doc-example-container .container {\n  padding: 20px;\n  color: #52145d;\n  background-color: #f1d6f6;\n  text-align: center;\n}\n\n.doc-example-row .row + .row {\n  margin-top: 1rem;\n}\n\n.doc-example-row .row .row {\n  border: 1px solid;\n}\n\n.doc-example-row [class*=\"col\"] {\n  padding-top: 10px;\n  padding-bottom: 10px;\n  color: #fff;\n  background: #4fc3f7;\n  text-align: center;\n}\n\n.doc-example-row [class*=\"col\"]:nth-of-type(2n) {\n  background: #2196f3;\n}\n\n.doc-example-row-flex-cols .row {\n  min-height: 5rem;\n  background: #e1f5fe;\n}\n\n.doc-example-row-gutters .no-gutters {\n  margin-top: 1rem;\n}\n\n.doc-example-row-gutters [class^=\"col\"] > div {\n  background: #ba68c8;\n}\n\n.highlight table td {\n  padding: 5px;\n}\n\n.highlight table pre {\n  margin: 0;\n}\n\n.highlight .cm {\n  color: #999988;\n  font-style: italic;\n}\n\n.highlight .cp {\n  color: #999999;\n  font-weight: bold;\n}\n\n.highlight .c1 {\n  color: #999988;\n  font-style: italic;\n}\n\n.highlight .cs {\n  color: #999999;\n  font-weight: bold;\n  font-style: italic;\n}\n\n.highlight .c, .highlight .cd {\n  color: #999988;\n  font-style: italic;\n}\n\n.highlight .err {\n  color: #a61717;\n  background-color: #e3d2d2;\n}\n\n.highlight .gd {\n  color: #000000;\n  background-color: #ffdddd;\n}\n\n.highlight .ge {\n  color: #000000;\n  font-style: italic;\n}\n\n.highlight .gr {\n  color: #aa0000;\n}\n\n.highlight .gh {\n  color: #999999;\n}\n\n.highlight .gi {\n  color: #000000;\n  background-color: #ddffdd;\n}\n\n.highlight .go {\n  color: #888888;\n}\n\n.highlight .gp {\n  color: #555555;\n}\n\n.highlight .gs {\n  font-weight: bold;\n}\n\n.highlight .gu {\n  color: #aaaaaa;\n}\n\n.highlight .gt {\n  color: #aa0000;\n}\n\n.highlight .kc {\n  color: #000000;\n  font-weight: bold;\n}\n\n.highlight .kd {\n  color: #000000;\n  font-weight: bold;\n}\n\n.highlight .kn {\n  color: #000000;\n  font-weight: bold;\n}\n\n.highlight .kp {\n  color: #000000;\n  font-weight: bold;\n}\n\n.highlight .kr {\n  color: #000000;\n  font-weight: bold;\n}\n\n.highlight .kt {\n  color: #445588;\n  font-weight: bold;\n}\n\n.highlight .k, .highlight .kv {\n  color: #000000;\n  font-weight: bold;\n}\n\n.highlight .mf {\n  color: #009999;\n}\n\n.highlight .mh {\n  color: #009999;\n}\n\n.highlight .il {\n  color: #009999;\n}\n\n.highlight .mi {\n  color: #009999;\n}\n\n.highlight .mo {\n  color: #009999;\n}\n\n.highlight .m, .highlight .mb, .highlight .mx {\n  color: #009999;\n}\n\n.highlight .sb {\n  color: #d14;\n}\n\n.highlight .sc {\n  color: #d14;\n}\n\n.highlight .sd {\n  color: #d14;\n}\n\n.highlight .s2 {\n  color: #d14;\n}\n\n.highlight .se {\n  color: #d14;\n}\n\n.highlight .sh {\n  color: #d14;\n}\n\n.highlight .si {\n  color: #d14;\n}\n\n.highlight .sx {\n  color: #d14;\n}\n\n.highlight .sr {\n  color: #009926;\n}\n\n.highlight .s1 {\n  color: #d14;\n}\n\n.highlight .ss {\n  color: #990073;\n}\n\n.highlight .s {\n  color: #d14;\n}\n\n.highlight .na {\n  color: #008080;\n}\n\n.highlight .bp {\n  color: #999999;\n}\n\n.highlight .nb {\n  color: #0086B3;\n}\n\n.highlight .nc {\n  color: #445588;\n  font-weight: bold;\n}\n\n.highlight .no {\n  color: #008080;\n}\n\n.highlight .nd {\n  color: #3c5d5d;\n  font-weight: bold;\n}\n\n.highlight .ni {\n  color: #800080;\n}\n\n.highlight .ne {\n  color: #990000;\n  font-weight: bold;\n}\n\n.highlight .nf {\n  color: #990000;\n  font-weight: bold;\n}\n\n.highlight .nl {\n  color: #990000;\n  font-weight: bold;\n}\n\n.highlight .nn {\n  color: #555555;\n}\n\n.highlight .nt {\n  color: #000080;\n}\n\n.highlight .vc {\n  color: #008080;\n}\n\n.highlight .vg {\n  color: #008080;\n}\n\n.highlight .vi {\n  color: #008080;\n}\n\n.highlight .nv {\n  color: #008080;\n}\n\n.highlight .ow {\n  color: #000000;\n  font-weight: bold;\n}\n\n.highlight .o {\n  color: #000000;\n  font-weight: bold;\n}\n\n.highlight .w {\n  color: #bbbbbb;\n}\n\n.highlight {\n  background-color: #f8f8f8;\n}\n\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n.highlight {\n  padding: 1rem;\n  margin: 1rem .5rem;\n  border: 1px solid #2196f3;\n  -ms-overflow-style: -ms-autohiding-scrollbar;\n  background-color: #eeeeee;\n}\n\n@media (min-width: 600px) {\n  .highlight {\n    padding: 2.1rem 1.5rem 1.5rem;\n    margin-left: 0;\n    margin-right: 0;\n  }\n}\n\n.doc-example .highlight {\n  border-top: 0;\n}\n\n.highlight pre {\n  padding: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  border: 0;\n  background-color: transparent;\n}\n\n.highlight pre code {\n  font-size: inherit;\n  color: #212121;\n}\n\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n.footer-assist {\n  padding-top: 4.5rem;\n}\n\n.footer {\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  padding: 1rem 0;\n  border-top: 1px solid #e0e0e0;\n  color: rgba(0, 0, 0, 0.54);\n}\n\n.doc-color-group {\n  color: #fff;\n}\n\n.doc-primary-color {\n  margin-bottom: .5rem;\n}\n\n.doc-color-title {\n  padding: .75rem 1rem 2rem;\n}\n\n.doc-color {\n  display: flex;\n  justify-content: space-between;\n  padding: .75rem 1rem;\n}\n\n.doc-color-dark {\n  color: rgba(0, 0, 0, 0.87);\n}\n\n.doc-color-a {\n  margin-top: .5rem;\n}\n\n.doc-color-panel {\n  padding-left: 10px;\n  padding-right: 10px;\n  margin-bottom: 3rem;\n}\n\n.doc-color-panel > .col {\n  padding-left: 0;\n  padding-right: 0;\n}\n","// sass-lint:disable no-duplicate-properties\n\n@font-face {\n  font-family: \"icon\";\n  src: url('../fonts/iconfont.eot?t=1493977267384'); /* IE9*/\n  src: url('../fonts/iconfont.eot?t=1493977267384#iefix') format('embedded-opentype'), /* IE6-IE8 */\n  url('../fonts/iconfont.woff?t=1493977267384') format('woff'), /* chrome, firefox */\n  url('../fonts/iconfont.ttf?t=1493977267384') format('truetype'), /* chrome, firefox, opera, Safari, Android, iOS 4.2+*/\n  url('../fonts/iconfont.svg?t=1493977267384#iconfont') format('svg'); /* iOS 4.1- */\n}\n\n.icon {\n  font-family: \"icon\" !important;\n  font-size: 16px;\n  font-style: normal;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.icon-catalogue::before { content: \"\\e601\"; }\n","// 定义主题相关 function\n\n// 颜色色彩系数\n// 例如 _coefficient(0) => 0   _coefficient(1) => .000303526983549\n// _coefficient(2) => .000607053967098  _coefficient(3) => .000910580950647\n\n// sass 中只能精确到 15 位，即 precision 最大为15\n@function coefficient($rgb) {\n  $rgb: $rgb / 255;\n  @return if($rgb < 0.03928, $rgb / 12.92, pow(($rgb + 0.055) / 1.055, 2.4));\n}\n\n// 计算色彩的相对亮度\n// 遵循 WCAG 2.0 规范 https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n// https://www.w3.org/Translations/WCAG20-zh/  页面中查找 相对亮度\n// 颜色分为 R G B 三基色, 值从 0 到 255\n// 对于sRGB色彩空间，色彩的相对亮度是指定义 L = 0.2126 * R + 0.7152 * G + 0.0722 * B，其中R，G和B的定义为\n//  function f($color) {\n//   $color = $color / 255;\n//   return $color < 0.03928 ? $color / 12.92 : Math.pow(($color + 0.055) / 1.055, 2.4);\n// }\n// 该定义已封装为函数 coefficient\n@function theme-luminance($color) {\n  $red: red($color);\n  $green: green($color);\n  $blue: blue($color);\n  $r: coefficient($red);\n  $g: coefficient($green);\n  $b: coefficient($blue);\n  @return .2126 * $r + .7152 * $g + .0722 * $b;\n}\n\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n\n@function theme-contrast-ratio($back, $front) {\n  $back-luminance: theme-luminance($back) + .05;\n  $fore-luminance: theme-luminance($front) + .05;\n  // 明亮度最大除以最小得多对比度\n  @return max($back-luminance, $fore-luminance) / min($back-luminance, $fore-luminance);\n}\n\n// 根据给定的颜色来判断在文本上是使用深色还是浅色\n// 如果$color是浅色，则返回深色 dark，否则为浅色 light\n@function theme-light-or-dark($color) {\n  // 最小对比度设为 3.1\n  $minimum-contrast: 3.1;\n  $light-contrast: theme-contrast-ratio($color, #fff);\n  $dark-contrast: theme-contrast-ratio($color, rgba(#000, .87));\n\n  // 当给定颜色与白色的对比度小于 3.1时，并且给定颜色与黑色的对比度大于给定颜色与白色的对比度时，\n  // 返回 dark，否则 light\n\n  @if ($light-contrast < $minimum-contrast) and ($dark-contrast > $light-contrast) {\n    @return \"dark\";\n  } @else {\n    @return \"light\";\n  }\n}\n","// 这里之所以定义 html 为 position: relative; 主要为了实现，不论页面高度如何，底部始终在最下面显示\n@import \"../../../scss/theme/variable\";\n\nhtml {\n  position: relative;\n}\n\nhtml, body {\n  height: auto;\n  min-height: 100%;\n}\n\nbody {\n  background-color: $grey-color-50;\n}\n","// 自定义主题颜色\n@import \"../base/variables/options\";\n@import \"./function\";\n\n// 主题颜色，换肤一般改变这三个基本颜色即可\n// 这三种基本颜色主题，会用在所有 CSS 组件上，\n$theme-primary: #2196f3 !default; // 主颜色，使用蓝色 $blue-500 #2196f3\n$theme-accent: #e040fb !default; // 次颜色，也叫强调颜色，使用紫色 $purple-a-200 #e040fb\n$theme-background: #fff !default; // 背景颜色，白色\n\n// 主题颜色浅色\n$theme-primary-light: #90caf9 !default; // 取 $blue-200\n$theme-accent-light: #ce93d8 !default; // 取 $purple-200\n\n// 主题颜色深色\n$theme-primary-dark: #1976d2 !default; // 取 $blue-700\n$theme-accent-dark: #d500f9 !default; // 取 $purple-a-400\n\n// 色调，是用浅色还是深色 light or dark\n$theme-primary-tone: theme-light-or-dark($theme-primary);\n$theme-accent-tone: theme-light-or-dark($theme-accent);\n$theme-background-tone: theme-light-or-dark($theme-background);\n\n// 定义文本默认颜色，默认颜色深色用黑色，浅色用白色\n// 分为基本颜色、次要颜色、提示性颜色和禁用颜色，分别用在基础颜色、过渡颜色、提示或暗色和表单 disabled readonly 以及其他禁用\n$theme-text-colors: (\n  dark: (\n    primary: rgba(0, 0, 0, .87),\n    secondary: rgba(0, 0, 0, .54),\n    hint: rgba(0, 0, 0, .38),\n    disabled: rgba(0, 0, 0, .38)\n  ),\n  light: (\n    primary: #ffffff,\n    secondary: rgba(255, 255, 255, .7),\n    hint: rgba(255, 255, 255, .5),\n    disabled: rgba(255, 255, 255, .5)\n  )\n);\n\n// 主题属性值\n$theme-property-values: (\n  // 主题颜色\n  primary: $theme-primary,\n  accent: $theme-accent,\n  background: $theme-background,\n\n  // 主题颜色浅色\n  primary-light: $theme-primary-light,\n  accent-light: $theme-accent-light,\n\n  // 主题颜色深色\n  primary-dark: $theme-primary-dark, // 取 $blue-700\n  accent-dark: $theme-accent-dark, // 取 $purple-a-400\n\n  // 可以用在 background-color border-color 或 color 等可以设置颜色的属性上\n  // 当 map-get($theme-text-colors, $theme-primary-tone) 返回 light 时，对应浅色值\n  // 当 map-get($theme-text-colors, $theme-primary-tone) 返回 dark 时，对应深色值\n\n  // 用在 $theme-primary 上的 primary secondary hint 和 disabled 对比颜色\n  text-primary-on-primary: map-get(map-get($theme-text-colors, $theme-primary-tone), primary),\n  text-secondary-on-primary: map-get(map-get($theme-text-colors, $theme-primary-tone), secondary),\n  text-hint-on-primary: map-get(map-get($theme-text-colors, $theme-primary-tone), hint),\n  text-disabled-on-primary: map-get(map-get($theme-text-colors, $theme-primary-tone), disabled),\n\n  // 用在 $theme-accent 上的 primary secondary hint 和 disabled 对比颜色\n  text-primary-on-accent: map-get(map-get($theme-text-colors, $theme-accent-tone), primary),\n  text-secondary-on-accent: map-get(map-get($theme-text-colors, $theme-accent-tone), secondary),\n  text-hint-on-accent: map-get(map-get($theme-text-colors, $theme-accent-tone), hint),\n  text-disabled-on-accent: map-get(map-get($theme-text-colors, $theme-accent-tone), disabled),\n\n  // 用在 $theme-background 上的 primary secondary hint 和 disabled 对比颜色\n  text-primary-on-background: map-get(map-get($theme-text-colors, $theme-background-tone), primary),\n  text-secondary-on-background: map-get(map-get($theme-text-colors, $theme-background-tone), secondary),\n  text-hint-on-background: map-get(map-get($theme-text-colors, $theme-background-tone), hint),\n  text-disabled-on-background: map-get(map-get($theme-text-colors, $theme-background-tone), disabled),\n\n  // 用在浅色主题上的 primary secondary hint 和 disabled 对比颜色，浅色主题用深色对比色\n  text-primary-on-light: map-get(map-get($theme-text-colors, dark), primary),\n  text-secondary-on-light: map-get(map-get($theme-text-colors, dark), secondary),\n  text-hint-on-light: map-get(map-get($theme-text-colors, dark), hint),\n  text-disabled-on-light: map-get(map-get($theme-text-colors, dark), disabled),\n\n  // 用在深色主题上的 primary secondary hint 和 disabled 对比颜色，深色主题用浅色对比色\n  text-primary-on-dark: map-get(map-get($theme-text-colors, light), primary),\n  text-secondary-on-dark: map-get(map-get($theme-text-colors, light), secondary),\n  text-hint-on-dark: map-get(map-get($theme-text-colors, light), hint),\n  text-disabled-on-dark: map-get(map-get($theme-text-colors, light), disabled)\n);\n\n// 基于 material design ，定义主题颜色，强调颜色和背景颜色，这三种颜色，会用在所有 CSS 组件上，\n// 另外又定义成功 success 、信息 info、警告 warning 、错误 error 四种辅助颜色，这四种颜色主要用在背景，文本，按钮等上\n// 主要用来区分文本颜色和背景，以及表单样式（比如校验失败和成功的颜色）等\n$theme-assist-colors: (\n  success: #4caf50, // $green-500\n  info: #00bcd4, // $cyan-500\n  warning: #ff9800, // $orange-500\n  error: #f44336, // $red-500\n) !default;\n\n// 辅助颜色浅色透明态\n$theme-assist-colors-light: (\n  success: rgba(map-get($theme-assist-colors, success), .54),\n  info: rgba(map-get($theme-assist-colors, info), .54),\n  warning: rgba(map-get($theme-assist-colors, warning), .54),\n  error: rgba(map-get($theme-assist-colors, error), .54),\n) !default;\n\n// 常用灰色颜色，提供了黑色透明度和灰色本身颜色两种方案，根据配置项 $enable-transparent 来选择其中一种方案\n// 默认使用黑色透明度，可以通过修改 base/variables/_options.scss 中变量 $enable-transparent 来选择不同的方案\n\n// 灰色颜色，对于灰色颜色，这里没有采用 css 变量处理\n$greys: (\n  50: #fafafa,\n  100: #f5f5f5,\n  200: #eeeeee,\n  300: #e0e0e0,\n  400: #bdbdbd,\n  500: #9e9e9e,\n  600: #757575,\n  700: #616161,\n  800: #424242,\n  900: #212121\n) !default;\n\n// 灰色透明色\n$greys-transparent: (\n  50: rgba(0, 0, 0, .02), // 相当于 #fafafa;\n  100: rgba(0, 0, 0, .04), // 相当于 #f5f5f5\n  200: rgba(0, 0, 0, .065), // 相当于 #eeeeee\n  300: rgba(0, 0, 0, .12), // 相当于 #e0e0e0\n  400: rgba(0, 0, 0, .26), // 相当于 #bdbdbd\n  500: rgba(0, 0, 0, .38), // 相当于 #9e9e9e\n  600: rgba(0, 0, 0, .54), // 相当于 #757575\n  700: rgba(0, 0, 0, .62), // 相当于 #616161\n  800: rgba(0, 0, 0, .74), // 相当于 #424242\n  900: rgba(0, 0, 0, .87) // 相当于 #212121\n) !default;\n\n// 定义常用几种灰度颜色值\n$white: #ffffff !default;\n$black: #000000 !default;\n$transparent: rgba(0, 0, 0, 0) !default; // 透明色\n\n$grey-color-50: if($enable-transparent, map-get($greys-transparent, 50), map-get($greys, 50));\n$grey-color-100: if($enable-transparent, map-get($greys-transparent, 100), map-get($greys, 100));\n$grey-color-200: if($enable-transparent, map-get($greys-transparent, 200), map-get($greys, 200));\n$grey-color-300: if($enable-transparent, map-get($greys-transparent, 300), map-get($greys, 300));\n$grey-color-400: if($enable-transparent, map-get($greys-transparent, 400), map-get($greys, 400));\n$grey-color-500: if($enable-transparent, map-get($greys-transparent, 500), map-get($greys, 500));\n$grey-color-600: if($enable-transparent, map-get($greys-transparent, 600), map-get($greys, 600));\n$grey-color-700: if($enable-transparent, map-get($greys-transparent, 700), map-get($greys, 700));\n$grey-color-800: if($enable-transparent, map-get($greys-transparent, 800), map-get($greys, 800));\n$grey-color-900: if($enable-transparent, map-get($greys-transparent, 900), map-get($greys, 900));\n","// 首页开启之旅\n@import \"../../../scss/layout/grid/variable\";\n@import \"../../../scss/responsive/mixin\";\n\n.doc-journey {\n  position: relative;\n  padding: 2rem ($grid-gutter-width / 2);\n\n  h1 {\n    line-height: 1;\n  }\n\n  .btn {\n    width: 100%;\n    padding: 0.75rem 1.5rem;\n    margin-bottom: 1rem;\n    border-radius: 5px;\n    font-size: 1.125rem;\n  }\n\n  @include media-breakpoint-up(sm) {\n    padding-top: 2.5rem;\n    padding-bottom: 2.5rem;\n  }\n\n  @include media-breakpoint-up(md) {\n    h1 {\n      font-size: 3rem;\n    }\n\n    .btn {\n      padding: 0.875rem 2rem;\n      border-radius: 5px;\n      font-size: 1.125rem;\n\n      &:first-child {\n        margin-right: 2rem;\n      }\n    }\n  }\n\n  @include media-breakpoint-up(lg) {\n    .btn {\n      width: 40%;\n    }\n  }\n}\n","// responsive mixin\n@import \"variable\";\n@import \"function\";\n\n// 响应式和媒体查询，设备大小分界点为\n// {\n//   xs: 0, // xsmall\n//   sm: 600px, // small\n//   md: 1024px, // medium\n//   lg: 1440px, // large\n//   xl: 1600px, // xlarge\n// }\n\n// https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Media_queries\n// 补充一下媒体查询 max-width min-width max-height min-height 知识\n// 以 max-width min-width 为例来说明\n\n// 1\n// max-width 下面的例子指小于等于 600px 时，该样式起作用，即最大宽度不超过 600px 起作用\n//@media screen and (max-width: 600px) {\n//  .class {\n//    background: #ccc;\n//  }\n//}\n\n// 2\n// min-width 下面的例子指大于等于 900px 时，该样式起作用，即最小宽度需要大于等于900px 起作用\n//@media screen and (min-width: 900px) {\n//  .class {\n//    background: #666;\n//  }\n//}\n\n// 3\n// 组合使用，下面的例子指大于等于600px 小于等于900px 时，起作用\n//@media screen and (min-width: 600px) and (max-width: 900px) {\n//  .class {\n//    background: #333;\n//  }\n//}\n\n// 通过上面的例子，结合css属性 min-width 和 max-width 理解，即最小宽度必须是多少才其作用，\n// 不能超过最大宽度才起作用\n// 另外上例中 3 中的情况，min-width 必须小于 max-width ，否则不起作用\n\n// 如果 $name 为最小值，即 xs 时，则不用媒体查询输出样式，否则为媒体查询输出\n// 并设置其最小宽度，即当设备宽度达到该值时，应用定义的该样式\n//@include media-breakpoint-up(xs) {\n//  .test {\n//    color: #ff0000;\n//  }\n//}\n//\n//输出结果为\n//  .test {\n//    color: #ff0000;\n//  }\n//\n\n//@include media-breakpoint-up(sm) {\n//  .test {\n//    color: #ff0000;\n//  }\n//}\n//输出结果为\n// @media (min-width: 600px) {\n//  .test {\n//    color: #ff0000;\n//  }\n// }\n\n@mixin media-breakpoint-up($name, $breakpoints: $responsive-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// 跟 media-breakpoint-up 相反 如果 $name 为最大值，即 xl 时，则不使用媒体查询输出样式，\n// 否则使用媒体查询输出，\n// 并设置其最大宽度，即当设备宽度小于等于该值时，应用定义的该样式\n//@include media-breakpoint-down(xs) {\n//  .test {\n//    color: #ff0000;\n//  }\n//}\n//输出结果为\n//@media (max-width: 599px) {\n//  .test {\n//    color: #ff0000;\n//  }\n//}\n//\n\n//@include media-breakpoint-down(xl) {\n//  .test {\n//    color: #ff0000;\n//  }\n//}\n//输出结果为\n//.test {\n//  color: #ff0000;\n//}\n\n@mixin media-breakpoint-down($name, $breakpoints: $responsive-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// 设置媒体查询最大和最小区间样式\n//@include media-breakpoint-between(xs, xl) {\n//  .test {\n//    color: #ff0000;\n//  }\n//}\n//输出结果为\n//@media (min-width: 599px) {\n//  .test {\n//    color: #ff0000;\n//  }\n//}\n//\n//@include media-breakpoint-between(sm, md) {\n//  .test {\n//    color: #ff0000;\n//  }\n//}\n//输出结果为\n//@media (min-width: 1023px) and (max-width: 1439px) {\n//  .test {\n//    color: #ff0000;\n//  }\n//}\n\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $responsive-breakpoints) {\n  $min: breakpoint-max($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if ($max == null) {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  }\n}\n\n// 设置某一媒体查询区间最大和最小区间样式，比如 sm 的区间为 600px  1023px\n//没有 breakpoint 为 xs 和 xl 的情况，即如果传入 xs 和 xl 返回为空\n//@include media-breakpoint-only(xl) {\n//  .test {\n//    color: #ff0000;\n//  }\n//}\n//输出结果为空\n//\n//@include media-breakpoint-only(lg) {\n//  .test {\n//    color: #ff0000;\n//  }\n//}\n//输出结果为\n//@media (min-width: 1440px) and (max-width: 1599px) {\n//  .test {\n//    color: #ff0000;\n//  }\n//}\n\n@mixin media-breakpoint-only($name, $breakpoints: $responsive-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name) {\n      @content;\n    }\n  } @else if ($min == null) {\n    @include media-breakpoint-down($name) {\n      @content;\n    }\n  }\n}\n\n// 如果我们不使用响应式布局时，即把变量值 $enable-breakpoint 设为 false 时\n@mixin no-media-breakpoint() {\n  @content;\n}\n\n","@import \"../../../scss/theme/variable\";\n\n// 重置背景颜色\n.drawer-content {\n  background: $grey-color-50;\n}\n\n.doc-main {\n  min-height: 500px;\n  padding: 1.5rem 1rem;\n}\n\n.doc-content-header {\n  > a {\n    margin: 0 .5rem;\n  }\n}\n\n.doc-content {\n  border-right: 1px solid $grey-color-200;\n\n  > h2 {\n    margin-top: 2rem;\n  }\n  > h3 {\n    margin-top: 1.5rem;\n  }\n}\n\n.doc-table {\n  width: 80%;\n\n  tr:nth-of-type(odd) {\n    background: #f9f9f9;\n  }\n  th {\n    border-bottom: 1px solid #ddd;\n  }\n\n  th,\n  td {\n    padding: .5rem 1.5rem;\n    border-top: 1px solid #ddd;\n    border-left: 1px solid #ddd;\n\n    &:last-child {\n      border-right: 1px solid #ddd;\n    }\n  }\n  tr:last-child > td {\n    border-bottom: 1px solid #ddd;\n  }\n}\n","// 目录和内容\n@import \"../../../scss/responsive/mixin\";\n\n.doc-catalogue-header {\n  position: relative;\n  &::before {\n    content: '目录';\n    position: absolute;\n    top: -25px;\n    padding-left: 1rem;\n    color: #999;\n  }\n}\n\n.doc-catalogue {\n  margin-left: 1rem;\n\n  &.doc-catalogue-header {\n    margin-left: .5rem;\n  }\n\n  .menu-title {\n    position: relative;\n    width: 230px;\n    padding-left: 1rem;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n\n    &:hover::after,\n    &.active::after {\n      content: '';\n      position: absolute;\n      top: 25%;\n      bottom: 20%;\n      left: 0;\n      border-left: 1px solid #193c5a;\n    }\n    &.active::after {\n      border-left: 2px solid #193c5a;\n    }\n  }\n}\n\n.doc-catalogue-panel {\n  margin-top: 50px;\n}\n\n@include media-breakpoint-down(sm) {\n  .doc-catalogue-panel {\n    display: none !important;\n  }\n}\n\n// 内容目录大纲编号 start\n.doc-content {\n  counter-reset: outline1;\n  h1, h2, h3, h4, h5, h6 {\n    &::before {\n      margin-right: .5rem;\n    }\n  }\n}\n\n// 如果大纲第一级别是 h1\n.doc-content > h1 {\n  counter-reset: outline2;\n  &::before {\n    content: counter(outline1, decimal) \". \";\n    counter-increment: outline1;\n  }\n  ~ h2 {\n    counter-reset: outline3;\n  }\n  ~ h2::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\";\n    counter-increment: outline2;\n  }\n  ~ h2 ~ h3 {\n    counter-reset: outline4;\n  }\n  ~ h2 ~ h3::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\";\n    counter-increment: outline3;\n  }\n\n  ~ h2 ~ h3 ~ h4 {\n    counter-reset: outline5;\n  }\n\n  ~ h2 ~ h3 ~ h4::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\";\n    counter-increment: outline4;\n  }\n\n  ~ h2 ~ h3 ~ h4 ~ h5 {\n    counter-reset: outline6;\n  }\n\n  ~ h2 ~ h3 ~ h4 ~ h5::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\" counter(outline5, decimal) \".\";\n    counter-increment: outline5;\n  }\n\n  ~ h2 ~ h3 ~ h4 ~ h5 ~ h6::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\" counter(outline5, decimal) \".\" counter(outline6, decimal) \".\";\n    counter-increment: outline6;\n  }\n}\n\n// 如果大纲第一级别是 h2\n.doc-content > h2 {\n  counter-reset: outline2;\n  &::before {\n    content: counter(outline1, decimal) \".\";\n    counter-increment: outline1;\n  }\n  ~ h3 {\n    counter-reset: outline3;\n  }\n  ~ h3::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\";\n    counter-increment: outline2;\n  }\n  ~ h3 ~ h4 {\n    counter-reset: outline4;\n  }\n  ~ h3 ~ h4::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\";\n    counter-increment: outline3;\n  }\n\n  ~ h3 ~ h4 ~ h5 {\n    counter-reset: outline5;\n  }\n  ~ h3 ~ h4 ~ h5::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\";\n    counter-increment: outline4;\n  }\n\n  ~ h3 ~ h4 ~ h5 ~ h6::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\" counter(outline5, decimal) \".\";\n    counter-increment: outline5;\n  }\n}\n\n// 如果大纲第一级别是 h3（h4以后的不再考虑）\n.doc-content > h3 {\n  counter-reset: outline2;\n  &::before {\n    content: counter(outline1, decimal) \".\";\n    counter-increment: outline1;\n  }\n  ~ h4 {\n    counter-reset: outline3;\n  }\n  ~ h4::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\";\n    counter-increment: outline2;\n  }\n  ~ h4 ~ h5 {\n    counter-reset: outline4;\n  }\n  ~ h4 ~ h5::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\";\n    counter-increment: outline3;\n  }\n\n  ~ h4 ~ h5 ~ h6::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\";\n    counter-increment: outline4;\n  }\n}\n\n// 内容目录大纲编号 end\n","// theme mixin\n@import \"./variable\";\n\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $theme-property-values (_variables.scss).\n */\n\n// 给属性 $property 设置颜色 $style 值\n// 属性 $property 一般用在 color background-color border-color 等，也可用在任何可以设置颜色值的属性上\n// $style 应该是 $theme-property-values 中某个 key\n// 该 mixin 主要用来设置主题颜色值，并且设置了主题 css 变量值\n// 用户通过修改 css 变量值可以动态的修改整个主题值，比如在 body 上修改 css 变量值\n@mixin theme-prop($property, $style, $important: false) {\n  @if not map-has-key($theme-property-values, $style) {\n    @error \"无效的主题属性值，#{$style} 必须是以下的某一 key #{map-keys($theme-property-values)}\";\n  }\n\n  @if $important {\n    #{$property}: map-get($theme-property-values, $style) !important;\n    #{$property}: var(--theme-#{$style}, map-get($theme-property-values, $style)) !important;\n  } @else {\n    #{$property}: map-get($theme-property-values, $style);\n    #{$property}: var(--theme-#{$style}, map-get($theme-property-values, $style));\n  }\n}\n\n// 辅助颜色 mixin\n@mixin theme-assist($property, $style, $color, $opacity: 1) {\n  @if ($property == \"backgroud-color\") {\n    // 变量 --theme-#{$style} 在 theme.scss 中定义\n    $css-var: var(--theme-#{$style}, $color);\n    background-color: rgba($color, $opacity);\n\n    // 可以动态的设置颜色透明度，属于 CSS 4 color 范畴，目前浏览器支持的不是很好\n    // 可以用 rgba 来代替，但只能静态设置，不可以随着颜色和透明度的变化动态设置\n    // https://drafts.csswg.org/css-color/#modifying-colors\n    @supports (background-color: color(green a(10%))) {\n      background-color: color(#{$css-var} a(#{percentage($opacity)}));\n    }\n  } @else {\n    #{$property}: rgba($color, $opacity);\n  }\n\n  @if ($opacity == 1) {\n    #{$property}: var(--theme-#{$style}, $color);\n  }\n}\n","// copy 到剪贴板样式\n@import \"../../../scss/theme/mixin\";\n\n.doc-copy {\n  position: relative;\n}\n\n.doc-copy-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n  padding: .3rem .7rem;\n  border: 0;\n  color: #fff;\n  cursor: pointer;\n  outline: none;\n\n  @include theme-prop(background, primary);\n\n  &:hover {\n    @include theme-prop(background, primary-dark);\n  }\n}\n\n.doc-copy + .highlight {\n  margin-top: 0;\n}\n","@import \"../../../scss/base/mixins/clearfix\";\n@import \"../../../scss/theme/variable\";\n@import \"../../../scss/theme/color_palette\";\n\n// 例子样式\n.doc-example-render {\n  position: relative;\n  padding: 1rem;\n  margin: 1rem .5rem;\n  border: solid $theme-primary;\n  border-width: 1px 0 0;\n  @include clearfix();\n}\n\n@media (min-width: 640px) {\n  .doc-example-render {\n    padding: 1.5rem;\n    margin-bottom: 0;\n    margin-left: 0;\n    margin-right: 0;\n    border-width: 1px 1px 0;\n  }\n}\n\n// 容器例子样式\n.doc-example-container {\n  .container-fluid,\n  .container {\n    padding: 20px;\n    color: darken(#9c27b0, 20%);\n    background-color: lighten(#9c27b0, 48%);\n    text-align: center;\n  }\n}\n\n// 栅格例子样式\n.doc-example-row {\n  .row + .row {\n    margin-top: 1rem;\n  }\n  // 嵌套的样式\n  .row .row {\n    border: 1px solid;\n  }\n  [class*=\"col\"] {\n    padding-top: 10px;\n    padding-bottom: 10px;\n    color: #fff;\n    background: $light-blue-300;\n    text-align: center;\n\n    &:nth-of-type(2n) {\n      background: $blue-500;\n    }\n  }\n}\n\n.doc-example-row-flex-cols .row {\n  min-height: 5rem;\n  background: $light-blue-50;\n}\n\n.doc-example-row-gutters {\n  .no-gutters {\n    margin-top: 1rem;\n  }\n  [class^=\"col\"] > div {\n    background: $purple-300;\n  }\n}\n","@mixin clearfix() {\n  &::after {\n    content: \"\";\n    display: block;\n    clear: both;\n  }\n}\n","// 各种颜色主题变量，参考 Google material design\n// https://material.io/guidelines/style/color.html\n// 每个主题颜色包含 10种基本颜色和4种高亮颜色\n\n// 红色\n$red-50: #ffebee;\n$red-100: #ffcdd2;\n$red-200: #ef9a9a;\n$red-300: #e57373;\n$red-400: #ef5350;\n$red-500: #f44336;\n$red-600: #e53935;\n$red-700: #d32f2f;\n$red-800: #c62828;\n$red-900: #b71c1c;\n$red-a-100: #ff8a80;\n$red-a-200: #ff5252;\n$red-a-400: #ff1744;\n$red-a-700: #d50000;\n$red: $red-500;\n\n// 粉色\n$pink-50: #fce4ec;\n$pink-100: #f8bbd0;\n$pink-200: #f48fb1;\n$pink-300: #f06292;\n$pink-400: #ec407a;\n$pink-500: #e91e63;\n$pink-600: #d81b60;\n$pink-700: #c2185b;\n$pink-800: #ad1457;\n$pink-900: #880e4f;\n$pink-a-100: #ff80ab;\n$pink-a-200: #ff4081;\n$pink-a-400: #f50057;\n$pink-a-700: #c51162;\n$pink: $pink-500;\n\n// 紫色\n$purple-50: #f3e5f5;\n$purple-100: #e1bee7;\n$purple-200: #ce93d8;\n$purple-300: #ba68c8;\n$purple-400: #ab47bc;\n$purple-500: #9c27b0;\n$purple-600: #8e24aa;\n$purple-700: #7b1fa2;\n$purple-800: #6a1b9a;\n$purple-900: #4a148c;\n$purple-a-100: #ea80fc;\n$purple-a-200: #e040fb;\n$purple-a-400: #d500f9;\n$purple-a-700: #aa00ff;\n$purple: $purple-500;\n\n// TODO 待补充\n$violet: #6435c9 !default; // 紫罗兰色\n\n// 深紫色\n$deep-purple-50: #ede7f6;\n$deep-purple-100: #d1c4e9;\n$deep-purple-200: #b39ddb;\n$deep-purple-300: #9575cd;\n$deep-purple-400: #7e57c2;\n$deep-purple-500: #673ab7;\n$deep-purple-600: #5e35b1;\n$deep-purple-700: #512da8;\n$deep-purple-800: #4527a0;\n$deep-purple-900: #311b92;\n$deep-purple-a-100: #b388ff;\n$deep-purple-a-200: #7c4dff;\n$deep-purple-a-400: #651fff;\n$deep-purple-a-700: #6200ea;\n$deep-purple: $deep-purple-500;\n\n// 靛蓝色\n$indigo-50: #e8eaf6;\n$indigo-100: #c5cae9;\n$indigo-200: #9fa8da;\n$indigo-300: #7986cb;\n$indigo-400: #5c6bc0;\n$indigo-500: #3f51b5;\n$indigo-600: #3949ab;\n$indigo-700: #303f9f;\n$indigo-800: #283593;\n$indigo-900: #1a237e;\n$indigo-a-100: #8c9eff;\n$indigo-a-200: #536dfe;\n$indigo-a-400: #3d5afe;\n$indigo-a-700: #304ffe;\n$indigo: $indigo-500;\n\n// 蓝色\n$blue-50: #e3f2fd;\n$blue-100: #bbdefb;\n$blue-200: #90caf9;\n$blue-300: #64b5f6;\n$blue-400: #42a5f5;\n$blue-500: #2196f3;\n$blue-600: #1e88e5;\n$blue-700: #1976d2;\n$blue-800: #1565c0;\n$blue-900: #0d47a1;\n$blue-a-100: #82b1ff;\n$blue-a-200: #448aff;\n$blue-a-400: #2979ff;\n$blue-a-700: #2962ff;\n$blue: $blue-500;\n\n// 浅蓝色\n$light-blue-50: #e1f5fe;\n$light-blue-100: #b3e5fc;\n$light-blue-200: #81d4fa;\n$light-blue-300: #4fc3f7;\n$light-blue-400: #29b6f6;\n$light-blue-500: #03a9f4;\n$light-blue-600: #039be5;\n$light-blue-700: #0288d1;\n$light-blue-800: #0277bd;\n$light-blue-900: #01579b;\n$light-blue-a-100: #80d8ff;\n$light-blue-a-200: #40c4ff;\n$light-blue-a-400: #00b0ff;\n$light-blue-a-700: #0091ea;\n$light-blue: $light-blue-500;\n\n// 蓝绿色也叫青色\n$cyan-50: #e0f7fa;\n$cyan-100: #b2ebf2;\n$cyan-200: #80deea;\n$cyan-300: #4dd0e1;\n$cyan-400: #26c6da;\n$cyan-500: #00bcd4;\n$cyan-600: #00acc1;\n$cyan-700: #0097a7;\n$cyan-800: #00838f;\n$cyan-900: #006064;\n$cyan-a-100: #84ffff;\n$cyan-a-200: #18ffff;\n$cyan-a-400: #00e5ff;\n$cyan-a-700: #00b8d4;\n$cyan: $cyan-500;\n\n// 青绿色\n$teal-50: #e0f2f1;\n$teal-100: #b2dfdb;\n$teal-200: #80cbc4;\n$teal-300: #4db6ac;\n$teal-400: #26a69a;\n$teal-500: #009688;\n$teal-600: #00897b;\n$teal-700: #00796b;\n$teal-800: #00695c;\n$teal-900: #004d40;\n$teal-a-100: #a7ffeb;\n$teal-a-200: #64ffda;\n$teal-a-400: #1de9b6;\n$teal-a-700: #00bfa5;\n$teal: $teal-500;\n\n// 绿色\n$green-50: #e8f5e9;\n$green-100: #c8e6c9;\n$green-200: #a5d6a7;\n$green-300: #81c784;\n$green-400: #66bb6a;\n$green-500: #4caf50;\n$green-600: #43a047;\n$green-700: #388e3c;\n$green-800: #2e7d32;\n$green-900: #1b5e20;\n$green-a-100: #b9f6ca;\n$green-a-200: #69f0ae;\n$green-a-400: #00e676;\n$green-a-700: #00c853;\n$green: $green-500;\n\n// 浅绿色\n$light-green-50: #f1f8e9;\n$light-green-100: #dcedc8;\n$light-green-200: #c5e1a5;\n$light-green-300: #aed581;\n$light-green-400: #9ccc65;\n$light-green-500: #8bc34a;\n$light-green-600: #7cb342;\n$light-green-700: #689f38;\n$light-green-800: #558b2f;\n$light-green-900: #33691e;\n$light-green-a-100: #ccff90;\n$light-green-a-200: #b2ff59;\n$light-green-a-400: #76ff03;\n$light-green-a-700: #64dd17;\n$light-green: $light-green-500;\n\n// 绿黄色\n$lime-50: #f9fbe7;\n$lime-100: #f0f4c3;\n$lime-200: #e6ee9c;\n$lime-300: #dce775;\n$lime-400: #d4e157;\n$lime-500: #cddc39;\n$lime-600: #c0ca33;\n$lime-700: #afb42b;\n$lime-800: #9e9d24;\n$lime-900: #827717;\n$lime-a-100: #f4ff81;\n$lime-a-200: #eeff41;\n$lime-a-400: #c6ff00;\n$lime-a-700: #aeea00;\n$lime: $lime-500;\n\n// TODO 待补充\n$olive: #b5cc18 !default; // 橄榄色\n\n// 黄色\n$yellow-50: #fffde7;\n$yellow-100: #fff9c4;\n$yellow-200: #fff59d;\n$yellow-300: #fff176;\n$yellow-400: #ffee58;\n$yellow-500: #ffeb3b;\n$yellow-600: #fdd835;\n$yellow-700: #fbc02d;\n$yellow-800: #f9a825;\n$yellow-900: #f57f17;\n$yellow-a-100: #ffff8d;\n$yellow-a-200: #ffff00;\n$yellow-a-400: #ffea00;\n$yellow-a-700: #ffd600;\n$yellow: $yellow-500;\n\n// 琥珀色\n$amber-50: #fff8e1;\n$amber-100: #ffecb3;\n$amber-200: #ffe082;\n$amber-300: #ffd54f;\n$amber-400: #ffca28;\n$amber-500: #ffc107;\n$amber-600: #ffb300;\n$amber-700: #ffa000;\n$amber-800: #ff8f00;\n$amber-900: #ff6f00;\n$amber-a-100: #ffe57f;\n$amber-a-200: #ffd740;\n$amber-a-400: #ffc400;\n$amber-a-700: #ffab00;\n$amber: $amber-500;\n\n// 橙色\n$orange-50: #fff3e0;\n$orange-100: #ffe0b2;\n$orange-200: #ffcc80;\n$orange-300: #ffb74d;\n$orange-400: #ffa726;\n$orange-500: #ff9800;\n$orange-600: #fb8c00;\n$orange-700: #f57c00;\n$orange-800: #ef6c00;\n$orange-900: #e65100;\n$orange-a-100: #ffd180;\n$orange-a-200: #ffab40;\n$orange-a-400: #ff9100;\n$orange-a-700: #ff6d00;\n$orange: $orange-500;\n\n// 深橙色\n$deep-orange-50: #fbe9e7;\n$deep-orange-100: #ffccbc;\n$deep-orange-200: #ffab91;\n$deep-orange-300: #ff8a65;\n$deep-orange-400: #ff7043;\n$deep-orange-500: #ff5722;\n$deep-orange-600: #f4511e;\n$deep-orange-700: #e64a19;\n$deep-orange-800: #d84315;\n$deep-orange-900: #bf360c;\n$deep-orange-a-100: #ff9e80;\n$deep-orange-a-200: #ff6e40;\n$deep-orange-a-400: #ff3d00;\n$deep-orange-a-700: #dd2c00;\n$deep-orange: $deep-orange-500;\n\n// 棕色\n$brown-50: #efebe9;\n$brown-100: #d7ccc8;\n$brown-200: #bcaaa4;\n$brown-300: #a1887f;\n$brown-400: #8d6e63;\n$brown-500: #795548;\n$brown-600: #6d4c41;\n$brown-700: #5d4037;\n$brown-800: #4e342e;\n$brown-900: #3e2723;\n$brown: $brown-500;\n\n// 灰绿色\n$blue-grey-50: #eceff1;\n$blue-grey-100: #cfd8dc;\n$blue-grey-200: #b0bec5;\n$blue-grey-300: #90a4ae;\n$blue-grey-400: #78909c;\n$blue-grey-500: #607d8b;\n$blue-grey-600: #546e7a;\n$blue-grey-700: #455a64;\n$blue-grey-800: #37474f;\n$blue-grey-900: #263238;\n$blue-grey: $blue-grey-500;\n\n// 灰色\n$grey-50: #fafafa;\n$grey-100: #f5f5f5;\n$grey-200: #eeeeee;\n$grey-300: #e0e0e0;\n$grey-400: #bdbdbd;\n$grey-500: #9e9e9e;\n$grey-600: #757575;\n$grey-700: #616161;\n$grey-800: #424242;\n$grey-900: #212121;\n$grey: $grey-500;\n","// sass-lint:disable-all\n.highlight table td { padding: 5px; }\n.highlight table pre { margin: 0; }\n.highlight .cm {\n  color: #999988;\n  font-style: italic;\n}\n.highlight .cp {\n  color: #999999;\n  font-weight: bold;\n}\n.highlight .c1 {\n  color: #999988;\n  font-style: italic;\n}\n.highlight .cs {\n  color: #999999;\n  font-weight: bold;\n  font-style: italic;\n}\n.highlight .c, .highlight .cd {\n  color: #999988;\n  font-style: italic;\n}\n.highlight .err {\n  color: #a61717;\n  background-color: #e3d2d2;\n}\n.highlight .gd {\n  color: #000000;\n  background-color: #ffdddd;\n}\n.highlight .ge {\n  color: #000000;\n  font-style: italic;\n}\n.highlight .gr {\n  color: #aa0000;\n}\n.highlight .gh {\n  color: #999999;\n}\n.highlight .gi {\n  color: #000000;\n  background-color: #ddffdd;\n}\n.highlight .go {\n  color: #888888;\n}\n.highlight .gp {\n  color: #555555;\n}\n.highlight .gs {\n  font-weight: bold;\n}\n.highlight .gu {\n  color: #aaaaaa;\n}\n.highlight .gt {\n  color: #aa0000;\n}\n.highlight .kc {\n  color: #000000;\n  font-weight: bold;\n}\n.highlight .kd {\n  color: #000000;\n  font-weight: bold;\n}\n.highlight .kn {\n  color: #000000;\n  font-weight: bold;\n}\n.highlight .kp {\n  color: #000000;\n  font-weight: bold;\n}\n.highlight .kr {\n  color: #000000;\n  font-weight: bold;\n}\n.highlight .kt {\n  color: #445588;\n  font-weight: bold;\n}\n.highlight .k, .highlight .kv {\n  color: #000000;\n  font-weight: bold;\n}\n.highlight .mf {\n  color: #009999;\n}\n.highlight .mh {\n  color: #009999;\n}\n.highlight .il {\n  color: #009999;\n}\n.highlight .mi {\n  color: #009999;\n}\n.highlight .mo {\n  color: #009999;\n}\n.highlight .m, .highlight .mb, .highlight .mx {\n  color: #009999;\n}\n.highlight .sb {\n  color: #d14;\n}\n.highlight .sc {\n  color: #d14;\n}\n.highlight .sd {\n  color: #d14;\n}\n.highlight .s2 {\n  color: #d14;\n}\n.highlight .se {\n  color: #d14;\n}\n.highlight .sh {\n  color: #d14;\n}\n.highlight .si {\n  color: #d14;\n}\n.highlight .sx {\n  color: #d14;\n}\n.highlight .sr {\n  color: #009926;\n}\n.highlight .s1 {\n  color: #d14;\n}\n.highlight .ss {\n  color: #990073;\n}\n.highlight .s {\n  color: #d14;\n}\n.highlight .na {\n  color: #008080;\n}\n.highlight .bp {\n  color: #999999;\n}\n.highlight .nb {\n  color: #0086B3;\n}\n.highlight .nc {\n  color: #445588;\n  font-weight: bold;\n}\n.highlight .no {\n  color: #008080;\n}\n.highlight .nd {\n  color: #3c5d5d;\n  font-weight: bold;\n}\n.highlight .ni {\n  color: #800080;\n}\n.highlight .ne {\n  color: #990000;\n  font-weight: bold;\n}\n.highlight .nf {\n  color: #990000;\n  font-weight: bold;\n}\n.highlight .nl {\n  color: #990000;\n  font-weight: bold;\n}\n.highlight .nn {\n  color: #555555;\n}\n.highlight .nt {\n  color: #000080;\n}\n.highlight .vc {\n  color: #008080;\n}\n.highlight .vg {\n  color: #008080;\n}\n.highlight .vi {\n  color: #008080;\n}\n.highlight .nv {\n  color: #008080;\n}\n.highlight .ow {\n  color: #000000;\n  font-weight: bold;\n}\n.highlight .o {\n  color: #000000;\n  font-weight: bold;\n}\n.highlight .w {\n  color: #bbbbbb;\n}\n.highlight {\n  background-color: #f8f8f8;\n}\n","// 自定义 highlight 样式\n@import \"../../../scss/responsive/mixin\";\n@import \"../../../scss/theme/variable\";\n\n.highlight {\n  padding: 1rem;\n  margin: 1rem .5rem;\n  border: 1px solid $theme-primary;\n  -ms-overflow-style: -ms-autohiding-scrollbar;\n  background-color: $grey-200;\n\n  @include media-breakpoint-up(sm) {\n    padding: 2.1rem 1.5rem 1.5rem;\n    margin-left: 0;\n    margin-right: 0;\n  }\n}\n\n.doc-example {\n  .highlight {\n    border-top: 0;\n  }\n}\n\n.highlight pre {\n  padding: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  border: 0;\n  background-color: transparent;\n}\n\n.highlight pre code {\n  font-size: inherit;\n  color: #212121; // Effectively the base text color\n}\n","// 页面底部样式\n\n@import \"../../../scss/theme/variable\";\n\n.footer-assist {\n  // 此处的数值等于 footer 的高度 + 预留的间距\n  padding-top: 4.5rem;\n}\n\n.footer {\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  padding: 1rem 0;\n  border-top: 1px solid $grey-300;\n  color: map-get(map-get($theme-text-colors, dark), secondary);\n}\n\n","// 定义色彩卡样式\n.doc-color-group {\n  color: #fff;\n}\n\n.doc-primary-color {\n  margin-bottom: .5rem;\n}\n\n.doc-color-title {\n  padding: .75rem 1rem 2rem;\n}\n\n.doc-color {\n  display: flex;\n  justify-content: space-between;\n  padding: .75rem 1rem;\n}\n\n.doc-color-dark {\n  color: rgba(0, 0, 0, .87);\n}\n\n.doc-color-a {\n  margin-top: .5rem;\n}\n\n.doc-color-panel {\n  padding-left: 10px;\n  padding-right: 10px;\n  margin-bottom: 3rem;\n  > .col {\n    padding-left: 0;\n    padding-right: 0;\n  }\n}\n"]}
=======
{"version":3,"sources":["docs/_catalogue.scss","common/_header.scss","docs.css","../../../scss/theme/_mixin.scss","../../../scss/theme/_variable.scss","common/_footer.scss","common/_menu.scss","common/_catalogue.scss","docs/_main.scss","docs/_document.scss","../../../scss/animation/_mixin.scss","../../../scss/animation/_variable.scss","docs/_example.scss","docs/_highlight.scss","docs/_highlight-custom.scss","docs/_color-palette.scss"],"names":[],"mappings":"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","file":"../docs.css","sourcesContent":["// 目录和内容\n@import \"../../../../scss/responsive/mixin\";\n@import \"../../../../scss/theme/mixin\";\n@import \"../../../../scss/animation/mixin\";\n\n.doc-catalogue-menu:hover {\n  .doc-catalogue-panel {\n    transform: translate(0, 0);\n  }\n}\n\n.doc-catalogue-panel {\n  position: fixed;\n  top: 64px;\n  right: 0;\n  z-index: 1000;\n  padding-top: .5rem;\n  border-bottom: 1px solid;\n  border-left: 1px solid;\n  overflow: hidden;\n  background-color: #fff;\n  transform: translate(200%, 0);\n  @include theme-prop(border-color, secondary-lightest);\n  @include animation-transition(transform);\n}\n\n.doc-catalogue-icon {\n  position: fixed;\n  top: 4.5rem;\n  right: .5rem;\n  z-index: 1000;\n  @include theme-prop(background-color, hint-on-dark);\n  cursor: pointer;\n\n  .icon-pure-catalogue {\n    @include theme-prop(color, secondary);\n  }\n}\n\n.doc-catalogue-menu-right {\n  display: none;\n}\n\n.doc-content {\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n\n  > h1 {\n    font-size: 1.75rem;\n  }\n\n  > h2 {\n    font-size: 1.5rem;\n  }\n\n  > h3 {\n    font-size: 1.25rem;\n  }\n\n  > h3 {\n    font-size: 1.125rem;\n  }\n}\n\n@media screen and (min-width: 1600px) {\n  .doc-catalogue-menu {\n    display: none;\n  }\n  .doc-main {\n    display: flex;\n  }\n  .doc-content {\n    flex: 0 0 79.1666666667%;\n    max-width: 79.1666666667%;\n  }\n\n  .doc-catalogue-menu-right {\n    display: block;\n    flex: 0 0 20.8333333333%;\n    max-width: 20.8333333333%;\n    margin-left: 1rem;\n    border-left: 1px solid $grey-color-300;\n  }\n\n  .doc-catalogue-panel {\n    position: static;\n    right: auto;\n    margin-top: 1rem;\n    border: 0;\n    transform: translate(0, 0);\n  }\n\n  .doc-catalogue-header {\n    &::before {\n      content: '目录';\n      padding-left: .5rem;\n      color: #999;\n    }\n  }\n}\n\n.doc-catalogue {\n  .menu-title {\n    position: relative;\n    min-width: 200px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n\n    &:hover::after,\n    &.active::after {\n      content: '';\n      position: absolute;\n      top: 25%;\n      bottom: 20%;\n      left: 0;\n      border-left: 1px solid;\n      @include theme-prop(border-left-color, secondary);\n    }\n    &.active::after {\n      border-left-width: 2px;\n    }\n  }\n}\n","@import \"../../../../scss/theme/mixin\";\n\n.drawer-toggle {\n  .icon-pure-menu {\n    @include theme-prop(color, secondary-on-dark);\n  }\n  &:hover {\n    .icon-pure-menu {\n      @include theme-prop(color, primary-on-dark);\n    }\n  }\n}\n","@charset \"UTF-8\";\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $theme-property-values (_variables.scss).\n */\n.drawer-toggle .icon-pure-menu {\n  color: rgba(255, 255, 255, 0.7);\n  color: var(--theme-light-secondary, rgba(255, 255, 255, 0.7));\n}\n\n.drawer-toggle:hover .icon-pure-menu {\n  color: #ffffff;\n  color: var(--theme-light-primary, #ffffff);\n}\n\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n.footer-assist {\n  padding-top: 4.5rem;\n}\n\n.footer {\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  padding: 1rem 0;\n  border-top: 1px solid rgba(0, 0, 0, 0.12);\n  color: rgba(0, 0, 0, 0.54);\n}\n\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $theme-property-values (_variables.scss).\n */\n.perfect-menu.menu, .perfect-menu .menu {\n  margin-left: 0;\n}\n\n.perfect-menu .menu-title {\n  padding: .5rem 1rem;\n}\n\n.perfect-menu .menu-sub-title:hover {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n}\n\n.perfect-menu .menu-sub-title.active {\n  border-right: 3px solid;\n  color: #1565c0;\n  color: var(--theme-primary-darker, #1565c0);\n  background-color: #e3f2fd;\n  background-color: var(--theme-primary-lightest, #e3f2fd);\n}\n\n@supports (background-color: color(green a(10%))) {\n  .perfect-menu .menu-sub-title.active {\n    background-color: color(var(--theme-primary-lightest) a(80%));\n  }\n}\n\n.catalogue-counter {\n  counter-reset: outline1;\n}\n\n.catalogue-counter > h1::before, .catalogue-counter > h2::before, .catalogue-counter > h3::before, .catalogue-counter > h4::before, .catalogue-counter > h5::before, .catalogue-counter > h6::before {\n  margin-right: .5rem;\n}\n\n.catalogue-counter > h1 {\n  counter-reset: outline2;\n}\n\n.catalogue-counter > h1::before {\n  content: counter(outline1, decimal) \". \";\n  counter-increment: outline1;\n}\n\n.catalogue-counter > h1 ~ h2 {\n  counter-reset: outline3;\n}\n\n.catalogue-counter > h1 ~ h2::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\";\n  counter-increment: outline2;\n}\n\n.catalogue-counter > h1 ~ h2 ~ h3 {\n  counter-reset: outline4;\n}\n\n.catalogue-counter > h1 ~ h2 ~ h3::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\";\n  counter-increment: outline3;\n}\n\n.catalogue-counter > h1 ~ h2 ~ h3 ~ h4 {\n  counter-reset: outline5;\n}\n\n.catalogue-counter > h1 ~ h2 ~ h3 ~ h4::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\";\n  counter-increment: outline4;\n}\n\n.catalogue-counter > h1 ~ h2 ~ h3 ~ h4 ~ h5 {\n  counter-reset: outline6;\n}\n\n.catalogue-counter > h1 ~ h2 ~ h3 ~ h4 ~ h5::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\" counter(outline5, decimal) \".\";\n  counter-increment: outline5;\n}\n\n.catalogue-counter > h1 ~ h2 ~ h3 ~ h4 ~ h5 ~ h6::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\" counter(outline5, decimal) \".\" counter(outline6, decimal) \".\";\n  counter-increment: outline6;\n}\n\n.catalogue-counter > h2 {\n  counter-reset: outline2;\n}\n\n.catalogue-counter > h2::before {\n  content: counter(outline1, decimal) \".\";\n  counter-increment: outline1;\n}\n\n.catalogue-counter > h2 ~ h3 {\n  counter-reset: outline3;\n}\n\n.catalogue-counter > h2 ~ h3::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\";\n  counter-increment: outline2;\n}\n\n.catalogue-counter > h2 ~ h3 ~ h4 {\n  counter-reset: outline4;\n}\n\n.catalogue-counter > h2 ~ h3 ~ h4::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\";\n  counter-increment: outline3;\n}\n\n.catalogue-counter > h2 ~ h3 ~ h4 ~ h5 {\n  counter-reset: outline5;\n}\n\n.catalogue-counter > h2 ~ h3 ~ h4 ~ h5::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\";\n  counter-increment: outline4;\n}\n\n.catalogue-counter > h2 ~ h3 ~ h4 ~ h5 ~ h6::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\" counter(outline5, decimal) \".\";\n  counter-increment: outline5;\n}\n\n.catalogue-counter > h3 {\n  counter-reset: outline2;\n}\n\n.catalogue-counter > h3::before {\n  content: counter(outline1, decimal) \".\";\n  counter-increment: outline1;\n}\n\n.catalogue-counter > h3 ~ h4 {\n  counter-reset: outline3;\n}\n\n.catalogue-counter > h3 ~ h4::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\";\n  counter-increment: outline2;\n}\n\n.catalogue-counter > h3 ~ h4 ~ h5 {\n  counter-reset: outline4;\n}\n\n.catalogue-counter > h3 ~ h4 ~ h5::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\";\n  counter-increment: outline3;\n}\n\n.catalogue-counter > h3 ~ h4 ~ h5 ~ h6::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\";\n  counter-increment: outline4;\n}\n\nhtml {\n  position: relative;\n}\n\nhtml, body {\n  height: auto;\n  min-height: 100%;\n}\n\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $theme-property-values (_variables.scss).\n */\n.drawer-content {\n  overflow: hidden;\n}\n\n.doc-content-header {\n  padding-right: 4rem;\n}\n\n.doc-content-header a {\n  margin-right: 1rem;\n}\n\n.doc-content-header a:last-child {\n  margin-right: 0;\n}\n\n.doc-main {\n  min-height: 500px;\n  padding: 0 1rem;\n}\n\n.doc-main p, .doc-main li {\n  line-height: 2;\n}\n\n.doc-main p {\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n}\n\n.doc-main h1, .doc-main h2, .doc-main h3 {\n  margin-top: 2rem;\n}\n\n.doc-table {\n  width: 95%;\n  margin-bottom: 1rem;\n}\n\n.doc-table tbody > tr:nth-of-type(odd) {\n  background-color: #f3e5f5;\n  background-color: var(--theme-secondary-lightest, #f3e5f5);\n}\n\n.doc-table th {\n  border-bottom: 1px solid;\n  border-bottom-color: #e1bee7;\n  border-bottom-color: var(--theme-secondary-lighter, #e1bee7);\n}\n\n.doc-table th,\n.doc-table td {\n  padding: .5rem 1rem;\n  border-top: 1px solid;\n  border-left: 1px solid;\n  border-color: #e1bee7;\n  border-color: var(--theme-secondary-lighter, #e1bee7);\n}\n\n.doc-table th:last-child,\n.doc-table td:last-child {\n  border-right: 1px solid;\n  border-color: #e1bee7;\n  border-color: var(--theme-secondary-lighter, #e1bee7);\n}\n\n.doc-table tr:last-child > td {\n  border-bottom: 1px solid;\n  border-color: #e1bee7;\n  border-color: var(--theme-secondary-lighter, #e1bee7);\n}\n\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $theme-property-values (_variables.scss).\n */\n.doc-catalogue-menu:hover .doc-catalogue-panel {\n  transform: translate(0, 0);\n}\n\n.doc-catalogue-panel {\n  position: fixed;\n  top: 64px;\n  right: 0;\n  z-index: 1000;\n  padding-top: .5rem;\n  border-bottom: 1px solid;\n  border-left: 1px solid;\n  overflow: hidden;\n  background-color: #fff;\n  transform: translate(200%, 0);\n  border-color: #f3e5f5;\n  border-color: var(--theme-secondary-lightest, #f3e5f5);\n  transition: transform 120ms cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.doc-catalogue-icon {\n  position: fixed;\n  top: 4.5rem;\n  right: .5rem;\n  z-index: 1000;\n  background-color: rgba(255, 255, 255, 0.5);\n  background-color: var(--theme-light-hint, rgba(255, 255, 255, 0.5));\n  cursor: pointer;\n}\n\n.doc-catalogue-icon .icon-pure-catalogue {\n  color: #e040fb;\n  color: var(--theme-secondary, #e040fb);\n}\n\n.doc-catalogue-menu-right {\n  display: none;\n}\n\n.doc-content {\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n}\n\n.doc-content > h1 {\n  font-size: 1.75rem;\n}\n\n.doc-content > h2 {\n  font-size: 1.5rem;\n}\n\n.doc-content > h3 {\n  font-size: 1.25rem;\n}\n\n.doc-content > h3 {\n  font-size: 1.125rem;\n}\n\n@media screen and (min-width: 1600px) {\n  .doc-catalogue-menu {\n    display: none;\n  }\n  .doc-main {\n    display: flex;\n  }\n  .doc-content {\n    flex: 0 0 79.1666666667%;\n    max-width: 79.1666666667%;\n  }\n  .doc-catalogue-menu-right {\n    display: block;\n    flex: 0 0 20.8333333333%;\n    max-width: 20.8333333333%;\n    margin-left: 1rem;\n    border-left: 1px solid rgba(0, 0, 0, 0.12);\n  }\n  .doc-catalogue-panel {\n    position: static;\n    right: auto;\n    margin-top: 1rem;\n    border: 0;\n    transform: translate(0, 0);\n  }\n  .doc-catalogue-header::before {\n    content: '目录';\n    padding-left: .5rem;\n    color: #999;\n  }\n}\n\n.doc-catalogue .menu-title {\n  position: relative;\n  min-width: 200px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.doc-catalogue .menu-title:hover::after, .doc-catalogue .menu-title.active::after {\n  content: '';\n  position: absolute;\n  top: 25%;\n  bottom: 20%;\n  left: 0;\n  border-left: 1px solid;\n  border-left-color: #e040fb;\n  border-left-color: var(--theme-secondary, #e040fb);\n}\n\n.doc-catalogue .menu-title.active::after {\n  border-left-width: 2px;\n}\n\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $theme-property-values (_variables.scss).\n */\n.doc-example {\n  position: relative;\n  margin-bottom: 1rem;\n  border: 1px solid;\n  border-color: #e1bee7;\n  border-color: var(--theme-secondary-lighter, #e1bee7);\n  border-radius: 4px;\n  transition: all .2s;\n}\n\n.doc-example:hover .icon-pure-code,\n.doc-example:hover .icon-pure-code-expand {\n  color: #e040fb;\n  color: var(--theme-secondary, #e040fb);\n}\n\n.doc-example-render {\n  padding: 1rem 1rem 0;\n}\n\n.doc-example-render p:last-of-type {\n  margin-bottom: 0;\n}\n\n.doc-example-expand {\n  position: relative;\n  display: flex;\n  justify-content: flex-end;\n  margin: .5rem 2rem;\n}\n\n.icon-pure-code,\n.icon-pure-code-expand {\n  transform: rotate(-45deg) scale(0.8);\n  color: #e1bee7;\n  color: var(--theme-secondary-lighter, #e1bee7);\n}\n\n.doc-code-icon {\n  width: 2.5rem;\n  cursor: pointer;\n}\n\n.doc-code-icon:hover .icon-pure-code,\n.doc-code-icon:hover .icon-pure-code-expand {\n  color: #e040fb;\n  color: var(--theme-secondary, #e040fb);\n}\n\n.doc-code-icon:hover + .tooltip {\n  top: -3rem;\n  right: -.8rem;\n  display: block;\n  opacity: .8;\n}\n\n.doc-example-highlight.highlight {\n  display: none;\n  border: 0;\n  border-top: 1px dashed;\n  border-top-color: #e1bee7;\n  border-top-color: var(--theme-secondary-lighter, #e1bee7);\n  transition: display 120ms cubic-bezier(0.4, 0, 0.2, 1);\n}\n\n.doc-code-copy {\n  position: absolute;\n  top: 1rem;\n  right: 3rem;\n  display: none;\n}\n\n.doc-code-copy .icon-pure-copy {\n  cursor: pointer;\n  transform: scale(0.6);\n  color: #e1bee7;\n  color: var(--theme-secondary-lighter, #e1bee7);\n}\n\n.doc-code-copy:hover .icon-pure-copy {\n  color: #e040fb;\n  color: var(--theme-secondary, #e040fb);\n}\n\n.doc-code-copy:hover + .tooltip {\n  top: -2rem;\n  right: 1.5rem;\n  display: block;\n  opacity: .8;\n}\n\n.doc-example-highlight {\n  position: relative;\n}\n\n.doc-example-highlight:hover .doc-code-copy {\n  display: block;\n}\n\n.doc-example-highlight:hover .doc-code-copy .icon-pure-copy {\n  color: #e040fb;\n  color: var(--theme-secondary, #e040fb);\n}\n\n.doc-example-row .row + .row {\n  margin-top: 1rem;\n}\n\n.doc-example-row .row .row {\n  border: 1px solid;\n}\n\n.doc-example-row [class*=\"col\"] {\n  padding-top: .5rem;\n  padding-bottom: .5rem;\n  color: #fff;\n  background-color: #64b5f6;\n  background-color: var(--theme-primary-light, #64b5f6);\n  text-align: center;\n}\n\n.doc-example-row [class*=\"col\"]:nth-of-type(2n) {\n  background-color: #2196f3;\n  background-color: var(--theme-primary, #2196f3);\n}\n\n.doc-example-row-flex-cols .row {\n  min-height: 5rem;\n  background-color: #e3f2fd;\n  background-color: var(--theme-primary-lightest, #e3f2fd);\n}\n\n.doc-example-row-gutters .no-gutters {\n  margin-top: 1rem;\n}\n\n.doc-example-row-gutters [class^=\"col\"] > div {\n  background-color: #ea80fc;\n  background-color: var(--theme-secondary-light, #ea80fc);\n}\n\n.highlight table td {\n  padding: 5px;\n}\n\n.highlight table pre {\n  margin: 0;\n}\n\n.highlight .cm {\n  color: #999988;\n  font-style: italic;\n}\n\n.highlight .cp {\n  color: #999999;\n  font-weight: bold;\n}\n\n.highlight .c1 {\n  color: #999988;\n  font-style: italic;\n}\n\n.highlight .cs {\n  color: #999999;\n  font-weight: bold;\n  font-style: italic;\n}\n\n.highlight .c, .highlight .cd {\n  color: #999988;\n  font-style: italic;\n}\n\n.highlight .err {\n  color: #a61717;\n  background-color: #e3d2d2;\n}\n\n.highlight .gd {\n  color: #000000;\n  background-color: #ffdddd;\n}\n\n.highlight .ge {\n  color: #000000;\n  font-style: italic;\n}\n\n.highlight .gr {\n  color: #aa0000;\n}\n\n.highlight .gh {\n  color: #999999;\n}\n\n.highlight .gi {\n  color: #000000;\n  background-color: #ddffdd;\n}\n\n.highlight .go {\n  color: #888888;\n}\n\n.highlight .gp {\n  color: #555555;\n}\n\n.highlight .gs {\n  font-weight: bold;\n}\n\n.highlight .gu {\n  color: #aaaaaa;\n}\n\n.highlight .gt {\n  color: #aa0000;\n}\n\n.highlight .kc {\n  color: #000000;\n  font-weight: bold;\n}\n\n.highlight .kd {\n  color: #000000;\n  font-weight: bold;\n}\n\n.highlight .kn {\n  color: #000000;\n  font-weight: bold;\n}\n\n.highlight .kp {\n  color: #000000;\n  font-weight: bold;\n}\n\n.highlight .kr {\n  color: #000000;\n  font-weight: bold;\n}\n\n.highlight .kt {\n  color: #445588;\n  font-weight: bold;\n}\n\n.highlight .k, .highlight .kv {\n  color: #000000;\n  font-weight: bold;\n}\n\n.highlight .mf {\n  color: #009999;\n}\n\n.highlight .mh {\n  color: #009999;\n}\n\n.highlight .il {\n  color: #009999;\n}\n\n.highlight .mi {\n  color: #009999;\n}\n\n.highlight .mo {\n  color: #009999;\n}\n\n.highlight .m, .highlight .mb, .highlight .mx {\n  color: #009999;\n}\n\n.highlight .sb {\n  color: #d14;\n}\n\n.highlight .sc {\n  color: #d14;\n}\n\n.highlight .sd {\n  color: #d14;\n}\n\n.highlight .s2 {\n  color: #d14;\n}\n\n.highlight .se {\n  color: #d14;\n}\n\n.highlight .sh {\n  color: #d14;\n}\n\n.highlight .si {\n  color: #d14;\n}\n\n.highlight .sx {\n  color: #d14;\n}\n\n.highlight .sr {\n  color: #009926;\n}\n\n.highlight .s1 {\n  color: #d14;\n}\n\n.highlight .ss {\n  color: #990073;\n}\n\n.highlight .s {\n  color: #d14;\n}\n\n.highlight .na {\n  color: #008080;\n}\n\n.highlight .bp {\n  color: #999999;\n}\n\n.highlight .nb {\n  color: #0086B3;\n}\n\n.highlight .nc {\n  color: #445588;\n  font-weight: bold;\n}\n\n.highlight .no {\n  color: #008080;\n}\n\n.highlight .nd {\n  color: #3c5d5d;\n  font-weight: bold;\n}\n\n.highlight .ni {\n  color: #800080;\n}\n\n.highlight .ne {\n  color: #990000;\n  font-weight: bold;\n}\n\n.highlight .nf {\n  color: #990000;\n  font-weight: bold;\n}\n\n.highlight .nl {\n  color: #990000;\n  font-weight: bold;\n}\n\n.highlight .nn {\n  color: #555555;\n}\n\n.highlight .nt {\n  color: #000080;\n}\n\n.highlight .vc {\n  color: #008080;\n}\n\n.highlight .vg {\n  color: #008080;\n}\n\n.highlight .vi {\n  color: #008080;\n}\n\n.highlight .nv {\n  color: #008080;\n}\n\n.highlight .ow {\n  color: #000000;\n  font-weight: bold;\n}\n\n.highlight .o {\n  color: #000000;\n  font-weight: bold;\n}\n\n.highlight .w {\n  color: #bbbbbb;\n}\n\n.highlight {\n  background-color: #f8f8f8;\n}\n\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $theme-property-values (_variables.scss).\n */\n.highlighter-rouge:hover {\n  position: relative;\n}\n\n.highlighter-rouge:hover .doc-code-copy {\n  display: block;\n}\n\n.highlight {\n  padding: 1rem;\n  border: 1px solid;\n  border-color: #e1bee7;\n  border-color: var(--theme-secondary-lighter, #e1bee7);\n  -ms-overflow-style: -ms-autohiding-scrollbar;\n  background-color: transparent;\n}\n\n.highlight pre {\n  padding: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  border: 0;\n  background-color: transparent;\n}\n\n.highlight pre code {\n  font-size: inherit;\n}\n\n.doc-color-group {\n  color: #fff;\n}\n\n.doc-primary-color {\n  margin-bottom: .5rem;\n}\n\n.doc-color-title {\n  padding: .75rem 1rem 2rem;\n}\n\n.doc-color {\n  display: flex;\n  justify-content: space-between;\n  padding: .75rem 1rem;\n}\n\n.doc-color-dark {\n  color: rgba(0, 0, 0, 0.87);\n}\n\n.doc-color-a {\n  margin-top: .5rem;\n}\n\n.doc-color-panel {\n  padding-left: 10px;\n  padding-right: 10px;\n  margin-bottom: 3rem;\n}\n\n.doc-color-panel > .col {\n  padding-left: 0;\n  padding-right: 0;\n}\n","// theme mixin\n@import \"./variable\";\n@import \"./function\";\n\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $theme-property-values (_variables.scss).\n */\n\n// 给属性 $property 设置颜色 $style 值\n// 属性 $property 一般用在 color background-color border-color 等，也可用在任何可以设置颜色值的属性上\n// $style 应该是 $theme-property-values 中某个 key\n// 该 mixin 主要用来设置主题颜色值，并且设置了主题 css 变量值\n// 用户通过修改 css 变量值可以动态的修改整个主题值，比如在 body 上修改 css 变量值\n@mixin theme-color-prop($property, $style, $important) {\n  @if $important {\n    #{$property}: map-get($theme-property-values, $style) !important;\n    #{$property}: var(--theme-#{$style}, map-get($theme-property-values, $style)) !important;\n  } @else {\n    #{$property}: map-get($theme-property-values, $style);\n    #{$property}: var(--theme-#{$style}, map-get($theme-property-values, $style));\n  }\n}\n\n// 用来设置主题色对应的对比色调值，浅色还是深色\n// $style 应该是 $theme-tone-property-values 中某个 key\n// 该 mixin 除了设置了对比色调值，还设置了对应的 css 变量值\n@mixin theme-tone-prop($property, $style, $important) {\n  // 根据 $style 返回变量，主要是 light 或 dark 变量\n  $theme-var: theme-tone-var($style);\n  @if $important {\n    #{$property}: map-get($theme-tone-property-values, $style) !important;\n    #{$property}: var(--theme-#{$theme-var}, map-get($theme-tone-property-values, $style)) !important;\n  } @else {\n    #{$property}: map-get($theme-tone-property-values, $style);\n    #{$property}: var(--theme-#{$theme-var}, map-get($theme-tone-property-values, $style));\n  }\n}\n\n// 糅合 theme-color-prop 和 theme-tone-prop\n// 如果 $style 是颜色值，则直接设置颜色\n@mixin theme-prop($property, $style, $important: false) {\n  @if type-of($style) == \"color\" {\n    @if $important {\n      #{$property}: $style !important;\n    } @else {\n      #{$property}: $style;\n    }\n  } @else {\n    $color: map-get($theme-property-values, $style);\n    @if ($color) {\n      @include theme-color-prop($property, $style, $important);\n    } @else {\n      $color: map-get($theme-tone-property-values, $style);\n      @if ($color) {\n        @include theme-tone-prop($property, $style, $important);\n      } @else {\n        // 用辅助颜色来设置\n        $color: map-get($theme-assist-colors, $style);\n        @if ($color) {\n          @include theme-assist($property, $style);\n        } @else {\n          @error \"无效的主题属性值，#{$style} 必须是以下的某一 key #{map-keys($theme-property-values)}, #{map-keys($theme-tone-property-values)}\";\n        }\n      }\n    }\n  }\n}\n\n// 通过设置前后景来定制主题，该 mixin 只处理简单的 color 和 background-color ，对于更复制的需要组件单独定义\n// $style 指 $theme-property-values 或 $theme-assist-colors 中属性值\n// $fore true 指前景，false 指背景，默认 true\n@mixin theme($style, $fore: true) {\n  $themes: $theme-property-values;\n  $themes: map-merge($theme-assist-colors, $themes);\n  $color: map-get($themes, $style);\n\n  @if ($color == null) {\n    @error \"无效的主题属性值，#{$style} 必须是以下的某一 key #{map-keys($theme-property-values)}, #{map-keys($theme-assist-colors)}\";\n  }\n\n  // 色调，判断是深色还是浅色\n  $tone: theme-light-or-dark($color);\n\n  @if ($fore) {\n    color: $color;\n    color: var(--theme-#{$style}, $color);\n    background-color: map-get($theme-tone-property-values, primary-on-#{$tone});\n    background-color: var(--theme-#{$style}, map-get($theme-tone-property-values, primary-on-#{$tone}));\n  } @else {\n    color: map-get($theme-tone-property-values, primary-on-#{$tone});\n    color: var(--theme-#{$style}, map-get($theme-tone-property-values, primary-on-#{$tone}));\n    background-color: $color;\n    background-color: var(--theme-#{$style}, $color);\n  }\n}\n\n// 设置辅助颜色 mixin\n// 根据给定的 $style ($theme-assist-colors 中的 key) 和 $opacity 设置颜色\n@mixin theme-assist($property, $style, $opacity: 1) {\n  @if type-of($style) == \"color\" {\n    #{$property}: $style;\n  } @else {\n    $color: map-get($theme-assist-colors, $style);\n\n    @if ($property == \"backgroud-color\" and $opacity != 1) {\n      // 变量 --theme-#{$style} 在 theme.scss 中定义\n      $css-var: var(--theme-#{$style}, $color);\n      background-color: rgba($color, $opacity);\n\n      // 可以动态的设置颜色透明度，属于 CSS 4 color 范畴，目前浏览器支持的不是很好\n      // 可以用 rgba 来代替，但只能静态设置，不可以随着颜色和透明度的变化动态设置\n      // https://drafts.csswg.org/css-color/#modifying-colors\n      @supports (background-color: color(green a(10%))) {\n        background-color: color(#{$css-var} a(#{percentage($opacity)}));\n      }\n    } @else {\n      // 也可以使用 alpha($color); 区别是 function alpha 也可以处理 the proprietary Microsoft `alpha(opacity=20)\n      // 而 function opacity 只支持颜色值，如果不是颜色值则报错\n      $alpha: opacity($color);\n      @if ($alpha != 1) {\n        #{$property}: $color;\n      } @else {\n        #{$property}: rgba($color, $opacity);\n      }\n    }\n\n    // 因为不支持以下写法，所以只处理 $opacity == 1 的情况\n    // #{$property}: rgba(var(--theme-#{$style}, $color), $opacity);\n    @if ($opacity == 1) {\n      #{$property}: var(--theme-#{$style}, $color);\n    }\n  }\n}\n\n// 设置主题对应的背景和前景颜色 class\n// 如果 $tone 设为 true，则会给出对应的前景或背景对比颜色色调值（深色或浅色），\n// 这样可以突出对比度，方便阅读，在需要的地方可以调用该 mixin ，并且参数 $tone 设为 true 即可\n@mixin theme-classes($tone: false) {\n  // 设置 primary 和 secondary 以及浅色和深色背景颜色值\n  // .theme-primary-bg {background-color: #2196f3; background-color: var(--theme-primary, #2196f3);}\n  @each $style in map-keys($theme-property-values) {\n    @if $style == \"background\" {\n      // 背景色，用在背景上\n      // .theme-background {background-color: #fff; background-color: var(--theme-background, #fff);}\n      .theme-background {\n        @include theme-prop(background-color, background, true);\n        @if ($tone) {\n          @include theme-prop(color, primary-on-background, true);\n        }\n      }\n    } @else {\n      .theme-#{$style}-bg {\n        @include theme-prop(background-color, $style, true);\n        @if ($tone) {\n          @include theme-prop(color, primary-on-#{$style}, true);\n        }\n      }\n    }\n  }\n\n  // 通过添加该样式值，改变文本主题前景颜色值，对于主题色调($theme-tone-property-values)，不单独设置\n  // .theme-primary {color: #2196f3; color: var(--theme-primary, #2196f3);}\n  @each $style in map-keys($theme-property-values) {\n    @if $style != \"background\" {\n      .theme-#{$style} {\n        @include theme-prop(color, $style, true);\n        @if ($tone) {\n          @include theme-prop(background-color, primary-on-#{$style}, true);\n        }\n      }\n    }\n  }\n}\n\n// 设置辅助颜色对应的背景和前景颜色 class\n// 如果 $tone 设为 true，则会给出对应的前景或背景对比颜色色调值（深色或浅色），\n// 这样可以突出对比度，方便阅读，在需要的地方可以调用该 mixin ，并且参数 $tone 设为 true 即可\n@mixin theme-assist-classes($tone: false) {\n  // 辅助颜色背景色\n  // .theme-success-bg {background-color: #4caf50; background-color: var(--theme-success, #4caf50);}\n  @each $theme, $color in $theme-assist-colors {\n    .theme-#{$theme}-bg {\n      background-color: $color !important;\n      background-color: var(--theme-#{$theme}, $color) !important;\n      @if ($tone) {\n        $light-or-dark: theme-light-or-dark($color);\n        $tone-color: map-get(map-get($theme-text-colors, $light-or-dark), primary);\n        color: $tone-color !important;\n      }\n    }\n  }\n\n  // 辅助颜色前景色\n  // .theme-success {color: #4caf50; color: var(--theme-success, #4caf50);}\n  @each $theme, $color in $theme-assist-colors {\n    .theme-#{$theme} {\n      color: $color !important;\n      color: var(--theme-#{$theme}, $color) !important;\n      @if ($tone) {\n        $light-or-dark: theme-light-or-dark($color);\n        $tone-color: map-get(map-get($theme-text-colors, $light-or-dark), primary);\n        background-color: $tone-color !important;\n      }\n    }\n  }\n}\n\n// 设置灰度颜色对应的背景和前景颜色 class\n// 如果 $tone 设为 true，则会给出对应的前景或背景对比颜色色调值（深色或浅色），\n// 这样可以突出对比度，方便阅读，在需要的地方可以调用该 mixin ，并且参数 $tone 设为 true 即可\n@mixin theme-grey-classes($tone: false) {\n  // 灰度颜色前景-背景颜色值\n  @each $theme, $color in $greys {\n    .theme-grey-#{$theme} {\n      color: $color !important;\n      @if ($tone) {\n        $light-or-dark: theme-light-or-dark($color);\n        $tone-color: map-get(map-get($theme-text-colors, $light-or-dark), primary);\n        background-color: $tone-color !important;\n      }\n    }\n    .theme-grey-bg-#{$theme} {\n      background-color: $color !important;\n      @if ($tone) {\n        $light-or-dark: theme-light-or-dark($color);\n        $tone-color: map-get(map-get($theme-text-colors, $light-or-dark), primary);\n        color: $tone-color !important;\n      }\n    }\n  }\n}\n","// 自定义主题颜色\n@import \"./color_palette\";\n@import \"../base/variables/options\";\n@import \"./function\";\n\n// 定义颜色透明度\n$alpha: .16 !default;\n\n// 主题颜色，换肤一般改变这三个基本颜色即可\n// 这三种基本颜色主题，会用在所有 CSS 组件上，\n$theme-primary: #2196f3 !default; // 主颜色，使用蓝色 $blue-500 #2196f3\n$theme-secondary: #e040fb !default; // 次颜色，也叫强调(accent)颜色，使用紫色 $purple-a-200 #e040fb\n$theme-background: #fff !default; // 背景颜色，默认白色\n\n// 主题颜色浅色\n$theme-primary-light: #64b5f6 !default; // 取 $blue-300\n$theme-secondary-light: #ea80fc !default; // 取 $purple-a-100\n\n// 主题颜色更浅色\n$theme-primary-lighter: #bbdefb !default; // 取 $blue-100\n$theme-secondary-lighter: #e1bee7 !default; // 取 $purple-100\n\n// 主题颜色最浅色\n$theme-primary-lightest: #e3f2fd !default; // 取 $blue-50\n$theme-secondary-lightest: #f3e5f5 !default; // 取 $purple-50\n\n// 主题颜色深色\n$theme-primary-dark: #1976d2 !default; // 取 $blue-700\n$theme-secondary-dark: #d500f9 !default; // 取 $purple-a-400\n\n// 主题颜色更深色\n$theme-primary-darker: #1565c0 !default; // 取 $blue-800\n$theme-secondary-darker: #aa00ff !default; // 取 $purple-a-700\n\n// 主题颜色最深色\n$theme-primary-darkest: #0d47a1 !default; // 取 $blue-900\n$theme-secondary-darkest: #4a148c !default; // 取 $purple-900\n\n// 主题颜色透明色，有的地方需要设置透明的背景色，这时可以使用该变量，比如波纹组件中\n// 如果浏览器支持了 CSS module，我们可以动态的修改 color 值，直接使用 $theme-primary 加透明参数值即可，只是目前浏览器还不支持。\n// 关于 CSS Color Level 4 提供了大量关于 Color 的处理，只是好多还没有实现，未来这些功能都实现后，CSS Color 的处理将变得更方便，更灵活，期待中......\n// https://www.w3.org/TR/2016/WD-css-color-4-20160705/\n$theme-primary-alpha: rgba($theme-primary, $alpha) !default;\n$theme-secondary-alpha: rgba($theme-secondary, $alpha) !default;\n\n// 浅色或深色色调，给出基本颜色的对比色调， light or dark\n$theme-primary-tone: theme-light-or-dark($theme-primary);\n$theme-secondary-tone: theme-light-or-dark($theme-secondary);\n\n// 主题颜色浅色对比色调\n$theme-primary-light-tone: theme-light-or-dark($theme-primary-light);\n$theme-secondary-light-tone: theme-light-or-dark($theme-secondary-light);\n\n// 主题颜色更浅色对比色调\n$theme-primary-lighter-tone: theme-light-or-dark($theme-primary-lighter);\n$theme-secondary-lighter-tone: theme-light-or-dark($theme-secondary-lighter);\n\n// 主题颜色最浅色对比色调\n$theme-primary-lightest-tone: theme-light-or-dark($theme-primary-lightest);\n$theme-secondary-lightest-tone: theme-light-or-dark($theme-secondary-lightest);\n\n// 主题颜色深色对比色调\n$theme-primary-dark-tone: theme-light-or-dark($theme-primary-dark);\n$theme-secondary-dark-tone: theme-light-or-dark($theme-secondary-dark);\n\n// 主题颜色更深色对比色调\n$theme-primary-darker-tone: theme-light-or-dark($theme-primary-darker);\n$theme-secondary-darker-tone: theme-light-or-dark($theme-secondary-darker);\n\n// 主题颜色最深色对比色调\n$theme-primary-darkest-tone: theme-light-or-dark($theme-primary-darkest);\n$theme-secondary-darkest-tone: theme-light-or-dark($theme-secondary-darkest);\n\n// 主题颜色透明色对比色调\n$theme-primary-alpha-tone: theme-light-or-dark($theme-primary-alpha);\n$theme-secondary-alpha-tone: theme-light-or-dark($theme-secondary-alpha);\n\n// 背景色对比色调\n$theme-background-tone: theme-light-or-dark($theme-background);\n\n// 定义文本默认颜色，默认颜色深色用黑色，浅色用白色\n// 分为基本颜色、次要颜色、提示性颜色和禁用颜色，分别用在基础颜色、过渡颜色、提示或暗色和表单 disabled readonly 以及其他禁用\n$theme-text-colors: (\n  dark: (\n    primary: rgba(0, 0, 0, .87),\n    secondary: rgba(0, 0, 0, .54),\n    hint: rgba(0, 0, 0, .38),\n    disabled: rgba(0, 0, 0, .38)\n  ),\n  light: (\n    primary: #ffffff,\n    secondary: rgba(255, 255, 255, .7),\n    hint: rgba(255, 255, 255, .5),\n    disabled: rgba(255, 255, 255, .5)\n  )\n);\n\n// 主题属性值\n$theme-property-values: (\n  // 主题颜色\n  primary: $theme-primary,\n  secondary: $theme-secondary,\n  background: $theme-background,\n\n  // 主题颜色浅色\n  primary-light: $theme-primary-light,\n  secondary-light: $theme-secondary-light,\n\n  // 主题颜色更浅色\n  primary-lighter: $theme-primary-lighter,\n  secondary-lighter: $theme-secondary-lighter,\n\n  // 主题颜色最浅色\n  primary-lightest: $theme-primary-lightest,\n  secondary-lightest: $theme-secondary-lightest,\n\n  // 主题颜色深色\n  primary-dark: $theme-primary-dark,\n  secondary-dark: $theme-secondary-dark,\n\n  // 主题颜色更深色\n  primary-darker: $theme-primary-darker,\n  secondary-darker: $theme-secondary-darker,\n\n  // 主题颜色最深色\n  primary-darkest: $theme-primary-darkest,\n  secondary-darkest: $theme-secondary-darkest,\n\n  // 主题颜色透明色\n  primary-alpha: $theme-primary-alpha,\n  secondary-alpha: $theme-secondary-alpha,\n\n) !default;\n\n// 主题基本颜色对比色调值集合，根据主题基本颜色计算出对应的对比色调值，浅色还是深色色调值\n$theme-tone-property-values: (\n  // 可以用在 background-color border-color 或 color 等可以设置颜色的属性上\n  // 当 map-get($theme-text-colors, $theme-primary-tone) 返回 light 时，对应浅色值\n  // 当 map-get($theme-text-colors, $theme-primary-tone) 返回 dark 时，对应深色值\n\n  // 用在 $theme-primary 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary: map-get(map-get($theme-text-colors, $theme-primary-tone), primary),\n  secondary-on-primary: map-get(map-get($theme-text-colors, $theme-primary-tone), secondary),\n  hint-on-primary: map-get(map-get($theme-text-colors, $theme-primary-tone), hint),\n  disabled-on-primary: map-get(map-get($theme-text-colors, $theme-primary-tone), disabled),\n\n  // 用在 $theme-primary-light 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary-light: map-get(map-get($theme-text-colors, $theme-primary-light-tone), primary),\n  secondary-on-primary-light: map-get(map-get($theme-text-colors, $theme-primary-light-tone), secondary),\n  hint-on-primary-light: map-get(map-get($theme-text-colors, $theme-primary-light-tone), hint),\n  disabled-on-primary-light: map-get(map-get($theme-text-colors, $theme-primary-light-tone), disabled),\n\n  // 用在 $theme-primary-lighter 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary-lighter: map-get(map-get($theme-text-colors, $theme-primary-lighter-tone), primary),\n  secondary-on-primary-lighter: map-get(map-get($theme-text-colors, $theme-primary-lighter-tone), secondary),\n  hint-on-primary-lighter: map-get(map-get($theme-text-colors, $theme-primary-lighter-tone), hint),\n  disabled-on-primary-lighter: map-get(map-get($theme-text-colors, $theme-primary-lighter-tone), disabled),\n\n  // 用在 $theme-primary-lightest 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary-lightest: map-get(map-get($theme-text-colors, $theme-primary-lightest-tone), primary),\n  secondary-on-primary-lightest: map-get(map-get($theme-text-colors, $theme-primary-lightest-tone), secondary),\n  hint-on-primary-lightest: map-get(map-get($theme-text-colors, $theme-primary-lightest-tone), hint),\n  disabled-on-primary-lightest: map-get(map-get($theme-text-colors, $theme-primary-lightest-tone), disabled),\n\n  // 用在 $theme-primary-dark 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary-dark: map-get(map-get($theme-text-colors, $theme-primary-dark-tone), primary),\n  secondary-on-primary-dark: map-get(map-get($theme-text-colors, $theme-primary-dark-tone), secondary),\n  hint-on-primary-dark: map-get(map-get($theme-text-colors, $theme-primary-dark-tone), hint),\n  disabled-on-primary-dark: map-get(map-get($theme-text-colors, $theme-primary-dark-tone), disabled),\n\n  // 用在 $theme-primary-darker 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary-darker: map-get(map-get($theme-text-colors, $theme-primary-darker-tone), primary),\n  secondary-on-primary-darker: map-get(map-get($theme-text-colors, $theme-primary-darker-tone), secondary),\n  hint-on-primary-darker: map-get(map-get($theme-text-colors, $theme-primary-darker-tone), hint),\n  disabled-on-primary-darker: map-get(map-get($theme-text-colors, $theme-primary-darker-tone), disabled),\n\n  // 用在 $theme-primary-darkest 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary-darkest: map-get(map-get($theme-text-colors, $theme-primary-darkest-tone), primary),\n  secondary-on-primary-darkest: map-get(map-get($theme-text-colors, $theme-primary-darkest-tone), secondary),\n  hint-on-primary-darkest: map-get(map-get($theme-text-colors, $theme-primary-darkest-tone), hint),\n  disabled-on-primary-darkest: map-get(map-get($theme-text-colors, $theme-primary-darkest-tone), disabled),\n\n  // 用在主题颜色主颜色透明色 $theme-primary-alpha 上的 primary secondary hint 和 disabled 对比颜色，深色主题用浅色对比色调\n  primary-on-primary-alpha: map-get(map-get($theme-text-colors, $theme-primary-alpha-tone), primary),\n  secondary-on-primary-alpha: map-get(map-get($theme-text-colors, $theme-primary-alpha-tone), secondary),\n  hint-on-primary-alpha: map-get(map-get($theme-text-colors, $theme-primary-alpha-tone), hint),\n  disabled-on-primary-alpha: map-get(map-get($theme-text-colors, $theme-primary-alpha-tone), disabled),\n\n  // 用在 $theme-secondary 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary: map-get(map-get($theme-text-colors, $theme-secondary-tone), primary),\n  secondary-on-secondary: map-get(map-get($theme-text-colors, $theme-secondary-tone), secondary),\n  hint-on-secondary: map-get(map-get($theme-text-colors, $theme-secondary-tone), hint),\n  disabled-on-secondary: map-get(map-get($theme-text-colors, $theme-secondary-tone), disabled),\n\n  // 用在 $theme-secondary-light 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary-light: map-get(map-get($theme-text-colors, $theme-secondary-light-tone), primary),\n  secondary-on-secondary-light: map-get(map-get($theme-text-colors, $theme-secondary-light-tone), secondary),\n  hint-on-secondary-light: map-get(map-get($theme-text-colors, $theme-secondary-light-tone), hint),\n  disabled-on-secondary-light: map-get(map-get($theme-text-colors, $theme-secondary-light-tone), disabled),\n\n  // 用在 $theme-secondary-lighter 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary-lighter: map-get(map-get($theme-text-colors, $theme-secondary-lighter-tone), primary),\n  secondary-on-secondary-lighter: map-get(map-get($theme-text-colors, $theme-secondary-lighter-tone), secondary),\n  hint-on-secondary-lighter: map-get(map-get($theme-text-colors, $theme-secondary-lighter-tone), hint),\n  disabled-on-secondary-lighter: map-get(map-get($theme-text-colors, $theme-secondary-lighter-tone), disabled),\n\n  // 用在 $theme-secondary-lightest 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary-lightest: map-get(map-get($theme-text-colors, $theme-secondary-lightest-tone), primary),\n  secondary-on-secondary-lightest: map-get(map-get($theme-text-colors, $theme-secondary-lightest-tone), secondary),\n  hint-on-secondary-lightest: map-get(map-get($theme-text-colors, $theme-secondary-lightest-tone), hint),\n  disabled-on-secondary-lightest: map-get(map-get($theme-text-colors, $theme-secondary-lightest-tone), disabled),\n\n  // 用在 $theme-secondary-dark 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary-dark: map-get(map-get($theme-text-colors, $theme-secondary-dark-tone), primary),\n  secondary-on-secondary-dark: map-get(map-get($theme-text-colors, $theme-secondary-dark-tone), secondary),\n  hint-on-secondary-dark: map-get(map-get($theme-text-colors, $theme-secondary-dark-tone), hint),\n  disabled-on-secondary-dark: map-get(map-get($theme-text-colors, $theme-secondary-dark-tone), disabled),\n\n  // 用在 $theme-secondary-darker 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary-darker: map-get(map-get($theme-text-colors, $theme-secondary-darker-tone), primary),\n  secondary-on-secondary-darker: map-get(map-get($theme-text-colors, $theme-secondary-darker-tone), secondary),\n  hint-on-secondary-darker: map-get(map-get($theme-text-colors, $theme-secondary-darker-tone), hint),\n  disabled-on-secondary-darker: map-get(map-get($theme-text-colors, $theme-secondary-darker-tone), disabled),\n\n  // 用在 $theme-secondary-darkest 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary-darkest: map-get(map-get($theme-text-colors, $theme-secondary-darkest-tone), primary),\n  secondary-on-secondary-darkest: map-get(map-get($theme-text-colors, $theme-secondary-darkest-tone), secondary),\n  hint-on-secondary-darkest: map-get(map-get($theme-text-colors, $theme-secondary-darkest-tone), hint),\n  disabled-on-secondary-darkest: map-get(map-get($theme-text-colors, $theme-secondary-darkest-tone), disabled),\n\n  // 用在主题颜色次颜色透明色 $theme-secondary-alpha 上的 primary secondary hint 和 disabled 对比颜色，深色主题用浅色对比色调\n  primary-on-secondary-alpha: map-get(map-get($theme-text-colors, $theme-secondary-alpha-tone), primary),\n  secondary-on-secondary-alpha: map-get(map-get($theme-text-colors, $theme-secondary-alpha-tone), secondary),\n  hint-on-secondary-alpha: map-get(map-get($theme-text-colors, $theme-secondary-alpha-tone), hint),\n  disabled-on-secondary-alpha: map-get(map-get($theme-text-colors, $theme-secondary-alpha-tone), disabled),\n\n  // 用在 $theme-background 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-background: map-get(map-get($theme-text-colors, $theme-background-tone), primary),\n  secondary-on-background: map-get(map-get($theme-text-colors, $theme-background-tone), secondary),\n  hint-on-background: map-get(map-get($theme-text-colors, $theme-background-tone), hint),\n  disabled-on-background: map-get(map-get($theme-text-colors, $theme-background-tone), disabled),\n\n  // 用在浅色主题上的 primary secondary hint 和 disabled 对比色调，浅色主题用深色对比色调\n  primary-on-light: map-get(map-get($theme-text-colors, dark), primary),\n  secondary-on-light: map-get(map-get($theme-text-colors, dark), secondary),\n  hint-on-light: map-get(map-get($theme-text-colors, dark), hint),\n  disabled-on-light: map-get(map-get($theme-text-colors, dark), disabled),\n\n  // 用在深色主题上的 primary secondary hint 和 disabled 对比颜色，深色主题用浅色对比色调\n  primary-on-dark: map-get(map-get($theme-text-colors, light), primary),\n  secondary-on-dark: map-get(map-get($theme-text-colors, light), secondary),\n  hint-on-dark: map-get(map-get($theme-text-colors, light), hint),\n  disabled-on-dark: map-get(map-get($theme-text-colors, light), disabled),\n) !default;\n\n// 除了三种基本颜色外，又定义了成功 success 、信息 info、警告 warning 、错误 error 四种辅助颜色，\n// 这四种颜色主要用在背景，文本，按钮等上，用来区分文本颜色和背景，以及表单样式（比如校验失败和成功的颜色）等\n$theme-assist: (\"success\", \"info\", \"warning\", \"error\") !default;\n\n// 辅助颜色值\n$theme-assist-colors: (\n  success: #43a047, // $green-600\n  info: #0097a7, // $cyan-700\n  warning: #fb8c00, // $orange-600\n  error: #f44336, //$red-500\n\n  // 辅助颜色浅色\n  success-light: #81c784, // $green-300\n  info-light: #4dd0e1, // $cyan-300\n  warning-light: #ffb74d, // $orange-300\n  error-light: #e57373, // $red-300\n\n  // 辅助颜色更浅色\n  success-lighter: #c8e6c9, // $green-100\n  info-lighter: #b2ebf2, // $cyan-100\n  warning-lighter: #ffe0b2, // $orange-100\n  error-lighter: #ffcdd2, // $red-100\n\n  // 辅助颜色深色\n  success-dark: #2e7d32, // $green-800\n  info-dark: #00838f, // $cyan-800\n  warning-dark: #ef6c00, // $orange-800\n  error-dark: #c62828, // $red-800\n\n  // 辅助颜色透明色\n  success-alpha: rgba(#4caf50, $alpha),\n  info-alpha: rgba(#00bcd4, $alpha),\n  warning-alpha: rgba(#ff9800, $alpha),\n  error-alpha: rgba(#f44336, $alpha),\n) !default;\n\n// 常用灰色颜色，提供了黑色透明度和灰色本身颜色两种方案，根据配置项 $enable-transparent 来选择其中一种方案\n// 默认使用黑色透明度，可以通过修改 base/variables/_options.scss 中变量 $enable-transparent 来选择不同的方案\n\n// 灰色颜色，对于灰色颜色，这里没有采用 css 变量处理\n$greys: (\n  50: #fafafa,\n  100: #f5f5f5,\n  200: #eeeeee,\n  300: #e0e0e0,\n  400: #bdbdbd,\n  500: #9e9e9e,\n  600: #757575,\n  700: #616161,\n  800: #424242,\n  900: #212121\n) !default;\n\n// 灰色透明色\n$greys-transparent: (\n  50: rgba(0, 0, 0, .02), // 相当于 #fafafa;\n  100: rgba(0, 0, 0, .04), // 相当于 #f5f5f5\n  200: rgba(0, 0, 0, .065), // 相当于 #eeeeee\n  300: rgba(0, 0, 0, .12), // 相当于 #e0e0e0\n  400: rgba(0, 0, 0, .26), // 相当于 #bdbdbd\n  500: rgba(0, 0, 0, .38), // 相当于 #9e9e9e\n  600: rgba(0, 0, 0, .54), // 相当于 #757575\n  700: rgba(0, 0, 0, .62), // 相当于 #616161\n  800: rgba(0, 0, 0, .74), // 相当于 #424242\n  900: rgba(0, 0, 0, .87) // 相当于 #212121\n) !default;\n\n// 白色、黑色和透明色\n$white: #ffffff !default;\n$black: #000000 !default;\n$transparent: rgba(0, 0, 0, 0) !default; // 透明色\n\n$grey-color-50: if($enable-transparent, map-get($greys-transparent, 50), map-get($greys, 50)) !default;\n$grey-color-100: if($enable-transparent, map-get($greys-transparent, 100), map-get($greys, 100)) !default;\n$grey-color-200: if($enable-transparent, map-get($greys-transparent, 200), map-get($greys, 200)) !default;\n$grey-color-300: if($enable-transparent, map-get($greys-transparent, 300), map-get($greys, 300)) !default;\n$grey-color-400: if($enable-transparent, map-get($greys-transparent, 400), map-get($greys, 400)) !default;\n$grey-color-500: if($enable-transparent, map-get($greys-transparent, 500), map-get($greys, 500)) !default;\n$grey-color-600: if($enable-transparent, map-get($greys-transparent, 600), map-get($greys, 600)) !default;\n$grey-color-700: if($enable-transparent, map-get($greys-transparent, 700), map-get($greys, 700)) !default;\n$grey-color-800: if($enable-transparent, map-get($greys-transparent, 800), map-get($greys, 800)) !default;\n$grey-color-900: if($enable-transparent, map-get($greys-transparent, 900), map-get($greys, 900)) !default;\n","// 页面底部样式\n\n@import \"../../../../scss/theme/variable\";\n\n.footer-assist {\n  // 此处的数值等于 footer 的高度 + 预留的间距\n  padding-top: 4.5rem;\n}\n\n.footer {\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  padding: 1rem 0;\n  border-top: 1px solid $grey-color-300;\n  color: map-get(map-get($theme-text-colors, dark), secondary);\n}\n\n","@import \"../../../../scss/theme/variable\";\n@import \"../../../../scss/theme/mixin\";\n\n.perfect-menu {\n  &.menu, .menu {\n    margin-left: 0;\n  }\n  .menu-title {\n    padding: .5rem 1rem;\n  }\n\n  .menu-sub-title {\n    &:hover {\n      @include theme-prop(color, primary);\n    }\n\n    &.active {\n      border-right: 3px solid;\n      @include theme-prop(color, primary-darker);\n      @include theme-prop(background-color, primary-lightest);\n\n      // 可以动态的设置颜色透明度，属于 CSS 4 color 范畴，目前浏览器都不支持\n      // 可以用 rgba 来代替，但只能静态设置，不可以随着颜色和透明度的变化动态设置\n      // https://drafts.csswg.org/css-color/#modifying-colors\n      // https://www.w3cplus.com/css4/color-mod.html\n      @supports (background-color: color(green a(10%))) {\n        $bg-color: var(--theme-primary-lightest);\n        $opacity: .8;\n        background-color: color(#{$bg-color} a(#{percentage($opacity)}));\n      }\n    }\n  }\n}\n\n","\n// 目录大纲编号 start\n.catalogue-counter {\n  counter-reset: outline1;\n  > h1, > h2, > h3, > h4, > h5, > h6 {\n    &::before {\n      margin-right: .5rem;\n    }\n  }\n}\n\n// 如果大纲第一级别是 h1\n.catalogue-counter > h1 {\n  counter-reset: outline2;\n  &::before {\n    content: counter(outline1, decimal) \". \";\n    counter-increment: outline1;\n  }\n  ~ h2 {\n    counter-reset: outline3;\n  }\n  ~ h2::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\";\n    counter-increment: outline2;\n  }\n  ~ h2 ~ h3 {\n    counter-reset: outline4;\n  }\n  ~ h2 ~ h3::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\";\n    counter-increment: outline3;\n  }\n\n  ~ h2 ~ h3 ~ h4 {\n    counter-reset: outline5;\n  }\n\n  ~ h2 ~ h3 ~ h4::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\";\n    counter-increment: outline4;\n  }\n\n  ~ h2 ~ h3 ~ h4 ~ h5 {\n    counter-reset: outline6;\n  }\n\n  ~ h2 ~ h3 ~ h4 ~ h5::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\" counter(outline5, decimal) \".\";\n    counter-increment: outline5;\n  }\n\n  ~ h2 ~ h3 ~ h4 ~ h5 ~ h6::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\" counter(outline5, decimal) \".\" counter(outline6, decimal) \".\";\n    counter-increment: outline6;\n  }\n}\n\n// 如果大纲第一级别是 h2\n.catalogue-counter > h2 {\n  counter-reset: outline2;\n  &::before {\n    content: counter(outline1, decimal) \".\";\n    counter-increment: outline1;\n  }\n  ~ h3 {\n    counter-reset: outline3;\n  }\n  ~ h3::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\";\n    counter-increment: outline2;\n  }\n  ~ h3 ~ h4 {\n    counter-reset: outline4;\n  }\n  ~ h3 ~ h4::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\";\n    counter-increment: outline3;\n  }\n\n  ~ h3 ~ h4 ~ h5 {\n    counter-reset: outline5;\n  }\n  ~ h3 ~ h4 ~ h5::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\";\n    counter-increment: outline4;\n  }\n\n  ~ h3 ~ h4 ~ h5 ~ h6::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\" counter(outline5, decimal) \".\";\n    counter-increment: outline5;\n  }\n}\n\n// 如果大纲第一级别是 h3（h4以后的不再考虑）\n.catalogue-counter > h3 {\n  counter-reset: outline2;\n  &::before {\n    content: counter(outline1, decimal) \".\";\n    counter-increment: outline1;\n  }\n  ~ h4 {\n    counter-reset: outline3;\n  }\n  ~ h4::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\";\n    counter-increment: outline2;\n  }\n  ~ h4 ~ h5 {\n    counter-reset: outline4;\n  }\n  ~ h4 ~ h5::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\";\n    counter-increment: outline3;\n  }\n\n  ~ h4 ~ h5 ~ h6::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\";\n    counter-increment: outline4;\n  }\n}\n\n// 目录大纲编号 end\n","// 这里之所以定义 html 为 position: relative; 主要为了实现，不论页面高度如何，底部始终在最下面显示\n\nhtml {\n  position: relative;\n}\n\nhtml, body {\n  height: auto;\n  min-height: 100%;\n}\n","@import \"../../../../scss/theme/variable\";\n@import \"../../../../scss/theme/mixin\";\n\n.drawer-content {\n  overflow: hidden;\n}\n\n.doc-content-header {\n  padding-right: 4rem;\n  a {\n    margin-right: 1rem;\n\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n}\n\n.doc-main {\n  min-height: 500px;\n  padding: 0 1rem;\n\n  p, li {\n    line-height: 2;\n  }\n\n  p {\n    margin-top: 1rem;\n    margin-bottom: 1rem;\n  }\n\n  h1, h2, h3 {\n    margin-top: 2rem;\n  }\n}\n\n.doc-table {\n  width: 95%;\n  margin-bottom: 1rem;\n\n  tbody > tr:nth-of-type(odd) {\n    @include theme-prop(background-color, secondary-lightest);\n  }\n  th {\n    border-bottom: 1px solid;\n    @include theme-prop(border-bottom-color, secondary-lighter);\n  }\n\n  th,\n  td {\n    padding: .5rem 1rem;\n    border-top: 1px solid;\n    border-left: 1px solid;\n    @include theme-prop(border-color, secondary-lighter);\n\n    &:last-child {\n      border-right: 1px solid;\n      @include theme-prop(border-color, secondary-lighter);\n    }\n  }\n  tr:last-child > td {\n    border-bottom: 1px solid;\n    @include theme-prop(border-color, secondary-lighter);\n  }\n}\n","// animation mixin\n\n@import \"./variable\";\n\n@mixin animation-ease-out {\n  animation-timing-function: $animation-ease-out;\n}\n\n@mixin animation-ease-in-out {\n  animation-timing-function: $animation-ease-in-out;\n}\n\n@mixin animation-ease-in {\n  animation-timing-function: $animation-ease-in;\n}\n\n@mixin animation-sharp {\n  animation-timing-function: $animation-sharp;\n}\n\n// animation transition\n@mixin animation-transition ($property, $duration: 120ms, $timing-function: ease-in-out, $delay: 0) {\n  $animation-function: map-get($animation-timing-function, $timing-function);\n  $animation-function: if($animation-function, $animation-function, $timing-function);\n\n  @if $delay > 0 {\n    transition: #{$property} $duration $animation-function $delay;\n  } @else {\n    transition: #{$property} $duration $animation-function;\n  }\n}\n","// 动画相关变量\n// https://material.io/guidelines/motion/duration-easing.html#duration-easing-common-durations\n$animation-ease-out: cubic-bezier(0, 0, .2, 1) !default; // 减速 deceleration-curve-timing\n$animation-ease-in-out: cubic-bezier(.4, 0, .2, 1) !default; // 先迅速加速，再缓慢减速 standard-curve-timing\n$animation-ease-in: cubic-bezier(.4, 0, 1, 1) !default; // 加速 acceleration-curve-timing\n$animation-sharp: cubic-bezier(.4, 0, .6, 1) !default; // 极速的变化 sharp-curve-timing\n\n// 动画函数\n$animation-timing-function: (\n  ease-out: $animation-ease-out,\n  ease-in-out: $animation-ease-in-out,\n  ease-in: $animation-ease-in-out,\n  sharp: $animation-ease-in-out\n);\n","@import \"../../../../scss/base/mixins/clearfix\";\n@import \"../../../../scss/theme/variable\";\n@import \"../../../../scss/theme/mixin\";\n@import \"../../../../scss/animation/mixin\";\n\n// 例子样式\n.doc-example {\n  position:      relative;\n  margin-bottom: 1rem;\n  border:        1px solid;\n  @include theme-prop(border-color, secondary-lighter);\n  border-radius: 4px;\n  transition:    all .2s;\n\n  &:hover {\n    .icon-pure-code,\n    .icon-pure-code-expand {\n      @include theme-prop(color, secondary);\n    }\n  }\n}\n\n.doc-example-render {\n  padding: 1rem 1rem 0;\n\n  p:last-of-type {\n    margin-bottom: 0;\n  }\n}\n\n.doc-example-expand {\n  position:        relative;\n  display:         flex;\n  justify-content: flex-end;\n  margin:          .5rem 2rem;\n}\n\n.icon-pure-code,\n.icon-pure-code-expand {\n  transform: rotate(-45deg) scale(.8);\n  @include theme-prop(color, secondary-lighter);\n}\n\n.doc-code-icon {\n  width:  2.5rem;\n  cursor: pointer;\n\n  &:hover {\n    .icon-pure-code,\n    .icon-pure-code-expand {\n      @include theme-prop(color, secondary);\n    }\n\n    & + .tooltip {\n      top:     -3rem;\n      right:   -.8rem;\n      display: block;\n      opacity: .8;\n    }\n  }\n}\n\n.doc-example-highlight.highlight {\n  display:    none;\n  border:     0;\n  border-top: 1px dashed;\n  @include theme-prop(border-top-color, secondary-lighter);\n  @include animation-transition(display);\n}\n\n.doc-code-copy {\n  position: absolute;\n  top:      1rem;\n  right:    3rem;\n  display:  none;\n\n  .icon-pure-copy {\n    cursor:    pointer;\n    transform: scale(.6);\n    @include theme-prop(color, secondary-lighter);\n  }\n\n  &:hover {\n    .icon-pure-copy {\n      @include theme-prop(color, secondary);\n    }\n\n    & + .tooltip {\n      top:     -2rem;\n      right:   1.5rem;\n      display: block;\n      opacity: .8;\n    }\n  }\n}\n\n.doc-example-highlight {\n  position: relative;\n  &:hover .doc-code-copy {\n    display: block;\n    .icon-pure-copy {\n      @include theme-prop(color, secondary);\n    }\n  }\n}\n\n// 栅格例子样式\n.doc-example-row {\n  .row + .row {\n    margin-top: 1rem;\n  }\n  // 嵌套的样式\n  .row .row {\n    border: 1px solid;\n  }\n  [class*=\"col\"] {\n    padding-top:    .5rem;\n    padding-bottom: .5rem;\n    color:          #fff;\n    @include theme-prop(background-color, primary-light);\n    text-align:     center;\n\n    &:nth-of-type(2n) {\n      @include theme-prop(background-color, primary);\n    }\n  }\n}\n\n.doc-example-row-flex-cols .row {\n  min-height: 5rem;\n  @include theme-prop(background-color, primary-lightest);\n}\n\n.doc-example-row-gutters {\n  .no-gutters {\n    margin-top: 1rem;\n  }\n  [class^=\"col\"] > div {\n    @include theme-prop(background-color, secondary-light);\n  }\n}\n\n//// 例子样式\n//.doc-example-render {\n//  position: relative;\n//  padding: 1rem;\n//  margin: 1rem .5rem;\n//  border: solid $theme-primary;\n//  border-width: 1px 0 0;\n//  @include clearfix();\n//}\n//\n//@media (min-width: 640px) {\n//  .doc-example-render {\n//    padding: 1.5rem;\n//    margin-bottom: 0;\n//    margin-left: 0;\n//    margin-right: 0;\n//    border-width: 1px 1px 0;\n//  }\n//}\n//\n//// 容器例子样式\n//.doc-example-container {\n//  .container-fluid,\n//  .container {\n//    padding: 20px;\n//    color: darken(#9c27b0, 20%);\n//    background-color: lighten(#9c27b0, 48%);\n//    text-align: center;\n//  }\n//}\n//\n\n","// sass-lint:disable-all\n.highlight table td { padding: 5px; }\n.highlight table pre { margin: 0; }\n.highlight .cm {\n  color: #999988;\n  font-style: italic;\n}\n.highlight .cp {\n  color: #999999;\n  font-weight: bold;\n}\n.highlight .c1 {\n  color: #999988;\n  font-style: italic;\n}\n.highlight .cs {\n  color: #999999;\n  font-weight: bold;\n  font-style: italic;\n}\n.highlight .c, .highlight .cd {\n  color: #999988;\n  font-style: italic;\n}\n.highlight .err {\n  color: #a61717;\n  background-color: #e3d2d2;\n}\n.highlight .gd {\n  color: #000000;\n  background-color: #ffdddd;\n}\n.highlight .ge {\n  color: #000000;\n  font-style: italic;\n}\n.highlight .gr {\n  color: #aa0000;\n}\n.highlight .gh {\n  color: #999999;\n}\n.highlight .gi {\n  color: #000000;\n  background-color: #ddffdd;\n}\n.highlight .go {\n  color: #888888;\n}\n.highlight .gp {\n  color: #555555;\n}\n.highlight .gs {\n  font-weight: bold;\n}\n.highlight .gu {\n  color: #aaaaaa;\n}\n.highlight .gt {\n  color: #aa0000;\n}\n.highlight .kc {\n  color: #000000;\n  font-weight: bold;\n}\n.highlight .kd {\n  color: #000000;\n  font-weight: bold;\n}\n.highlight .kn {\n  color: #000000;\n  font-weight: bold;\n}\n.highlight .kp {\n  color: #000000;\n  font-weight: bold;\n}\n.highlight .kr {\n  color: #000000;\n  font-weight: bold;\n}\n.highlight .kt {\n  color: #445588;\n  font-weight: bold;\n}\n.highlight .k, .highlight .kv {\n  color: #000000;\n  font-weight: bold;\n}\n.highlight .mf {\n  color: #009999;\n}\n.highlight .mh {\n  color: #009999;\n}\n.highlight .il {\n  color: #009999;\n}\n.highlight .mi {\n  color: #009999;\n}\n.highlight .mo {\n  color: #009999;\n}\n.highlight .m, .highlight .mb, .highlight .mx {\n  color: #009999;\n}\n.highlight .sb {\n  color: #d14;\n}\n.highlight .sc {\n  color: #d14;\n}\n.highlight .sd {\n  color: #d14;\n}\n.highlight .s2 {\n  color: #d14;\n}\n.highlight .se {\n  color: #d14;\n}\n.highlight .sh {\n  color: #d14;\n}\n.highlight .si {\n  color: #d14;\n}\n.highlight .sx {\n  color: #d14;\n}\n.highlight .sr {\n  color: #009926;\n}\n.highlight .s1 {\n  color: #d14;\n}\n.highlight .ss {\n  color: #990073;\n}\n.highlight .s {\n  color: #d14;\n}\n.highlight .na {\n  color: #008080;\n}\n.highlight .bp {\n  color: #999999;\n}\n.highlight .nb {\n  color: #0086B3;\n}\n.highlight .nc {\n  color: #445588;\n  font-weight: bold;\n}\n.highlight .no {\n  color: #008080;\n}\n.highlight .nd {\n  color: #3c5d5d;\n  font-weight: bold;\n}\n.highlight .ni {\n  color: #800080;\n}\n.highlight .ne {\n  color: #990000;\n  font-weight: bold;\n}\n.highlight .nf {\n  color: #990000;\n  font-weight: bold;\n}\n.highlight .nl {\n  color: #990000;\n  font-weight: bold;\n}\n.highlight .nn {\n  color: #555555;\n}\n.highlight .nt {\n  color: #000080;\n}\n.highlight .vc {\n  color: #008080;\n}\n.highlight .vg {\n  color: #008080;\n}\n.highlight .vi {\n  color: #008080;\n}\n.highlight .nv {\n  color: #008080;\n}\n.highlight .ow {\n  color: #000000;\n  font-weight: bold;\n}\n.highlight .o {\n  color: #000000;\n  font-weight: bold;\n}\n.highlight .w {\n  color: #bbbbbb;\n}\n.highlight {\n  background-color: #f8f8f8;\n}\n","// 自定义 highlight 样式\n@import \"../../../../scss/responsive/mixin\";\n@import \"../../../../scss/theme/variable\";\n@import \"../../../../scss/theme/mixin\";\n\n.highlighter-rouge:hover {\n  position: relative;\n  .doc-code-copy {\n    display: block;\n  }\n}\n.highlight {\n  padding: 1rem;\n  border: 1px solid;\n  @include theme-prop(border-color, secondary-lighter);\n  -ms-overflow-style: -ms-autohiding-scrollbar;\n  background-color: transparent;\n}\n\n.highlight pre {\n  padding: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  border: 0;\n  background-color: transparent;\n}\n\n.highlight pre code {\n  font-size: inherit;\n}\n","// 定义色彩卡样式\n.doc-color-group {\n  color: #fff;\n}\n\n.doc-primary-color {\n  margin-bottom: .5rem;\n}\n\n.doc-color-title {\n  padding: .75rem 1rem 2rem;\n}\n\n.doc-color {\n  display: flex;\n  justify-content: space-between;\n  padding: .75rem 1rem;\n}\n\n.doc-color-dark {\n  color: rgba(0, 0, 0, .87);\n}\n\n.doc-color-a {\n  margin-top: .5rem;\n}\n\n.doc-color-panel {\n  padding-left: 10px;\n  padding-right: 10px;\n  margin-bottom: 3rem;\n  > .col {\n    padding-left: 0;\n    padding-right: 0;\n  }\n}\n"]}
>>>>>>> 274d71830943ddf222d83be4859ecf2552378ea5
