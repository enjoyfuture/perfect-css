{"version":3,"sources":["common/_header.scss","../../../scss/theme/_mixin.scss","../../../scss/theme/_variable.scss","common/_footer.scss","common/_menu.scss","components.css","common/_catalogue.scss","components/_theme.scss","../../../scss/shadow/_mixin.scss","../../../scss/shadow/_variable.scss","components/_main.scss","components/_base.scss","../../../scss/ripple/_mixin.scss","../../../scss/shadow/_function.scss","../../../scss/animation/_variable.scss","components/_btn.scss","../../../scss/ripple/_function.scss","../../../scss/elements/button/_mixin.scss","components/_radio.scss","../../../scss/elements/radio/_mixin.scss","components/_checkbox.scss","../../../scss/elements/checkbox/_mixin.scss","components/_list.scss","components/_dialog.scss","components/_tabs.scss","../../../scss/navigation/tabs/_mixin.scss","../../../scss/navigation/tabs/_variable.scss","components/_menu.scss","components/_switch.scss","../../../scss/elements/switch/_mixin.scss"],"names":[],"mappings":"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B,AACnB,YAAmB,AACnB,UAAgB,AAChB,kBAAkB,AAClB,eAAmB,CACpB,AAhCH,0DAmCI,MAAS,AACT,OAAS,AACT,WAAY,AACZ,WAAY,CACb,AAvCH,6BA0CI,iBAAkB,CACnB,AA3CH,uECoDI,mCDLwD,CCqBzD,ADpEH,uECoDI,oCDDwD,CCiBzD,ADZH,6BAGI,aAAqB,AACrB,mBAAuB,AACvB,uBAAuB,AACvB,YAAsB,AACtB,aAAsB,AACtB,mBAA4B,AAC5B,kBAAoB,AACpB,sBTkPqB,ASjPrB,eTyPW,CSxPZ,AAGH,yBV1DI,cCVmB,ADWnB,mCAAqF,AOLvF,yHGoEkD,CAE/C,AARL,yBV1DI,cCVmB,ADWnB,mCAAqF,AOLvF,wIGoEkD,CAE/C,AARL,yBV1DI,cCVmB,ADWnB,mCAAqF,AOLvF,wIGoEkD,CAE/C,AARL,yBV1DI,cCVmB,ADWnB,mCAAqF,AOLvF,wIGoEkD,CAE/C,AARL,yBV1DI,cCVmB,ADWnB,mCAAqF,AOLvF,yIGoEkD,CAE/C,AARL,yBV1DI,cCVmB,ADWnB,mCAAqF,AOLvF,yIGoEkD,CAE/C,AARL,yBV1DI,cCVmB,ADWnB,mCAAqF,AOLvF,0IGoEkD,CAE/C,AARL,yBV1DI,cCVmB,ADWnB,mCAAqF,AOLvF,8IGoEkD,CAE/C,AARL,yBV1DI,cCVmB,ADWnB,mCAAqF,AOLvF,8IGoEkD,CAE/C,AARL,yBV1DI,cCVmB,ADWnB,mCAAqF,AOLvF,8IGoEkD,CAE/C,AARL,0BV1DI,cCVmB,ADWnB,mCAAqF,AOLvF,+IGoEkD,CAE/C,AARL,0BV1DI,cCVmB,ADWnB,mCAAqF,AOLvF,+IGoEkD,CAE/C,AARL,0BV1DI,cCVmB,ADWnB,mCAAqF,AOLvF,+IGoEkD,CAE/C,AARL,0BV1DI,cCVmB,ADWnB,mCAAqF,AOLvF,+IGoEkD,CAE/C,AARL,0BV1DI,cCVmB,ADWnB,mCAAqF,AOLvF,+IGoEkD,CAE/C,AARL,0BV1DI,cCVmB,ADWnB,mCAAqF,AOLvF,+IGoEkD,CAE/C,AARL,0BV1DI,cCVmB,ADWnB,mCAAqF,AOLvF,gJGoEkD,CAE/C,AARL,0BV1DI,cCVmB,ADWnB,mCAAqF,AOLvF,gJGoEkD,CAE/C,AARL,0BV1DI,cCVmB,ADWnB,mCAAqF,AOLvF,gJGoEkD,CAE/C,AARL,0BV1DI,cCVmB,ADWnB,mCAAqF,AOLvF,gJGoEkD,CAE/C,AARL,0BV1DI,cCVmB,ADWnB,mCAAqF,AOLvF,iJGoEkD,CAE/C,AARL,0BV1DI,cCVmB,ADWnB,mCAAqF,AOLvF,iJGoEkD,CAE/C,AARL,0BV1DI,cCVmB,ADWnB,mCAAqF,AOLvF,iJGoEkD,CAE/C,AARL,0BV1DI,cCVmB,ADWnB,mCAAqF,AOLvF,iJGoEkD,CAE/C,AARL,0BV1DI,cCVmB,ADWnB,mCAAqF,AOLvF,iJGoEkD,CAE/C,AAIL,kBHjEE,mDKf0C,ALgB1C,sBAAuB,CGkExB,AAED,oBACE,aAAqB,AACrB,mBAAuB,AACvB,uBAAuB,AACvB,YAAsB,AACtB,aAAsB,AACtB,mBAA4B,AAC5B,kBAAoB,AACpB,wFGnGgD,AHoGhD,+BAAoC,AVnFlC,yBCI8B,ADH9B,yDAAqF,AOLvF,uGCX8B,CEqG/B,AAED,yBACE,WAAW,AH7FX,+IGgG8C,CAE/C,AI7GD,kBACE,cAAc,AACd,UAAU,AACV,iBAAiB,AACjB,oBAAoB,AACpB,mBAAmB,AACnB,eAAe,AdoCX,WcjC2B,AdiC3B,wBc/ByC,CAK9C,AHmDC,iDAbE,gCIpDsB,CJoEvB,AKpBD,0FhBpBE,sBCoD4B,ADnD5B,iDAA8F,AAW5F,gCC0QmB,Ce7PtB,ACvDH,oCjB0CM,iCiBzCgC,CCwBnC,ADzBH,oCjB0CM,qCiBzCgC,CCoCnC,ADrCH,qLjB0CM,oBiBzCgC,CC6D7B,AD9DT,mGjB0CM,wBiBzCgC,CCqE7B,ADtET,sDjB0CM,qCiBzCgC,CCuF/B,ADxFP,kFC8FQ,WD7F6C,CC8F9C,AP5BL,yEAbE,qCMrDkC,CNqEnC,AMlEH,mBCFE,WDG6C,ACF7C,YDE6C,ACD7C,YAAgD,CDEjD,AAFD,qCCGI,UAA+C,AAC/C,qBAPuD,AAQvD,qBARuD,CASxD,ACVH,wCnB0CM,gCmBzCmC,CCwBtC,ADzBH,wCnB0CM,oCmBzCmC,CCoCtC,ADrCH,4FnB0CM,oBmBzCmC,CCgDhC,ADjDT,gOnB0CM,wBmBzCmC,CC8DhC,AD/DT,+DnB0CM,oCmBzCmC,CCgFlC,ADjFP,8FCuFQ,WDtFgD,CCuFjD,ATrBL,+EAbE,oCQrDqC,CRqEtC,AQlEH,sBCFE,WDGmD,ACFnD,YDEmD,ACDnD,YAAsD,CDEvD,AAFD,2CCGI,UAAqD,AACrD,qBAPgE,AAQhE,qBARgE,CASjE,ACVH,WACE,gBAAgB,AAChB,mBAAmB,AACnB,kBAAkB,ArBYhB,qBCLyB,ADMzB,+CAAqF,CqBRxF,AARD,sBAMI,eAAgB,CACjB,AAGH,yBACE,WACE,eAAe,AACf,eAAe,AACf,gBAAgB,AAChB,kBAAmB,CAKpB,AATD,sBAOI,YAAa,CACd,CjBkjDJ,AkBxkDD,eACE,YAAY,AACZ,aAAa,AACb,kBAAkB,AtBehB,qBCVmB,ADWnB,yCAAqF,CsBdxF,ACJD,uBCMI,kBDLkD,ACMlD,kBDNuE,ACOvE,gBCNiB,ADOjB,kBCNoB,CDcrB,ADjBH,6BCaM,SAAkC,AAClC,wBAA8C,AAC9C,UCRiB,CDSlB,ADhBL,uBvB4CM,0BuB1C8B,CCgEjC,ADlEH,6BvB4CM,wBuB1C8B,CCqC/B,ADvCL,2DvB4CM,auB1C8B,CC8C/B,ADhDL,6BvB4CM,kCuB1C8B,CC0D/B,AD5DL,gCvBgCI,sBCoD4B,ADnD5B,gDAA8F,CwBgC7F,ADjEL,sDvB4CM,wBuB1C8B,CC0E/B,AE7EL,iBACE,mBAAoB,CACrB,AAED,iBACE,kBAAkB,AAClB,aAAa,AACb,aAAa,AACb,iBAAiB,A1BUf,qBCA6B,ADC7B,mDAAqF,C0BTxF,AAED,oBACE,iBAAkB,CACnB,ACXD,yQ3B0CM,wB2BzC+D,CCQlE,ADTH,oS3B0CM,wB2BzCiC,CCsBpC,ADnBH,sCCiCE,kBAAoB,AACpB,UALqE,AAMrE,WANqE,AAOrE,WAAgF,AAChF,YDpCiD,ACqCjD,eDrCgF,CC8G/E,AD/GH,8CCyCI,0BAAyD,CAC1D,AD1CH,yEC8CM,0BAAsD,CACvD,AD/CL,oCCqDE,WA+C6E,AA9C7E,YA+C8E,AA9C9E,kBAA0B,CA4DzB,ADnHH,2CC0DI,kBAA0B,CAC3B,AD3DH,mCCgEE,SD/DgF,ACgEhF,OAAgB,AAChB,WDjEkE,ACkElE,YDlEkE,ACmElE,kBAA4B,CAmD3B,ADvHH,0CCuEI,kBAA0B,CAC3B,ADxEH,4DCkFE,kBAAuB,AACvB,UAJuC,AAKvC,WALuC,AAMvC,WDpFiD,ACqFjD,YDrFiD,ACsFjD,kBAAyB,CAuCpB","file":"../components.css","sourcesContent":["@import \"../../../../scss/theme/mixin\";\n\n.drawer-toggle {\n  .icon-pure-menu {\n    @include theme-prop(color, secondary-on-dark);\n  }\n  &:hover {\n    .icon-pure-menu {\n      @include theme-prop(color, primary-on-dark);\n    }\n  }\n}\n","// theme mixin\n@import \"./variable\";\n@import \"./function\";\n\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $theme-property-values (_variables.scss).\n */\n\n// 给属性 $property 设置颜色 $style 值\n// 属性 $property 一般用在 color background-color border-color 等，也可用在任何可以设置颜色值的属性上\n// $style 应该是 $theme-property-values 中某个 key\n// 该 mixin 主要用来设置主题颜色值，并且设置了主题 css 变量值\n// 用户通过修改 css 变量值可以动态的修改整个主题值，比如在 body 上修改 css 变量值\n@mixin theme-color-prop($property, $style, $important) {\n  @if $important {\n    #{$property}: map-get($theme-property-values, $style) !important;\n    #{$property}: var(--theme-#{$style}, map-get($theme-property-values, $style)) !important;\n  } @else {\n    #{$property}: map-get($theme-property-values, $style);\n    #{$property}: var(--theme-#{$style}, map-get($theme-property-values, $style));\n  }\n}\n\n// 用来设置主题色对应的对比色调值，浅色还是深色\n// $style 应该是 $theme-tone-property-values 中某个 key\n// 该 mixin 除了设置了对比色调值，还设置了对应的 css 变量值\n@mixin theme-tone-prop($property, $style, $important) {\n  // 根据 $style 返回变量，主要是 light 或 dark 变量\n  $theme-var: theme-tone-var($style);\n  @if $important {\n    #{$property}: map-get($theme-tone-property-values, $style) !important;\n    #{$property}: var(--theme-#{$theme-var}, map-get($theme-tone-property-values, $style)) !important;\n  } @else {\n    #{$property}: map-get($theme-tone-property-values, $style);\n    #{$property}: var(--theme-#{$theme-var}, map-get($theme-tone-property-values, $style));\n  }\n}\n\n// 糅合 theme-color-prop 和 theme-tone-prop\n// 如果 $style 是颜色值，则直接设置颜色\n@mixin theme-prop($property, $style, $important: false) {\n  @if type-of($style) == \"color\" {\n    @if $important {\n      #{$property}: $style !important;\n    } @else {\n      #{$property}: $style;\n    }\n  } @else {\n    $color: map-get($theme-property-values, $style);\n    @if ($color) {\n      @include theme-color-prop($property, $style, $important);\n    } @else {\n      $color: map-get($theme-tone-property-values, $style);\n      @if ($color) {\n        @include theme-tone-prop($property, $style, $important);\n      } @else {\n        // 用辅助颜色来设置\n        $color: map-get($theme-assist-colors, $style);\n        @if ($color) {\n          @include theme-assist($property, $style);\n        } @else {\n          @error \"无效的主题属性值，#{$style} 必须是以下的某一 key #{map-keys($theme-property-values)}, #{map-keys($theme-tone-property-values)}\";\n        }\n      }\n    }\n  }\n}\n\n// 通过设置前后景来定制主题，该 mixin 只处理简单的 color 和 background-color ，对于更复制的需要组件单独定义\n// $style 指 $theme-property-values 或 $theme-assist-colors 中属性值\n// $fore true 指前景，false 指背景，默认 true\n@mixin theme($style, $fore: true) {\n  $themes: $theme-property-values;\n  $themes: map-merge($theme-assist-colors, $themes);\n  $color: map-get($themes, $style);\n\n  @if ($color == null) {\n    @error \"无效的主题属性值，#{$style} 必须是以下的某一 key #{map-keys($theme-property-values)}, #{map-keys($theme-assist-colors)}\";\n  }\n\n  // 色调，判断是深色还是浅色\n  $tone: theme-light-or-dark($color);\n\n  @if ($fore) {\n    color: $color;\n    color: var(--theme-#{$style}, $color);\n    background-color: map-get($theme-tone-property-values, primary-on-#{$tone});\n    background-color: var(--theme-#{$style}, map-get($theme-tone-property-values, primary-on-#{$tone}));\n  } @else {\n    color: map-get($theme-tone-property-values, primary-on-#{$tone});\n    color: var(--theme-#{$style}, map-get($theme-tone-property-values, primary-on-#{$tone}));\n    background-color: $color;\n    background-color: var(--theme-#{$style}, $color);\n  }\n}\n\n// 设置辅助颜色 mixin\n// 根据给定的 $style ($theme-assist-colors 中的 key) 和 $opacity 设置颜色\n@mixin theme-assist($property, $style, $opacity: 1) {\n  @if type-of($style) == \"color\" {\n    #{$property}: $style;\n  } @else {\n    $color: map-get($theme-assist-colors, $style);\n\n    @if ($property == \"backgroud-color\" and $opacity != 1) {\n      // 变量 --theme-#{$style} 在 theme.scss 中定义\n      $css-var: var(--theme-#{$style}, $color);\n      background-color: rgba($color, $opacity);\n\n      // 可以动态的设置颜色透明度，属于 CSS 4 color 范畴，目前浏览器支持的不是很好\n      // 可以用 rgba 来代替，但只能静态设置，不可以随着颜色和透明度的变化动态设置\n      // https://drafts.csswg.org/css-color/#modifying-colors\n      @supports (background-color: color(green a(10%))) {\n        background-color: color(#{$css-var} a(#{percentage($opacity)}));\n      }\n    } @else {\n      // 也可以使用 alpha($color); 区别是 function alpha 也可以处理 the proprietary Microsoft `alpha(opacity=20)\n      // 而 function opacity 只支持颜色值，如果不是颜色值则报错\n      $alpha: opacity($color);\n      @if ($alpha != 1) {\n        #{$property}: $color;\n      } @else {\n        #{$property}: rgba($color, $opacity);\n      }\n    }\n\n    // 因为不支持以下写法，所以只处理 $opacity == 1 的情况\n    // #{$property}: rgba(var(--theme-#{$style}, $color), $opacity);\n    @if ($opacity == 1) {\n      #{$property}: var(--theme-#{$style}, $color);\n    }\n  }\n}\n\n// 设置主题对应的背景和前景颜色 class\n// 如果 $tone 设为 true，则会给出对应的前景或背景对比颜色色调值（深色或浅色），\n// 这样可以突出对比度，方便阅读，在需要的地方可以调用该 mixin ，并且参数 $tone 设为 true 即可\n@mixin theme-classes($tone: false) {\n  // 设置 primary 和 secondary 以及浅色和深色背景颜色值\n  // .theme-primary-bg {background-color: #2196f3; background-color: var(--theme-primary, #2196f3);}\n  @each $style in map-keys($theme-property-values) {\n    @if $style == \"background\" {\n      // 背景色，用在背景上\n      // .theme-background {background-color: #fff; background-color: var(--theme-background, #fff);}\n      .theme-background {\n        @include theme-prop(background-color, background, true);\n        @if ($tone) {\n          @include theme-prop(color, primary-on-background, true);\n        }\n      }\n    } @else {\n      .theme-#{$style}-bg {\n        @include theme-prop(background-color, $style, true);\n        @if ($tone) {\n          @include theme-prop(color, primary-on-#{$style}, true);\n        }\n      }\n    }\n  }\n\n  // 通过添加该样式值，改变文本主题前景颜色值，对于主题色调($theme-tone-property-values)，不单独设置\n  // .theme-primary {color: #2196f3; color: var(--theme-primary, #2196f3);}\n  @each $style in map-keys($theme-property-values) {\n    @if $style != \"background\" {\n      .theme-#{$style} {\n        @include theme-prop(color, $style, true);\n        @if ($tone) {\n          @include theme-prop(background-color, primary-on-#{$style}, true);\n        }\n      }\n    }\n  }\n}\n\n// 设置辅助颜色对应的背景和前景颜色 class\n// 如果 $tone 设为 true，则会给出对应的前景或背景对比颜色色调值（深色或浅色），\n// 这样可以突出对比度，方便阅读，在需要的地方可以调用该 mixin ，并且参数 $tone 设为 true 即可\n@mixin theme-assist-classes($tone: false) {\n  // 辅助颜色背景色\n  // .theme-success-bg {background-color: #4caf50; background-color: var(--theme-success, #4caf50);}\n  @each $theme, $color in $theme-assist-colors {\n    .theme-#{$theme}-bg {\n      background-color: $color !important;\n      background-color: var(--theme-#{$theme}, $color) !important;\n      @if ($tone) {\n        $light-or-dark: theme-light-or-dark($color);\n        $tone-color: map-get(map-get($theme-text-colors, $light-or-dark), primary);\n        color: $tone-color !important;\n      }\n    }\n  }\n\n  // 辅助颜色前景色\n  // .theme-success {color: #4caf50; color: var(--theme-success, #4caf50);}\n  @each $theme, $color in $theme-assist-colors {\n    .theme-#{$theme} {\n      color: $color !important;\n      color: var(--theme-#{$theme}, $color) !important;\n      @if ($tone) {\n        $light-or-dark: theme-light-or-dark($color);\n        $tone-color: map-get(map-get($theme-text-colors, $light-or-dark), primary);\n        background-color: $tone-color !important;\n      }\n    }\n  }\n}\n\n// 设置灰度颜色对应的背景和前景颜色 class\n// 如果 $tone 设为 true，则会给出对应的前景或背景对比颜色色调值（深色或浅色），\n// 这样可以突出对比度，方便阅读，在需要的地方可以调用该 mixin ，并且参数 $tone 设为 true 即可\n@mixin theme-grey-classes($tone: false) {\n  // 灰度颜色前景-背景颜色值\n  @each $theme, $color in $greys {\n    .theme-grey-#{$theme} {\n      color: $color !important;\n      @if ($tone) {\n        $light-or-dark: theme-light-or-dark($color);\n        $tone-color: map-get(map-get($theme-text-colors, $light-or-dark), primary);\n        background-color: $tone-color !important;\n      }\n    }\n    .theme-grey-bg-#{$theme} {\n      background-color: $color !important;\n      @if ($tone) {\n        $light-or-dark: theme-light-or-dark($color);\n        $tone-color: map-get(map-get($theme-text-colors, $light-or-dark), primary);\n        color: $tone-color !important;\n      }\n    }\n  }\n}\n","// 自定义主题颜色\n@import \"./color_palette\";\n@import \"../base/variables/options\";\n@import \"./function\";\n\n// 定义颜色透明度\n$alpha: .16 !default;\n\n// 主题颜色，换肤一般改变这三个基本颜色即可\n// 这三种基本颜色主题，会用在所有 CSS 组件上，\n$theme-primary: #2196f3 !default; // 主颜色，使用蓝色 $blue-500 #2196f3\n$theme-secondary: #e040fb !default; // 次颜色，也叫强调(accent)颜色，使用紫色 $purple-a-200 #e040fb\n$theme-background: #fff !default; // 背景颜色，默认白色\n\n// 主题颜色浅色\n$theme-primary-light: #64b5f6 !default; // 取 $blue-300\n$theme-secondary-light: #ea80fc !default; // 取 $purple-a-100\n\n// 主题颜色更浅色\n$theme-primary-lighter: #bbdefb !default; // 取 $blue-100\n$theme-secondary-lighter: #e1bee7 !default; // 取 $purple-100\n\n// 主题颜色最浅色\n$theme-primary-lightest: #e3f2fd !default; // 取 $blue-50\n$theme-secondary-lightest: #f3e5f5 !default; // 取 $purple-50\n\n// 主题颜色深色\n$theme-primary-dark: #1976d2 !default; // 取 $blue-700\n$theme-secondary-dark: #d500f9 !default; // 取 $purple-a-400\n\n// 主题颜色更深色\n$theme-primary-darker: #1565c0 !default; // 取 $blue-800\n$theme-secondary-darker: #aa00ff !default; // 取 $purple-a-700\n\n// 主题颜色最深色\n$theme-primary-darkest: #0d47a1 !default; // 取 $blue-900\n$theme-secondary-darkest: #4a148c !default; // 取 $purple-900\n\n// 主题颜色透明色，有的地方需要设置透明的背景色，这时可以使用该变量，比如波纹组件中\n// 如果浏览器支持了 CSS module，我们可以动态的修改 color 值，直接使用 $theme-primary 加透明参数值即可，只是目前浏览器还不支持。\n// 关于 CSS Color Level 4 提供了大量关于 Color 的处理，只是好多还没有实现，未来这些功能都实现后，CSS Color 的处理将变得更方便，更灵活，期待中......\n// https://www.w3.org/TR/2016/WD-css-color-4-20160705/\n$theme-primary-alpha: rgba($theme-primary, $alpha) !default;\n$theme-secondary-alpha: rgba($theme-secondary, $alpha) !default;\n\n// 浅色或深色色调，给出基本颜色的对比色调， light or dark\n$theme-primary-tone: theme-light-or-dark($theme-primary);\n$theme-secondary-tone: theme-light-or-dark($theme-secondary);\n\n// 主题颜色浅色对比色调\n$theme-primary-light-tone: theme-light-or-dark($theme-primary-light);\n$theme-secondary-light-tone: theme-light-or-dark($theme-secondary-light);\n\n// 主题颜色更浅色对比色调\n$theme-primary-lighter-tone: theme-light-or-dark($theme-primary-lighter);\n$theme-secondary-lighter-tone: theme-light-or-dark($theme-secondary-lighter);\n\n// 主题颜色最浅色对比色调\n$theme-primary-lightest-tone: theme-light-or-dark($theme-primary-lightest);\n$theme-secondary-lightest-tone: theme-light-or-dark($theme-secondary-lightest);\n\n// 主题颜色深色对比色调\n$theme-primary-dark-tone: theme-light-or-dark($theme-primary-dark);\n$theme-secondary-dark-tone: theme-light-or-dark($theme-secondary-dark);\n\n// 主题颜色更深色对比色调\n$theme-primary-darker-tone: theme-light-or-dark($theme-primary-darker);\n$theme-secondary-darker-tone: theme-light-or-dark($theme-secondary-darker);\n\n// 主题颜色最深色对比色调\n$theme-primary-darkest-tone: theme-light-or-dark($theme-primary-darkest);\n$theme-secondary-darkest-tone: theme-light-or-dark($theme-secondary-darkest);\n\n// 主题颜色透明色对比色调\n$theme-primary-alpha-tone: theme-light-or-dark($theme-primary-alpha);\n$theme-secondary-alpha-tone: theme-light-or-dark($theme-secondary-alpha);\n\n// 背景色对比色调\n$theme-background-tone: theme-light-or-dark($theme-background);\n\n// 定义文本默认颜色，默认颜色深色用黑色，浅色用白色\n// 分为基本颜色、次要颜色、提示性颜色和禁用颜色，分别用在基础颜色、过渡颜色、提示或暗色和表单 disabled readonly 以及其他禁用\n$theme-text-colors: (\n  dark: (\n    primary: rgba(0, 0, 0, .87),\n    secondary: rgba(0, 0, 0, .54),\n    hint: rgba(0, 0, 0, .38),\n    disabled: rgba(0, 0, 0, .38)\n  ),\n  light: (\n    primary: #ffffff,\n    secondary: rgba(255, 255, 255, .7),\n    hint: rgba(255, 255, 255, .5),\n    disabled: rgba(255, 255, 255, .5)\n  )\n);\n\n// 主题属性值\n$theme-property-values: (\n  // 主题颜色\n  primary: $theme-primary,\n  secondary: $theme-secondary,\n  background: $theme-background,\n\n  // 主题颜色浅色\n  primary-light: $theme-primary-light,\n  secondary-light: $theme-secondary-light,\n\n  // 主题颜色更浅色\n  primary-lighter: $theme-primary-lighter,\n  secondary-lighter: $theme-secondary-lighter,\n\n  // 主题颜色最浅色\n  primary-lightest: $theme-primary-lightest,\n  secondary-lightest: $theme-secondary-lightest,\n\n  // 主题颜色深色\n  primary-dark: $theme-primary-dark,\n  secondary-dark: $theme-secondary-dark,\n\n  // 主题颜色更深色\n  primary-darker: $theme-primary-darker,\n  secondary-darker: $theme-secondary-darker,\n\n  // 主题颜色最深色\n  primary-darkest: $theme-primary-darkest,\n  secondary-darkest: $theme-secondary-darkest,\n\n  // 主题颜色透明色\n  primary-alpha: $theme-primary-alpha,\n  secondary-alpha: $theme-secondary-alpha,\n\n) !default;\n\n// 主题基本颜色对比色调值集合，根据主题基本颜色计算出对应的对比色调值，浅色还是深色色调值\n$theme-tone-property-values: (\n  // 可以用在 background-color border-color 或 color 等可以设置颜色的属性上\n  // 当 map-get($theme-text-colors, $theme-primary-tone) 返回 light 时，对应浅色值\n  // 当 map-get($theme-text-colors, $theme-primary-tone) 返回 dark 时，对应深色值\n\n  // 用在 $theme-primary 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary: map-get(map-get($theme-text-colors, $theme-primary-tone), primary),\n  secondary-on-primary: map-get(map-get($theme-text-colors, $theme-primary-tone), secondary),\n  hint-on-primary: map-get(map-get($theme-text-colors, $theme-primary-tone), hint),\n  disabled-on-primary: map-get(map-get($theme-text-colors, $theme-primary-tone), disabled),\n\n  // 用在 $theme-primary-light 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary-light: map-get(map-get($theme-text-colors, $theme-primary-light-tone), primary),\n  secondary-on-primary-light: map-get(map-get($theme-text-colors, $theme-primary-light-tone), secondary),\n  hint-on-primary-light: map-get(map-get($theme-text-colors, $theme-primary-light-tone), hint),\n  disabled-on-primary-light: map-get(map-get($theme-text-colors, $theme-primary-light-tone), disabled),\n\n  // 用在 $theme-primary-lighter 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary-lighter: map-get(map-get($theme-text-colors, $theme-primary-lighter-tone), primary),\n  secondary-on-primary-lighter: map-get(map-get($theme-text-colors, $theme-primary-lighter-tone), secondary),\n  hint-on-primary-lighter: map-get(map-get($theme-text-colors, $theme-primary-lighter-tone), hint),\n  disabled-on-primary-lighter: map-get(map-get($theme-text-colors, $theme-primary-lighter-tone), disabled),\n\n  // 用在 $theme-primary-lightest 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary-lightest: map-get(map-get($theme-text-colors, $theme-primary-lightest-tone), primary),\n  secondary-on-primary-lightest: map-get(map-get($theme-text-colors, $theme-primary-lightest-tone), secondary),\n  hint-on-primary-lightest: map-get(map-get($theme-text-colors, $theme-primary-lightest-tone), hint),\n  disabled-on-primary-lightest: map-get(map-get($theme-text-colors, $theme-primary-lightest-tone), disabled),\n\n  // 用在 $theme-primary-dark 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary-dark: map-get(map-get($theme-text-colors, $theme-primary-dark-tone), primary),\n  secondary-on-primary-dark: map-get(map-get($theme-text-colors, $theme-primary-dark-tone), secondary),\n  hint-on-primary-dark: map-get(map-get($theme-text-colors, $theme-primary-dark-tone), hint),\n  disabled-on-primary-dark: map-get(map-get($theme-text-colors, $theme-primary-dark-tone), disabled),\n\n  // 用在 $theme-primary-darker 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary-darker: map-get(map-get($theme-text-colors, $theme-primary-darker-tone), primary),\n  secondary-on-primary-darker: map-get(map-get($theme-text-colors, $theme-primary-darker-tone), secondary),\n  hint-on-primary-darker: map-get(map-get($theme-text-colors, $theme-primary-darker-tone), hint),\n  disabled-on-primary-darker: map-get(map-get($theme-text-colors, $theme-primary-darker-tone), disabled),\n\n  // 用在 $theme-primary-darkest 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary-darkest: map-get(map-get($theme-text-colors, $theme-primary-darkest-tone), primary),\n  secondary-on-primary-darkest: map-get(map-get($theme-text-colors, $theme-primary-darkest-tone), secondary),\n  hint-on-primary-darkest: map-get(map-get($theme-text-colors, $theme-primary-darkest-tone), hint),\n  disabled-on-primary-darkest: map-get(map-get($theme-text-colors, $theme-primary-darkest-tone), disabled),\n\n  // 用在主题颜色主颜色透明色 $theme-primary-alpha 上的 primary secondary hint 和 disabled 对比颜色，深色主题用浅色对比色调\n  primary-on-primary-alpha: map-get(map-get($theme-text-colors, $theme-primary-alpha-tone), primary),\n  secondary-on-primary-alpha: map-get(map-get($theme-text-colors, $theme-primary-alpha-tone), secondary),\n  hint-on-primary-alpha: map-get(map-get($theme-text-colors, $theme-primary-alpha-tone), hint),\n  disabled-on-primary-alpha: map-get(map-get($theme-text-colors, $theme-primary-alpha-tone), disabled),\n\n  // 用在 $theme-secondary 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary: map-get(map-get($theme-text-colors, $theme-secondary-tone), primary),\n  secondary-on-secondary: map-get(map-get($theme-text-colors, $theme-secondary-tone), secondary),\n  hint-on-secondary: map-get(map-get($theme-text-colors, $theme-secondary-tone), hint),\n  disabled-on-secondary: map-get(map-get($theme-text-colors, $theme-secondary-tone), disabled),\n\n  // 用在 $theme-secondary-light 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary-light: map-get(map-get($theme-text-colors, $theme-secondary-light-tone), primary),\n  secondary-on-secondary-light: map-get(map-get($theme-text-colors, $theme-secondary-light-tone), secondary),\n  hint-on-secondary-light: map-get(map-get($theme-text-colors, $theme-secondary-light-tone), hint),\n  disabled-on-secondary-light: map-get(map-get($theme-text-colors, $theme-secondary-light-tone), disabled),\n\n  // 用在 $theme-secondary-lighter 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary-lighter: map-get(map-get($theme-text-colors, $theme-secondary-lighter-tone), primary),\n  secondary-on-secondary-lighter: map-get(map-get($theme-text-colors, $theme-secondary-lighter-tone), secondary),\n  hint-on-secondary-lighter: map-get(map-get($theme-text-colors, $theme-secondary-lighter-tone), hint),\n  disabled-on-secondary-lighter: map-get(map-get($theme-text-colors, $theme-secondary-lighter-tone), disabled),\n\n  // 用在 $theme-secondary-lightest 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary-lightest: map-get(map-get($theme-text-colors, $theme-secondary-lightest-tone), primary),\n  secondary-on-secondary-lightest: map-get(map-get($theme-text-colors, $theme-secondary-lightest-tone), secondary),\n  hint-on-secondary-lightest: map-get(map-get($theme-text-colors, $theme-secondary-lightest-tone), hint),\n  disabled-on-secondary-lightest: map-get(map-get($theme-text-colors, $theme-secondary-lightest-tone), disabled),\n\n  // 用在 $theme-secondary-dark 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary-dark: map-get(map-get($theme-text-colors, $theme-secondary-dark-tone), primary),\n  secondary-on-secondary-dark: map-get(map-get($theme-text-colors, $theme-secondary-dark-tone), secondary),\n  hint-on-secondary-dark: map-get(map-get($theme-text-colors, $theme-secondary-dark-tone), hint),\n  disabled-on-secondary-dark: map-get(map-get($theme-text-colors, $theme-secondary-dark-tone), disabled),\n\n  // 用在 $theme-secondary-darker 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary-darker: map-get(map-get($theme-text-colors, $theme-secondary-darker-tone), primary),\n  secondary-on-secondary-darker: map-get(map-get($theme-text-colors, $theme-secondary-darker-tone), secondary),\n  hint-on-secondary-darker: map-get(map-get($theme-text-colors, $theme-secondary-darker-tone), hint),\n  disabled-on-secondary-darker: map-get(map-get($theme-text-colors, $theme-secondary-darker-tone), disabled),\n\n  // 用在 $theme-secondary-darkest 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary-darkest: map-get(map-get($theme-text-colors, $theme-secondary-darkest-tone), primary),\n  secondary-on-secondary-darkest: map-get(map-get($theme-text-colors, $theme-secondary-darkest-tone), secondary),\n  hint-on-secondary-darkest: map-get(map-get($theme-text-colors, $theme-secondary-darkest-tone), hint),\n  disabled-on-secondary-darkest: map-get(map-get($theme-text-colors, $theme-secondary-darkest-tone), disabled),\n\n  // 用在主题颜色次颜色透明色 $theme-secondary-alpha 上的 primary secondary hint 和 disabled 对比颜色，深色主题用浅色对比色调\n  primary-on-secondary-alpha: map-get(map-get($theme-text-colors, $theme-secondary-alpha-tone), primary),\n  secondary-on-secondary-alpha: map-get(map-get($theme-text-colors, $theme-secondary-alpha-tone), secondary),\n  hint-on-secondary-alpha: map-get(map-get($theme-text-colors, $theme-secondary-alpha-tone), hint),\n  disabled-on-secondary-alpha: map-get(map-get($theme-text-colors, $theme-secondary-alpha-tone), disabled),\n\n  // 用在 $theme-background 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-background: map-get(map-get($theme-text-colors, $theme-background-tone), primary),\n  secondary-on-background: map-get(map-get($theme-text-colors, $theme-background-tone), secondary),\n  hint-on-background: map-get(map-get($theme-text-colors, $theme-background-tone), hint),\n  disabled-on-background: map-get(map-get($theme-text-colors, $theme-background-tone), disabled),\n\n  // 用在浅色主题上的 primary secondary hint 和 disabled 对比色调，浅色主题用深色对比色调\n  primary-on-light: map-get(map-get($theme-text-colors, dark), primary),\n  secondary-on-light: map-get(map-get($theme-text-colors, dark), secondary),\n  hint-on-light: map-get(map-get($theme-text-colors, dark), hint),\n  disabled-on-light: map-get(map-get($theme-text-colors, dark), disabled),\n\n  // 用在深色主题上的 primary secondary hint 和 disabled 对比颜色，深色主题用浅色对比色调\n  primary-on-dark: map-get(map-get($theme-text-colors, light), primary),\n  secondary-on-dark: map-get(map-get($theme-text-colors, light), secondary),\n  hint-on-dark: map-get(map-get($theme-text-colors, light), hint),\n  disabled-on-dark: map-get(map-get($theme-text-colors, light), disabled),\n) !default;\n\n// 除了三种基本颜色外，又定义了成功 success 、信息 info、警告 warning 、错误 error 四种辅助颜色，\n// 这四种颜色主要用在背景，文本，按钮等上，用来区分文本颜色和背景，以及表单样式（比如校验失败和成功的颜色）等\n$theme-assist: (\"success\", \"info\", \"warning\", \"error\") !default;\n\n// 辅助颜色值\n$theme-assist-colors: (\n  success: #43a047, // $green-600\n  info: #0097a7, // $cyan-700\n  warning: #fb8c00, // $orange-600\n  error: #f44336, //$red-500\n\n  // 辅助颜色浅色\n  success-light: #81c784, // $green-300\n  info-light: #4dd0e1, // $cyan-300\n  warning-light: #ffb74d, // $orange-300\n  error-light: #e57373, // $red-300\n\n  // 辅助颜色更浅色\n  success-lighter: #c8e6c9, // $green-100\n  info-lighter: #b2ebf2, // $cyan-100\n  warning-lighter: #ffe0b2, // $orange-100\n  error-lighter: #ffcdd2, // $red-100\n\n  // 辅助颜色深色\n  success-dark: #2e7d32, // $green-800\n  info-dark: #00838f, // $cyan-800\n  warning-dark: #ef6c00, // $orange-800\n  error-dark: #c62828, // $red-800\n\n  // 辅助颜色透明色\n  success-alpha: rgba(#4caf50, $alpha),\n  info-alpha: rgba(#00bcd4, $alpha),\n  warning-alpha: rgba(#ff9800, $alpha),\n  error-alpha: rgba(#f44336, $alpha),\n) !default;\n\n// 常用灰色颜色，提供了黑色透明度和灰色本身颜色两种方案，根据配置项 $enable-transparent 来选择其中一种方案\n// 默认使用黑色透明度，可以通过修改 base/variables/_options.scss 中变量 $enable-transparent 来选择不同的方案\n\n// 灰色颜色，对于灰色颜色，这里没有采用 css 变量处理\n$greys: (\n  50: #fafafa,\n  100: #f5f5f5,\n  200: #eeeeee,\n  300: #e0e0e0,\n  400: #bdbdbd,\n  500: #9e9e9e,\n  600: #757575,\n  700: #616161,\n  800: #424242,\n  900: #212121\n) !default;\n\n// 灰色透明色\n$greys-transparent: (\n  50: rgba(0, 0, 0, .02), // 相当于 #fafafa;\n  100: rgba(0, 0, 0, .04), // 相当于 #f5f5f5\n  200: rgba(0, 0, 0, .065), // 相当于 #eeeeee\n  300: rgba(0, 0, 0, .12), // 相当于 #e0e0e0\n  400: rgba(0, 0, 0, .26), // 相当于 #bdbdbd\n  500: rgba(0, 0, 0, .38), // 相当于 #9e9e9e\n  600: rgba(0, 0, 0, .54), // 相当于 #757575\n  700: rgba(0, 0, 0, .62), // 相当于 #616161\n  800: rgba(0, 0, 0, .74), // 相当于 #424242\n  900: rgba(0, 0, 0, .87) // 相当于 #212121\n) !default;\n\n// 白色、黑色和透明色\n$white: #ffffff !default;\n$black: #000000 !default;\n$transparent: rgba(0, 0, 0, 0) !default; // 透明色\n\n$grey-color-50: if($enable-transparent, map-get($greys-transparent, 50), map-get($greys, 50)) !default;\n$grey-color-100: if($enable-transparent, map-get($greys-transparent, 100), map-get($greys, 100)) !default;\n$grey-color-200: if($enable-transparent, map-get($greys-transparent, 200), map-get($greys, 200)) !default;\n$grey-color-300: if($enable-transparent, map-get($greys-transparent, 300), map-get($greys, 300)) !default;\n$grey-color-400: if($enable-transparent, map-get($greys-transparent, 400), map-get($greys, 400)) !default;\n$grey-color-500: if($enable-transparent, map-get($greys-transparent, 500), map-get($greys, 500)) !default;\n$grey-color-600: if($enable-transparent, map-get($greys-transparent, 600), map-get($greys, 600)) !default;\n$grey-color-700: if($enable-transparent, map-get($greys-transparent, 700), map-get($greys, 700)) !default;\n$grey-color-800: if($enable-transparent, map-get($greys-transparent, 800), map-get($greys, 800)) !default;\n$grey-color-900: if($enable-transparent, map-get($greys-transparent, 900), map-get($greys, 900)) !default;\n","// 页面底部样式\n\n@import \"../../../../scss/theme/variable\";\n\n.footer-assist {\n  // 此处的数值等于 footer 的高度 + 预留的间距\n  padding-top: 4.5rem;\n}\n\n.footer {\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  padding: 1rem 0;\n  border-top: 1px solid $grey-color-300;\n  color: map-get(map-get($theme-text-colors, dark), secondary);\n}\n\n","@import \"../../../../scss/theme/variable\";\n@import \"../../../../scss/theme/mixin\";\n\n.perfect-menu {\n  &.menu, .menu {\n    margin-left: 0;\n  }\n  .menu-title {\n    padding: .5rem 1rem;\n  }\n\n  .menu-sub-title {\n    &:hover {\n      @include theme-prop(color, primary);\n    }\n\n    &.active {\n      border-right: 3px solid;\n      @include theme-prop(color, primary-darker);\n      @include theme-prop(background-color, primary-lightest);\n\n      // 可以动态的设置颜色透明度，属于 CSS 4 color 范畴，目前浏览器都不支持\n      // 可以用 rgba 来代替，但只能静态设置，不可以随着颜色和透明度的变化动态设置\n      // https://drafts.csswg.org/css-color/#modifying-colors\n      // https://www.w3cplus.com/css4/color-mod.html\n      @supports (background-color: color(green a(10%))) {\n        $bg-color: var(--theme-primary-lightest);\n        $opacity: .8;\n        background-color: color(#{$bg-color} a(#{percentage($opacity)}));\n      }\n    }\n  }\n}\n\n","@charset \"UTF-8\";\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $theme-property-values (_variables.scss).\n */\n.drawer-toggle .icon-pure-menu {\n  color: rgba(255, 255, 255, 0.7);\n  color: var(--theme-light-secondary, rgba(255, 255, 255, 0.7));\n}\n\n.drawer-toggle:hover .icon-pure-menu {\n  color: #ffffff;\n  color: var(--theme-light-primary, #ffffff);\n}\n\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n.footer-assist {\n  padding-top: 4.5rem;\n}\n\n.footer {\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  padding: 1rem 0;\n  border-top: 1px solid rgba(0, 0, 0, 0.12);\n  color: rgba(0, 0, 0, 0.54);\n}\n\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $theme-property-values (_variables.scss).\n */\n.perfect-menu.menu, .perfect-menu .menu {\n  margin-left: 0;\n}\n\n.perfect-menu .menu-title {\n  padding: .5rem 1rem;\n}\n\n.perfect-menu .menu-sub-title:hover {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n}\n\n.perfect-menu .menu-sub-title.active {\n  border-right: 3px solid;\n  color: #1565c0;\n  color: var(--theme-primary-darker, #1565c0);\n  background-color: #e3f2fd;\n  background-color: var(--theme-primary-lightest, #e3f2fd);\n}\n\n@supports (background-color: color(green a(10%))) {\n  .perfect-menu .menu-sub-title.active {\n    background-color: color(var(--theme-primary-lightest) a(80%));\n  }\n}\n\n.catalogue-counter {\n  counter-reset: outline1;\n}\n\n.catalogue-counter > h1::before, .catalogue-counter > h2::before, .catalogue-counter > h3::before, .catalogue-counter > h4::before, .catalogue-counter > h5::before, .catalogue-counter > h6::before {\n  margin-right: .5rem;\n}\n\n.catalogue-counter > h1 {\n  counter-reset: outline2;\n}\n\n.catalogue-counter > h1::before {\n  content: counter(outline1, decimal) \". \";\n  counter-increment: outline1;\n}\n\n.catalogue-counter > h1 ~ h2 {\n  counter-reset: outline3;\n}\n\n.catalogue-counter > h1 ~ h2::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\";\n  counter-increment: outline2;\n}\n\n.catalogue-counter > h1 ~ h2 ~ h3 {\n  counter-reset: outline4;\n}\n\n.catalogue-counter > h1 ~ h2 ~ h3::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\";\n  counter-increment: outline3;\n}\n\n.catalogue-counter > h1 ~ h2 ~ h3 ~ h4 {\n  counter-reset: outline5;\n}\n\n.catalogue-counter > h1 ~ h2 ~ h3 ~ h4::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\";\n  counter-increment: outline4;\n}\n\n.catalogue-counter > h1 ~ h2 ~ h3 ~ h4 ~ h5 {\n  counter-reset: outline6;\n}\n\n.catalogue-counter > h1 ~ h2 ~ h3 ~ h4 ~ h5::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\" counter(outline5, decimal) \".\";\n  counter-increment: outline5;\n}\n\n.catalogue-counter > h1 ~ h2 ~ h3 ~ h4 ~ h5 ~ h6::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\" counter(outline5, decimal) \".\" counter(outline6, decimal) \".\";\n  counter-increment: outline6;\n}\n\n.catalogue-counter > h2 {\n  counter-reset: outline2;\n}\n\n.catalogue-counter > h2::before {\n  content: counter(outline1, decimal) \".\";\n  counter-increment: outline1;\n}\n\n.catalogue-counter > h2 ~ h3 {\n  counter-reset: outline3;\n}\n\n.catalogue-counter > h2 ~ h3::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\";\n  counter-increment: outline2;\n}\n\n.catalogue-counter > h2 ~ h3 ~ h4 {\n  counter-reset: outline4;\n}\n\n.catalogue-counter > h2 ~ h3 ~ h4::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\";\n  counter-increment: outline3;\n}\n\n.catalogue-counter > h2 ~ h3 ~ h4 ~ h5 {\n  counter-reset: outline5;\n}\n\n.catalogue-counter > h2 ~ h3 ~ h4 ~ h5::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\";\n  counter-increment: outline4;\n}\n\n.catalogue-counter > h2 ~ h3 ~ h4 ~ h5 ~ h6::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\" counter(outline5, decimal) \".\";\n  counter-increment: outline5;\n}\n\n.catalogue-counter > h3 {\n  counter-reset: outline2;\n}\n\n.catalogue-counter > h3::before {\n  content: counter(outline1, decimal) \".\";\n  counter-increment: outline1;\n}\n\n.catalogue-counter > h3 ~ h4 {\n  counter-reset: outline3;\n}\n\n.catalogue-counter > h3 ~ h4::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\";\n  counter-increment: outline2;\n}\n\n.catalogue-counter > h3 ~ h4 ~ h5 {\n  counter-reset: outline4;\n}\n\n.catalogue-counter > h3 ~ h4 ~ h5::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\";\n  counter-increment: outline3;\n}\n\n.catalogue-counter > h3 ~ h4 ~ h5 ~ h6::before {\n  content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\";\n  counter-increment: outline4;\n}\n\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $theme-property-values (_variables.scss).\n */\n.theme-demo [class*=\"theme\"] {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 200px;\n  height: 100px;\n  padding: 0 .5rem;\n  margin: 0 1.5rem 2rem;\n  border-radius: 3px;\n  box-shadow: 0 3px 5px -1px rgba(0, 0, 0, 0.2), 0 5px 8px 0 rgba(0, 0, 0, 0.14), 0 1px 14px 0 rgba(0, 0, 0, 0.12);\n}\n\n.theme-demo .theme-primary-bg {\n  background-color: #2196f3 !important;\n  background-color: var(--theme-primary, #2196f3) !important;\n  color: #ffffff !important;\n  color: var(--theme-light-primary, #ffffff) !important;\n}\n\n.theme-demo .theme-secondary-bg {\n  background-color: #e040fb !important;\n  background-color: var(--theme-secondary, #e040fb) !important;\n  color: #ffffff !important;\n  color: var(--theme-light-primary, #ffffff) !important;\n}\n\n.theme-demo .theme-background {\n  background-color: #fff !important;\n  background-color: var(--theme-background, #fff) !important;\n  color: rgba(0, 0, 0, 0.87) !important;\n  color: var(--theme-dark-primary, rgba(0, 0, 0, 0.87)) !important;\n}\n\n.theme-demo .theme-primary-light-bg {\n  background-color: #64b5f6 !important;\n  background-color: var(--theme-primary-light, #64b5f6) !important;\n  color: rgba(0, 0, 0, 0.87) !important;\n  color: var(--theme-dark-primary, rgba(0, 0, 0, 0.87)) !important;\n}\n\n.theme-demo .theme-secondary-light-bg {\n  background-color: #ea80fc !important;\n  background-color: var(--theme-secondary-light, #ea80fc) !important;\n  color: rgba(0, 0, 0, 0.87) !important;\n  color: var(--theme-dark-primary, rgba(0, 0, 0, 0.87)) !important;\n}\n\n.theme-demo .theme-primary-lighter-bg {\n  background-color: #bbdefb !important;\n  background-color: var(--theme-primary-lighter, #bbdefb) !important;\n  color: rgba(0, 0, 0, 0.87) !important;\n  color: var(--theme--primary, rgba(0, 0, 0, 0.87)) !important;\n}\n\n.theme-demo .theme-secondary-lighter-bg {\n  background-color: #e1bee7 !important;\n  background-color: var(--theme-secondary-lighter, #e1bee7) !important;\n  color: rgba(0, 0, 0, 0.87) !important;\n  color: var(--theme--primary, rgba(0, 0, 0, 0.87)) !important;\n}\n\n.theme-demo .theme-primary-lightest-bg {\n  background-color: #e3f2fd !important;\n  background-color: var(--theme-primary-lightest, #e3f2fd) !important;\n  color: rgba(0, 0, 0, 0.87) !important;\n  color: var(--theme--primary, rgba(0, 0, 0, 0.87)) !important;\n}\n\n.theme-demo .theme-secondary-lightest-bg {\n  background-color: #f3e5f5 !important;\n  background-color: var(--theme-secondary-lightest, #f3e5f5) !important;\n  color: rgba(0, 0, 0, 0.87) !important;\n  color: var(--theme--primary, rgba(0, 0, 0, 0.87)) !important;\n}\n\n.theme-demo .theme-primary-dark-bg {\n  background-color: #1976d2 !important;\n  background-color: var(--theme-primary-dark, #1976d2) !important;\n  color: #ffffff !important;\n  color: var(--theme-light-primary, #ffffff) !important;\n}\n\n.theme-demo .theme-secondary-dark-bg {\n  background-color: #d500f9 !important;\n  background-color: var(--theme-secondary-dark, #d500f9) !important;\n  color: #ffffff !important;\n  color: var(--theme-light-primary, #ffffff) !important;\n}\n\n.theme-demo .theme-primary-darker-bg {\n  background-color: #1565c0 !important;\n  background-color: var(--theme-primary-darker, #1565c0) !important;\n  color: #ffffff !important;\n  color: var(--theme--primary, #ffffff) !important;\n}\n\n.theme-demo .theme-secondary-darker-bg {\n  background-color: #aa00ff !important;\n  background-color: var(--theme-secondary-darker, #aa00ff) !important;\n  color: #ffffff !important;\n  color: var(--theme--primary, #ffffff) !important;\n}\n\n.theme-demo .theme-primary-darkest-bg {\n  background-color: #0d47a1 !important;\n  background-color: var(--theme-primary-darkest, #0d47a1) !important;\n  color: #ffffff !important;\n  color: var(--theme--primary, #ffffff) !important;\n}\n\n.theme-demo .theme-secondary-darkest-bg {\n  background-color: #4a148c !important;\n  background-color: var(--theme-secondary-darkest, #4a148c) !important;\n  color: #ffffff !important;\n  color: var(--theme--primary, #ffffff) !important;\n}\n\n.theme-demo .theme-primary-alpha-bg {\n  background-color: rgba(33, 150, 243, 0.16) !important;\n  background-color: var(--theme-primary-alpha, rgba(33, 150, 243, 0.16)) !important;\n  color: #ffffff !important;\n  color: var(--theme--primary, #ffffff) !important;\n}\n\n.theme-demo .theme-secondary-alpha-bg {\n  background-color: rgba(224, 64, 251, 0.16) !important;\n  background-color: var(--theme-secondary-alpha, rgba(224, 64, 251, 0.16)) !important;\n  color: #ffffff !important;\n  color: var(--theme--primary, #ffffff) !important;\n}\n\n.theme-demo .theme-primary {\n  color: #2196f3 !important;\n  color: var(--theme-primary, #2196f3) !important;\n  background-color: #ffffff !important;\n  background-color: var(--theme-light-primary, #ffffff) !important;\n}\n\n.theme-demo .theme-secondary {\n  color: #e040fb !important;\n  color: var(--theme-secondary, #e040fb) !important;\n  background-color: #ffffff !important;\n  background-color: var(--theme-light-primary, #ffffff) !important;\n}\n\n.theme-demo .theme-primary-light {\n  color: #64b5f6 !important;\n  color: var(--theme-primary-light, #64b5f6) !important;\n  background-color: rgba(0, 0, 0, 0.87) !important;\n  background-color: var(--theme-dark-primary, rgba(0, 0, 0, 0.87)) !important;\n}\n\n.theme-demo .theme-secondary-light {\n  color: #ea80fc !important;\n  color: var(--theme-secondary-light, #ea80fc) !important;\n  background-color: rgba(0, 0, 0, 0.87) !important;\n  background-color: var(--theme-dark-primary, rgba(0, 0, 0, 0.87)) !important;\n}\n\n.theme-demo .theme-primary-lighter {\n  color: #bbdefb !important;\n  color: var(--theme-primary-lighter, #bbdefb) !important;\n  background-color: rgba(0, 0, 0, 0.87) !important;\n  background-color: var(--theme--primary, rgba(0, 0, 0, 0.87)) !important;\n}\n\n.theme-demo .theme-secondary-lighter {\n  color: #e1bee7 !important;\n  color: var(--theme-secondary-lighter, #e1bee7) !important;\n  background-color: rgba(0, 0, 0, 0.87) !important;\n  background-color: var(--theme--primary, rgba(0, 0, 0, 0.87)) !important;\n}\n\n.theme-demo .theme-primary-lightest {\n  color: #e3f2fd !important;\n  color: var(--theme-primary-lightest, #e3f2fd) !important;\n  background-color: rgba(0, 0, 0, 0.87) !important;\n  background-color: var(--theme--primary, rgba(0, 0, 0, 0.87)) !important;\n}\n\n.theme-demo .theme-secondary-lightest {\n  color: #f3e5f5 !important;\n  color: var(--theme-secondary-lightest, #f3e5f5) !important;\n  background-color: rgba(0, 0, 0, 0.87) !important;\n  background-color: var(--theme--primary, rgba(0, 0, 0, 0.87)) !important;\n}\n\n.theme-demo .theme-primary-dark {\n  color: #1976d2 !important;\n  color: var(--theme-primary-dark, #1976d2) !important;\n  background-color: #ffffff !important;\n  background-color: var(--theme-light-primary, #ffffff) !important;\n}\n\n.theme-demo .theme-secondary-dark {\n  color: #d500f9 !important;\n  color: var(--theme-secondary-dark, #d500f9) !important;\n  background-color: #ffffff !important;\n  background-color: var(--theme-light-primary, #ffffff) !important;\n}\n\n.theme-demo .theme-primary-darker {\n  color: #1565c0 !important;\n  color: var(--theme-primary-darker, #1565c0) !important;\n  background-color: #ffffff !important;\n  background-color: var(--theme--primary, #ffffff) !important;\n}\n\n.theme-demo .theme-secondary-darker {\n  color: #aa00ff !important;\n  color: var(--theme-secondary-darker, #aa00ff) !important;\n  background-color: #ffffff !important;\n  background-color: var(--theme--primary, #ffffff) !important;\n}\n\n.theme-demo .theme-primary-darkest {\n  color: #0d47a1 !important;\n  color: var(--theme-primary-darkest, #0d47a1) !important;\n  background-color: #ffffff !important;\n  background-color: var(--theme--primary, #ffffff) !important;\n}\n\n.theme-demo .theme-secondary-darkest {\n  color: #4a148c !important;\n  color: var(--theme-secondary-darkest, #4a148c) !important;\n  background-color: #ffffff !important;\n  background-color: var(--theme--primary, #ffffff) !important;\n}\n\n.theme-demo .theme-primary-alpha {\n  color: rgba(33, 150, 243, 0.16) !important;\n  color: var(--theme-primary-alpha, rgba(33, 150, 243, 0.16)) !important;\n  background-color: #ffffff !important;\n  background-color: var(--theme--primary, #ffffff) !important;\n}\n\n.theme-demo .theme-secondary-alpha {\n  color: rgba(224, 64, 251, 0.16) !important;\n  color: var(--theme-secondary-alpha, rgba(224, 64, 251, 0.16)) !important;\n  background-color: #ffffff !important;\n  background-color: var(--theme--primary, #ffffff) !important;\n}\n\n.theme-demo .theme-success-bg {\n  background-color: #43a047 !important;\n  background-color: var(--theme-success, #43a047) !important;\n  color: #ffffff !important;\n}\n\n.theme-demo .theme-info-bg {\n  background-color: #0097a7 !important;\n  background-color: var(--theme-info, #0097a7) !important;\n  color: #ffffff !important;\n}\n\n.theme-demo .theme-warning-bg {\n  background-color: #fb8c00 !important;\n  background-color: var(--theme-warning, #fb8c00) !important;\n  color: rgba(0, 0, 0, 0.87) !important;\n}\n\n.theme-demo .theme-error-bg {\n  background-color: #f44336 !important;\n  background-color: var(--theme-error, #f44336) !important;\n  color: #ffffff !important;\n}\n\n.theme-demo .theme-success-light-bg {\n  background-color: #81c784 !important;\n  background-color: var(--theme-success-light, #81c784) !important;\n  color: rgba(0, 0, 0, 0.87) !important;\n}\n\n.theme-demo .theme-info-light-bg {\n  background-color: #4dd0e1 !important;\n  background-color: var(--theme-info-light, #4dd0e1) !important;\n  color: rgba(0, 0, 0, 0.87) !important;\n}\n\n.theme-demo .theme-warning-light-bg {\n  background-color: #ffb74d !important;\n  background-color: var(--theme-warning-light, #ffb74d) !important;\n  color: rgba(0, 0, 0, 0.87) !important;\n}\n\n.theme-demo .theme-error-light-bg {\n  background-color: #e57373 !important;\n  background-color: var(--theme-error-light, #e57373) !important;\n  color: rgba(0, 0, 0, 0.87) !important;\n}\n\n.theme-demo .theme-success-lighter-bg {\n  background-color: #c8e6c9 !important;\n  background-color: var(--theme-success-lighter, #c8e6c9) !important;\n  color: rgba(0, 0, 0, 0.87) !important;\n}\n\n.theme-demo .theme-info-lighter-bg {\n  background-color: #b2ebf2 !important;\n  background-color: var(--theme-info-lighter, #b2ebf2) !important;\n  color: rgba(0, 0, 0, 0.87) !important;\n}\n\n.theme-demo .theme-warning-lighter-bg {\n  background-color: #ffe0b2 !important;\n  background-color: var(--theme-warning-lighter, #ffe0b2) !important;\n  color: rgba(0, 0, 0, 0.87) !important;\n}\n\n.theme-demo .theme-error-lighter-bg {\n  background-color: #ffcdd2 !important;\n  background-color: var(--theme-error-lighter, #ffcdd2) !important;\n  color: rgba(0, 0, 0, 0.87) !important;\n}\n\n.theme-demo .theme-success-dark-bg {\n  background-color: #2e7d32 !important;\n  background-color: var(--theme-success-dark, #2e7d32) !important;\n  color: #ffffff !important;\n}\n\n.theme-demo .theme-info-dark-bg {\n  background-color: #00838f !important;\n  background-color: var(--theme-info-dark, #00838f) !important;\n  color: #ffffff !important;\n}\n\n.theme-demo .theme-warning-dark-bg {\n  background-color: #ef6c00 !important;\n  background-color: var(--theme-warning-dark, #ef6c00) !important;\n  color: rgba(0, 0, 0, 0.87) !important;\n}\n\n.theme-demo .theme-error-dark-bg {\n  background-color: #c62828 !important;\n  background-color: var(--theme-error-dark, #c62828) !important;\n  color: #ffffff !important;\n}\n\n.theme-demo .theme-success-alpha-bg {\n  background-color: rgba(76, 175, 80, 0.16) !important;\n  background-color: var(--theme-success-alpha, rgba(76, 175, 80, 0.16)) !important;\n  color: rgba(0, 0, 0, 0.87) !important;\n}\n\n.theme-demo .theme-info-alpha-bg {\n  background-color: rgba(0, 188, 212, 0.16) !important;\n  background-color: var(--theme-info-alpha, rgba(0, 188, 212, 0.16)) !important;\n  color: rgba(0, 0, 0, 0.87) !important;\n}\n\n.theme-demo .theme-warning-alpha-bg {\n  background-color: rgba(255, 152, 0, 0.16) !important;\n  background-color: var(--theme-warning-alpha, rgba(255, 152, 0, 0.16)) !important;\n  color: rgba(0, 0, 0, 0.87) !important;\n}\n\n.theme-demo .theme-error-alpha-bg {\n  background-color: rgba(244, 67, 54, 0.16) !important;\n  background-color: var(--theme-error-alpha, rgba(244, 67, 54, 0.16)) !important;\n  color: #ffffff !important;\n}\n\n.theme-demo .theme-success {\n  color: #43a047 !important;\n  color: var(--theme-success, #43a047) !important;\n  background-color: #ffffff !important;\n}\n\n.theme-demo .theme-info {\n  color: #0097a7 !important;\n  color: var(--theme-info, #0097a7) !important;\n  background-color: #ffffff !important;\n}\n\n.theme-demo .theme-warning {\n  color: #fb8c00 !important;\n  color: var(--theme-warning, #fb8c00) !important;\n  background-color: rgba(0, 0, 0, 0.87) !important;\n}\n\n.theme-demo .theme-error {\n  color: #f44336 !important;\n  color: var(--theme-error, #f44336) !important;\n  background-color: #ffffff !important;\n}\n\n.theme-demo .theme-success-light {\n  color: #81c784 !important;\n  color: var(--theme-success-light, #81c784) !important;\n  background-color: rgba(0, 0, 0, 0.87) !important;\n}\n\n.theme-demo .theme-info-light {\n  color: #4dd0e1 !important;\n  color: var(--theme-info-light, #4dd0e1) !important;\n  background-color: rgba(0, 0, 0, 0.87) !important;\n}\n\n.theme-demo .theme-warning-light {\n  color: #ffb74d !important;\n  color: var(--theme-warning-light, #ffb74d) !important;\n  background-color: rgba(0, 0, 0, 0.87) !important;\n}\n\n.theme-demo .theme-error-light {\n  color: #e57373 !important;\n  color: var(--theme-error-light, #e57373) !important;\n  background-color: rgba(0, 0, 0, 0.87) !important;\n}\n\n.theme-demo .theme-success-lighter {\n  color: #c8e6c9 !important;\n  color: var(--theme-success-lighter, #c8e6c9) !important;\n  background-color: rgba(0, 0, 0, 0.87) !important;\n}\n\n.theme-demo .theme-info-lighter {\n  color: #b2ebf2 !important;\n  color: var(--theme-info-lighter, #b2ebf2) !important;\n  background-color: rgba(0, 0, 0, 0.87) !important;\n}\n\n.theme-demo .theme-warning-lighter {\n  color: #ffe0b2 !important;\n  color: var(--theme-warning-lighter, #ffe0b2) !important;\n  background-color: rgba(0, 0, 0, 0.87) !important;\n}\n\n.theme-demo .theme-error-lighter {\n  color: #ffcdd2 !important;\n  color: var(--theme-error-lighter, #ffcdd2) !important;\n  background-color: rgba(0, 0, 0, 0.87) !important;\n}\n\n.theme-demo .theme-success-dark {\n  color: #2e7d32 !important;\n  color: var(--theme-success-dark, #2e7d32) !important;\n  background-color: #ffffff !important;\n}\n\n.theme-demo .theme-info-dark {\n  color: #00838f !important;\n  color: var(--theme-info-dark, #00838f) !important;\n  background-color: #ffffff !important;\n}\n\n.theme-demo .theme-warning-dark {\n  color: #ef6c00 !important;\n  color: var(--theme-warning-dark, #ef6c00) !important;\n  background-color: rgba(0, 0, 0, 0.87) !important;\n}\n\n.theme-demo .theme-error-dark {\n  color: #c62828 !important;\n  color: var(--theme-error-dark, #c62828) !important;\n  background-color: #ffffff !important;\n}\n\n.theme-demo .theme-success-alpha {\n  color: rgba(76, 175, 80, 0.16) !important;\n  color: var(--theme-success-alpha, rgba(76, 175, 80, 0.16)) !important;\n  background-color: rgba(0, 0, 0, 0.87) !important;\n}\n\n.theme-demo .theme-info-alpha {\n  color: rgba(0, 188, 212, 0.16) !important;\n  color: var(--theme-info-alpha, rgba(0, 188, 212, 0.16)) !important;\n  background-color: rgba(0, 0, 0, 0.87) !important;\n}\n\n.theme-demo .theme-warning-alpha {\n  color: rgba(255, 152, 0, 0.16) !important;\n  color: var(--theme-warning-alpha, rgba(255, 152, 0, 0.16)) !important;\n  background-color: rgba(0, 0, 0, 0.87) !important;\n}\n\n.theme-demo .theme-error-alpha {\n  color: rgba(244, 67, 54, 0.16) !important;\n  color: var(--theme-error-alpha, rgba(244, 67, 54, 0.16)) !important;\n  background-color: #ffffff !important;\n}\n\n.theme-demo .theme-grey-50 {\n  color: #fafafa !important;\n  background-color: rgba(0, 0, 0, 0.87) !important;\n}\n\n.theme-demo .theme-grey-bg-50 {\n  background-color: #fafafa !important;\n  color: rgba(0, 0, 0, 0.87) !important;\n}\n\n.theme-demo .theme-grey-100 {\n  color: #f5f5f5 !important;\n  background-color: rgba(0, 0, 0, 0.87) !important;\n}\n\n.theme-demo .theme-grey-bg-100 {\n  background-color: #f5f5f5 !important;\n  color: rgba(0, 0, 0, 0.87) !important;\n}\n\n.theme-demo .theme-grey-200 {\n  color: #eeeeee !important;\n  background-color: rgba(0, 0, 0, 0.87) !important;\n}\n\n.theme-demo .theme-grey-bg-200 {\n  background-color: #eeeeee !important;\n  color: rgba(0, 0, 0, 0.87) !important;\n}\n\n.theme-demo .theme-grey-300 {\n  color: #e0e0e0 !important;\n  background-color: rgba(0, 0, 0, 0.87) !important;\n}\n\n.theme-demo .theme-grey-bg-300 {\n  background-color: #e0e0e0 !important;\n  color: rgba(0, 0, 0, 0.87) !important;\n}\n\n.theme-demo .theme-grey-400 {\n  color: #bdbdbd !important;\n  background-color: rgba(0, 0, 0, 0.87) !important;\n}\n\n.theme-demo .theme-grey-bg-400 {\n  background-color: #bdbdbd !important;\n  color: rgba(0, 0, 0, 0.87) !important;\n}\n\n.theme-demo .theme-grey-500 {\n  color: #9e9e9e !important;\n  background-color: rgba(0, 0, 0, 0.87) !important;\n}\n\n.theme-demo .theme-grey-bg-500 {\n  background-color: #9e9e9e !important;\n  color: rgba(0, 0, 0, 0.87) !important;\n}\n\n.theme-demo .theme-grey-600 {\n  color: #757575 !important;\n  background-color: #ffffff !important;\n}\n\n.theme-demo .theme-grey-bg-600 {\n  background-color: #757575 !important;\n  color: #ffffff !important;\n}\n\n.theme-demo .theme-grey-700 {\n  color: #616161 !important;\n  background-color: #ffffff !important;\n}\n\n.theme-demo .theme-grey-bg-700 {\n  background-color: #616161 !important;\n  color: #ffffff !important;\n}\n\n.theme-demo .theme-grey-800 {\n  color: #424242 !important;\n  background-color: #ffffff !important;\n}\n\n.theme-demo .theme-grey-bg-800 {\n  background-color: #424242 !important;\n  color: #ffffff !important;\n}\n\n.theme-demo .theme-grey-900 {\n  color: #212121 !important;\n  background-color: #ffffff !important;\n}\n\n.theme-demo .theme-grey-bg-900 {\n  background-color: #212121 !important;\n  color: #ffffff !important;\n}\n\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $theme-property-values (_variables.scss).\n */\n.component-wrap {\n  padding: 1.5rem;\n}\n\n.component-wrap > h1 {\n  font-size: 1.75rem;\n}\n\n.component-wrap > h2 {\n  font-size: 1.5rem;\n}\n\n.component-wrap > h3 {\n  font-size: 1.25rem;\n}\n\n.component-wrap > h4 {\n  font-size: 1.125rem;\n}\n\n.component-wrap > h1, .component-wrap > h2, .component-wrap > h3, .component-wrap > h4 {\n  margin-top: 2rem;\n}\n\n.component-wrap > h1:first-child, .component-wrap > h2:first-child, .component-wrap > h3:first-child, .component-wrap > h4:first-child {\n  margin-top: 0;\n}\n\n.component-wrap > h1, .component-wrap > h2 {\n  margin-top: 3rem;\n}\n\n.component-wrap > h1, .component-wrap > h2, .component-wrap > h3, .component-wrap > h4, .component-wrap > h5, .component-wrap > h6 {\n  position: relative;\n  padding-left: 1rem;\n}\n\n.component-wrap > h1::after, .component-wrap > h2::after, .component-wrap > h3::after, .component-wrap > h4::after, .component-wrap > h5::after, .component-wrap > h6::after {\n  content: \"\";\n  position: absolute;\n  top: calc(50% - .25rem);\n  left: 0;\n  display: inline-block;\n  width: .5rem;\n  height: .5rem;\n  vertical-align: middle;\n  background: #2196f3;\n  background: var(--theme-primary, #2196f3);\n  box-shadow: 0 3px 5px -1px var(--theme-primary-lighter), 0 6px 10px 0 var(--theme-primary-lighter), 0 1px 18px 0 var(--theme-primary-lightest);\n}\n\n.component-container {\n  padding: 1rem 0;\n  margin: 0 1rem;\n  border-bottom: 1px dashed;\n  border-bottom-color: #bbdefb;\n  border-bottom-color: var(--theme-primary-lighter, #bbdefb);\n}\n\n.component-spacing > div, .component-spacing > button, .component-spacing > a {\n  margin-right: 1rem;\n}\n\n.component-spacing > div:last-child, .component-spacing > button:last-child, .component-spacing > a:last-child {\n  margin-right: 0;\n}\n\n.component-bottom-spacing > div, .component-bottom-spacing > button, .component-bottom-spacing > a {\n  margin-bottom: 1rem;\n}\n\n.component-vertical-spacing > div, .component-vertical-spacing > button, .component-vertical-spacing > a, .component-vertical-spacing > nav {\n  margin-bottom: 1rem;\n}\n\n.component-vertical-spacing > div:last-child, .component-vertical-spacing > button:last-child, .component-vertical-spacing > a:last-child, .component-vertical-spacing > nav:last-child {\n  margin-bottom: 0;\n}\n\n.component-list {\n  max-width: 720px;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n}\n\n.component-list + .component-list {\n  margin-top: 1rem;\n}\n\n@media (max-width: 720px) {\n  .component-wrap {\n    padding: 0;\n  }\n  .component-list {\n    max-width: none;\n    border: 0;\n    border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n  }\n  .component-list + .component-list {\n    margin-top: 0;\n  }\n}\n\n.icon-circle {\n  width: 1.5rem;\n  height: 1.5rem;\n  border-radius: 50%;\n  background: rgba(0, 0, 0, 0.62);\n}\n\n.icon-grey {\n  background: rgba(0, 0, 0, 0.26);\n}\n\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $theme-property-values (_variables.scss).\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n@keyframes ripple-radius-in {\n  from {\n    transform: translate(var(--ripple-translate-start, 0)) scale(1);\n    animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  to {\n    transform: translate(var(--ripple-translate-end, 0)) scale(var(--ripple-scale, 1));\n  }\n}\n\n@keyframes ripple-radius-out {\n  from {\n    transform: translate(var(--ripple-translate-end, 0)) scale(var(--ripple-scale, 1));\n  }\n  to {\n    transform: translate(var(--ripple-translate-start, 0)) scale(1);\n    animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  }\n}\n\n@keyframes ripple-opacity-in {\n  from {\n    opacity: 0;\n    animation-timing-function: linear;\n  }\n  to {\n    opacity: 1;\n  }\n}\n\n@keyframes ripple-opacity-out {\n  from {\n    opacity: 1;\n    animation-timing-function: linear;\n  }\n  to {\n    opacity: 0;\n  }\n}\n\n.ripple-demo {\n  margin: 1rem;\n}\n\n.ripple-demo .ripple {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 200px;\n  height: 100px;\n  padding: 1rem;\n  cursor: pointer;\n  user-select: none;\n  box-shadow: 0 3px 5px -1px rgba(0, 0, 0, 0.2), 0 5px 8px 0 rgba(0, 0, 0, 0.14), 0 1px 14px 0 rgba(0, 0, 0, 0.12);\n}\n\n.ripple-demo .ripple + .ripple {\n  margin-left: 2rem;\n}\n\n.ripple-demo button.ripple {\n  display: inline-block;\n  border: 0;\n  background: none;\n  appearance: none;\n}\n\n.ripple-demo .ripple-unbounded {\n  width: 40px;\n  height: 40px;\n  padding: 0;\n  border-radius: 50%;\n  box-shadow: none;\n}\n\n.ripple-demo .ripple-unbounded:not(.ripple-impact)::before {\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n}\n\n.ripple-demo .d-flex .ripple {\n  margin-right: 2rem;\n}\n\n.ripple-demo .ripple-custom1::before, .ripple-demo .ripple-custom1::after {\n  background-color: rgba(233, 30, 99, 0.2);\n}\n\n.ripple-demo .ripple-custom2::before, .ripple-demo .ripple-custom2::after {\n  background-color: rgba(156, 39, 176, 0.1);\n}\n\n.shadow-wrap [class*=\"shadow\"] {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 200px;\n  height: 100px;\n  margin: 0 40px 60px;\n  border-radius: 3px;\n  color: rgba(0, 0, 0, 0.38);\n  background: #ffffff;\n}\n\n.shadow-custom .shadow-0 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 0 0 0 var(--theme-primary-lighter), 0 0 0 0 var(--theme-primary-lighter), 0 0 0 0 var(--theme-primary-lighter);\n}\n\n.shadow-custom .shadow-1 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 2px 1px -1px var(--theme-primary-lighter), 0 1px 1px 0 var(--theme-primary-lighter), 0 1px 3px 0 var(--theme-primary-lighter);\n}\n\n.shadow-custom .shadow-2 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 3px 1px -2px var(--theme-primary-lighter), 0 2px 2px 0 var(--theme-primary-lighter), 0 1px 5px 0 var(--theme-primary-lighter);\n}\n\n.shadow-custom .shadow-3 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 3px 3px -2px var(--theme-primary-lighter), 0 3px 4px 0 var(--theme-primary-lighter), 0 1px 8px 0 var(--theme-primary-lighter);\n}\n\n.shadow-custom .shadow-4 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 2px 4px -1px var(--theme-primary-lighter), 0 4px 5px 0 var(--theme-primary-lighter), 0 1px 10px 0 var(--theme-primary-lighter);\n}\n\n.shadow-custom .shadow-5 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 3px 5px -1px var(--theme-primary-lighter), 0 5px 8px 0 var(--theme-primary-lighter), 0 1px 14px 0 var(--theme-primary-lighter);\n}\n\n.shadow-custom .shadow-6 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 3px 5px -1px var(--theme-primary-lighter), 0 6px 10px 0 var(--theme-primary-lighter), 0 1px 18px 0 var(--theme-primary-lighter);\n}\n\n.shadow-custom .shadow-7 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 4px 5px -2px var(--theme-primary-lighter), 0 7px 10px 1px var(--theme-primary-lighter), 0 2px 16px 1px var(--theme-primary-lighter);\n}\n\n.shadow-custom .shadow-8 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 5px 5px -3px var(--theme-primary-lighter), 0 8px 10px 1px var(--theme-primary-lighter), 0 3px 14px 2px var(--theme-primary-lighter);\n}\n\n.shadow-custom .shadow-9 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 5px 6px -3px var(--theme-primary-lighter), 0 9px 12px 1px var(--theme-primary-lighter), 0 3px 16px 2px var(--theme-primary-lighter);\n}\n\n.shadow-custom .shadow-10 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 6px 6px -3px var(--theme-primary-lighter), 0 10px 14px 1px var(--theme-primary-lighter), 0 4px 18px 3px var(--theme-primary-lighter);\n}\n\n.shadow-custom .shadow-11 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 6px 7px -4px var(--theme-primary-lighter), 0 11px 15px 1px var(--theme-primary-lighter), 0 4px 20px 3px var(--theme-primary-lighter);\n}\n\n.shadow-custom .shadow-12 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 7px 8px -4px var(--theme-primary-lighter), 0 12px 17px 2px var(--theme-primary-lighter), 0 5px 22px 4px var(--theme-primary-lighter);\n}\n\n.shadow-custom .shadow-13 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 7px 8px -4px var(--theme-primary-lighter), 0 13px 19px 2px var(--theme-primary-lighter), 0 5px 24px 4px var(--theme-primary-lighter);\n}\n\n.shadow-custom .shadow-14 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 7px 9px -4px var(--theme-primary-lighter), 0 14px 21px 2px var(--theme-primary-lighter), 0 5px 26px 4px var(--theme-primary-lighter);\n}\n\n.shadow-custom .shadow-15 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 8px 9px -5px var(--theme-primary-lighter), 0 15px 22px 2px var(--theme-primary-lighter), 0 6px 28px 5px var(--theme-primary-lighter);\n}\n\n.shadow-custom .shadow-16 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 8px 10px -5px var(--theme-primary-lighter), 0 16px 24px 2px var(--theme-primary-lighter), 0 6px 30px 5px var(--theme-primary-lighter);\n}\n\n.shadow-custom .shadow-17 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 8px 11px -5px var(--theme-primary-lighter), 0 17px 26px 2px var(--theme-primary-lighter), 0 6px 32px 5px var(--theme-primary-lighter);\n}\n\n.shadow-custom .shadow-18 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 9px 11px -5px var(--theme-primary-lighter), 0 18px 28px 2px var(--theme-primary-lighter), 0 7px 34px 6px var(--theme-primary-lighter);\n}\n\n.shadow-custom .shadow-19 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 9px 12px -6px var(--theme-primary-lighter), 0 19px 29px 2px var(--theme-primary-lighter), 0 7px 36px 6px var(--theme-primary-lighter);\n}\n\n.shadow-custom .shadow-20 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 10px 13px -6px var(--theme-primary-lighter), 0 20px 31px 3px var(--theme-primary-lighter), 0 8px 38px 7px var(--theme-primary-lighter);\n}\n\n.shadow-custom .shadow-21 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 10px 13px -6px var(--theme-primary-lighter), 0 21px 33px 3px var(--theme-primary-lighter), 0 8px 40px 7px var(--theme-primary-lighter);\n}\n\n.shadow-custom .shadow-22 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 10px 14px -6px var(--theme-primary-lighter), 0 22px 35px 3px var(--theme-primary-lighter), 0 8px 42px 7px var(--theme-primary-lighter);\n}\n\n.shadow-custom .shadow-23 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 11px 14px -7px var(--theme-primary-lighter), 0 23px 36px 3px var(--theme-primary-lighter), 0 9px 44px 8px var(--theme-primary-lighter);\n}\n\n.shadow-custom .shadow-24 {\n  color: #2196f3;\n  color: var(--theme-primary, #2196f3);\n  box-shadow: 0 11px 15px -7px var(--theme-primary-lighter), 0 24px 38px 3px var(--theme-primary-lighter), 0 9px 46px 8px var(--theme-primary-lighter);\n}\n\n.shadow-animation {\n  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\n  will-change: box-shadow;\n}\n\n.shadow-transition2 {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 200px;\n  height: 100px;\n  margin: 0 40px 60px;\n  border-radius: 3px;\n  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1), opacity 280ms cubic-bezier(0.4, 0, 0.2, 1);\n  will-change: box-shadow, opacity;\n  background-color: #f3e5f5;\n  background-color: var(--theme-secondary-lightest, #f3e5f5);\n  box-shadow: 0 8px 9px -5px rgba(0, 0, 0, 0.2), 0 15px 22px 2px rgba(0, 0, 0, 0.14), 0 6px 28px 5px rgba(0, 0, 0, 0.12);\n}\n\n.shadow-custom-animation {\n  opacity: .5;\n  box-shadow: 0 8px 9px -5px var(--theme-primary-lighter), 0 15px 22px 2px var(--theme-primary-lighter), 0 6px 28px 5px var(--theme-primary-lighter);\n}\n\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $theme-property-values (_variables.scss).\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $theme-property-values (_variables.scss).\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n@keyframes ripple-radius-in {\n  from {\n    transform: translate(var(--ripple-translate-start, 0)) scale(1);\n    animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  to {\n    transform: translate(var(--ripple-translate-end, 0)) scale(var(--ripple-scale, 1));\n  }\n}\n\n@keyframes ripple-radius-out {\n  from {\n    transform: translate(var(--ripple-translate-end, 0)) scale(var(--ripple-scale, 1));\n  }\n  to {\n    transform: translate(var(--ripple-translate-start, 0)) scale(1);\n    animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  }\n}\n\n@keyframes ripple-opacity-in {\n  from {\n    opacity: 0;\n    animation-timing-function: linear;\n  }\n  to {\n    opacity: 1;\n  }\n}\n\n@keyframes ripple-opacity-out {\n  from {\n    opacity: 1;\n    animation-timing-function: linear;\n  }\n  to {\n    opacity: 0;\n  }\n}\n\n.btn.btn-customer {\n  display: block;\n  width: 30%;\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n  border-radius: 2rem;\n  font-size: 1rem;\n  color: #fff;\n  background-color: #00e676;\n}\n\n.btn.btn-customer::before, .btn.btn-customer::after {\n  background-color: rgba(0, 0, 0, 0.16);\n}\n\nfieldset:disabled .btn.btn-customer, .btn.btn-customer:disabled, .btn.btn-customer.disabled {\n  color: rgba(0, 0, 0, 0.38);\n  color: var(--theme-dark-disabled, rgba(0, 0, 0, 0.38));\n  background-color: rgba(0, 0, 0, 0.12);\n}\n\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $theme-property-values (_variables.scss).\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $theme-property-values (_variables.scss).\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n@keyframes ripple-radius-in {\n  from {\n    transform: translate(var(--ripple-translate-start, 0)) scale(1);\n    animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  to {\n    transform: translate(var(--ripple-translate-end, 0)) scale(var(--ripple-scale, 1));\n  }\n}\n\n@keyframes ripple-radius-out {\n  from {\n    transform: translate(var(--ripple-translate-end, 0)) scale(var(--ripple-scale, 1));\n  }\n  to {\n    transform: translate(var(--ripple-translate-start, 0)) scale(1);\n    animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  }\n}\n\n@keyframes ripple-opacity-in {\n  from {\n    opacity: 0;\n    animation-timing-function: linear;\n  }\n  to {\n    opacity: 1;\n  }\n}\n\n@keyframes ripple-opacity-out {\n  from {\n    opacity: 1;\n    animation-timing-function: linear;\n  }\n  to {\n    opacity: 0;\n  }\n}\n\n.radio-customer .radio-circle-outer {\n  border-color: rgba(156, 39, 176, 0.32);\n}\n\n.radio-customer .radio-circle-inner {\n  background-color: rgba(156, 39, 176, 0.32);\n}\n\n.radio-customer .radio-native-control:focus + .radio-background .radio-circle-outer {\n  border-color: #9c27b0;\n}\n\n.radio-customer .radio-native-control:checked:not(:disabled) + .radio-background .radio-circle-outer {\n  border-color: #9c27b0;\n}\n\n.radio-customer .radio-native-control:checked:not(:disabled) + .radio-background .radio-circle-inner {\n  background-color: #9c27b0;\n}\n\n.radio-customer.radio-ripple .radio-background::before {\n  background-color: rgba(156, 39, 176, 0.32);\n}\n\n.radio-customer.radio-ripple .radio-native-control:focus + .radio-background::before {\n  opacity: 0.32;\n}\n\n.radio-customer.ripple-impact::before, .radio-customer.ripple-impact::after {\n  background-color: rgba(156, 39, 176, 0.08);\n}\n\n.radio-customer-lg {\n  width: 60px;\n  height: 60px;\n  padding: 10px;\n}\n\n.radio-customer-lg .radio-background {\n  left: 10px;\n  width: 66.6666666667%;\n  height: 66.6666666667%;\n}\n\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $theme-property-values (_variables.scss).\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $theme-property-values (_variables.scss).\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n@keyframes ripple-radius-in {\n  from {\n    transform: translate(var(--ripple-translate-start, 0)) scale(1);\n    animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  to {\n    transform: translate(var(--ripple-translate-end, 0)) scale(var(--ripple-scale, 1));\n  }\n}\n\n@keyframes ripple-radius-out {\n  from {\n    transform: translate(var(--ripple-translate-end, 0)) scale(var(--ripple-scale, 1));\n  }\n  to {\n    transform: translate(var(--ripple-translate-start, 0)) scale(1);\n    animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  }\n}\n\n@keyframes ripple-opacity-in {\n  from {\n    opacity: 0;\n    animation-timing-function: linear;\n  }\n  to {\n    opacity: 1;\n  }\n}\n\n@keyframes ripple-opacity-out {\n  from {\n    opacity: 1;\n    animation-timing-function: linear;\n  }\n  to {\n    opacity: 0;\n  }\n}\n\n.checkbox-customer .checkbox-mark-outer {\n  border-color: rgba(233, 30, 99, 0.32);\n}\n\n.checkbox-customer .checkbox-mark-inner {\n  background-color: rgba(233, 30, 99, 0.32);\n}\n\n.checkbox-customer .checkbox-native-control:focus + .checkbox-background .checkbox-mark-outer {\n  border-color: #e91e63;\n}\n\n.checkbox-customer .checkbox-native-control:checked:not(:disabled) + .checkbox-background .checkbox-mark-inner, .checkbox-customer .checkbox-native-control:indeterminate:not(:disabled) + .checkbox-background .checkbox-mark-inner {\n  background-color: #e91e63;\n}\n\n.checkbox-customer.checkbox-ripple .checkbox-background::before {\n  background-color: rgba(233, 30, 99, 0.32);\n}\n\n.checkbox-customer.checkbox-ripple .checkbox-native-control:focus + .checkbox-background::before {\n  opacity: 0.32;\n}\n\n.checkbox-customer.ripple-impact::before, .checkbox-customer.ripple-impact::after {\n  background-color: rgba(233, 30, 99, 0.08);\n}\n\n.checkbox-customer-lg {\n  width: 60px;\n  height: 60px;\n  padding: 10px;\n}\n\n.checkbox-customer-lg .checkbox-background {\n  left: 10px;\n  width: 66.6666666667%;\n  height: 66.6666666667%;\n}\n\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $theme-property-values (_variables.scss).\n */\n.list-wrap {\n  max-width: 720px;\n  padding: .5rem 1rem;\n  border: 1px dashed;\n  border-color: #64b5f6;\n  border-color: var(--theme-primary-light, #64b5f6);\n}\n\n.list-wrap + .list-wrap {\n  margin-top: 1rem;\n}\n\n@media (max-width: 720px) {\n  .list-wrap {\n    max-width: none;\n    padding-left: 0;\n    padding-right: 0;\n    border-width: 1px 0;\n  }\n  .list-wrap + .list-wrap {\n    margin-top: 0;\n  }\n}\n\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $theme-property-values (_variables.scss).\n */\n.iframe-dialog {\n  width: 320px;\n  height: 400px;\n  border: 1px dotted;\n  border-color: #2196f3;\n  border-color: var(--theme-primary, #2196f3);\n}\n\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $theme-property-values (_variables.scss).\n */\n.tab-bar-customer .tab {\n  padding: 2rem 3rem;\n  font-size: 1.25rem;\n  font-weight: 400;\n  line-height: 1.5rem;\n}\n\n.tab-bar-customer .tab::after {\n  left: 8px;\n  width: calc(100% - 16px);\n  height: 2px;\n}\n\n.tab-bar-customer .tab {\n  color: rgba(156, 39, 176, 0.65);\n}\n\n.tab-bar-customer .tab::after {\n  background-color: #9c27b0;\n}\n\n.tab-bar-customer .tab.active, .tab-bar-customer .tab:hover {\n  color: #9c27b0;\n}\n\n.tab-bar-customer .tab:focus {\n  outline-color: rgba(156, 39, 176, 0.65);\n}\n\n.tab-bar-customer .tab.disabled {\n  color: rgba(0, 0, 0, 0.38);\n  color: var(--theme-dark-disabled, rgba(0, 0, 0, 0.38));\n}\n\n.tab-bar-customer.tab-bar-smooth .tab-bar-smooth-line {\n  background-color: #9c27b0;\n}\n\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $theme-property-values (_variables.scss).\n */\n.menu-demo-label {\n  margin-bottom: .5rem;\n}\n\n.menu-demo-panel {\n  position: relative;\n  height: 240px;\n  padding: 1rem;\n  border: 1px solid;\n  border-color: #e1bee7;\n  border-color: var(--theme-secondary-lighter, #e1bee7);\n}\n\n.menu-demo-position {\n  position: absolute;\n}\n\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $theme-property-values (_variables.scss).\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $theme-property-values (_variables.scss).\n */\n.switch-customer-color .switch-control:enabled:not(:checked) ~ .switch-track::before {\n  background-color: #ba68c8;\n}\n\n.switch-customer-color .switch-control:enabled:not(:checked) ~ .switch-track .switch-knob {\n  background-color: #ba68c8;\n}\n\n.switch-customer-color .switch-control:enabled:not(:checked) ~ .switch-track .switch-knob::before {\n  background-color: #ba68c8;\n}\n\n.switch-customer-color .switch-control:enabled:checked:not(:disabled) ~ .switch-track::before {\n  background-color: #9c27b0;\n}\n\n.switch-customer-color .switch-control:enabled:checked:not(:disabled) ~ .switch-track .switch-knob {\n  background-color: #9c27b0;\n}\n\n.switch-customer-color .switch-control:enabled:checked:not(:disabled) ~ .switch-track .switch-knob::before {\n  background-color: #9c27b0;\n}\n\n.switch-customer-size .switch-control {\n  position: absolute;\n  top: -17px;\n  left: -17px;\n  width: 82px;\n  height: 64px;\n  margin-top: -4px;\n}\n\n.switch-customer-size .switch-control:checked {\n  transform: translateX(17px);\n}\n\n.switch-customer-size .switch-control:checked ~ .switch-track .switch-knob {\n  transform: translateX(35px);\n}\n\n.switch-customer-size .switch-track {\n  width: 65px;\n  height: 22px;\n  border-radius: 11px;\n}\n\n.switch-customer-size .switch-track::before {\n  border-radius: 11px;\n}\n\n.switch-customer-size .switch-knob {\n  top: -4px;\n  left: 0;\n  width: 30px;\n  height: 30px;\n  border-radius: 15px;\n}\n\n.switch-customer-size .switch-knob::before {\n  border-radius: 11px;\n}\n\n.switch-customer-size.switch-focus-ring .switch-knob::before {\n  position: absolute;\n  top: -17px;\n  left: -17px;\n  width: 64px;\n  height: 64px;\n  border-radius: 50px;\n}\n","\n// 目录大纲编号 start\n.catalogue-counter {\n  counter-reset: outline1;\n  > h1, > h2, > h3, > h4, > h5, > h6 {\n    &::before {\n      margin-right: .5rem;\n    }\n  }\n}\n\n// 如果大纲第一级别是 h1\n.catalogue-counter > h1 {\n  counter-reset: outline2;\n  &::before {\n    content: counter(outline1, decimal) \". \";\n    counter-increment: outline1;\n  }\n  ~ h2 {\n    counter-reset: outline3;\n  }\n  ~ h2::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\";\n    counter-increment: outline2;\n  }\n  ~ h2 ~ h3 {\n    counter-reset: outline4;\n  }\n  ~ h2 ~ h3::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\";\n    counter-increment: outline3;\n  }\n\n  ~ h2 ~ h3 ~ h4 {\n    counter-reset: outline5;\n  }\n\n  ~ h2 ~ h3 ~ h4::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\";\n    counter-increment: outline4;\n  }\n\n  ~ h2 ~ h3 ~ h4 ~ h5 {\n    counter-reset: outline6;\n  }\n\n  ~ h2 ~ h3 ~ h4 ~ h5::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\" counter(outline5, decimal) \".\";\n    counter-increment: outline5;\n  }\n\n  ~ h2 ~ h3 ~ h4 ~ h5 ~ h6::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\" counter(outline5, decimal) \".\" counter(outline6, decimal) \".\";\n    counter-increment: outline6;\n  }\n}\n\n// 如果大纲第一级别是 h2\n.catalogue-counter > h2 {\n  counter-reset: outline2;\n  &::before {\n    content: counter(outline1, decimal) \".\";\n    counter-increment: outline1;\n  }\n  ~ h3 {\n    counter-reset: outline3;\n  }\n  ~ h3::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\";\n    counter-increment: outline2;\n  }\n  ~ h3 ~ h4 {\n    counter-reset: outline4;\n  }\n  ~ h3 ~ h4::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\";\n    counter-increment: outline3;\n  }\n\n  ~ h3 ~ h4 ~ h5 {\n    counter-reset: outline5;\n  }\n  ~ h3 ~ h4 ~ h5::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\";\n    counter-increment: outline4;\n  }\n\n  ~ h3 ~ h4 ~ h5 ~ h6::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\" counter(outline5, decimal) \".\";\n    counter-increment: outline5;\n  }\n}\n\n// 如果大纲第一级别是 h3（h4以后的不再考虑）\n.catalogue-counter > h3 {\n  counter-reset: outline2;\n  &::before {\n    content: counter(outline1, decimal) \".\";\n    counter-increment: outline1;\n  }\n  ~ h4 {\n    counter-reset: outline3;\n  }\n  ~ h4::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\";\n    counter-increment: outline2;\n  }\n  ~ h4 ~ h5 {\n    counter-reset: outline4;\n  }\n  ~ h4 ~ h5::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\";\n    counter-increment: outline3;\n  }\n\n  ~ h4 ~ h5 ~ h6::before {\n    content: counter(outline1, decimal) \".\" counter(outline2, decimal) \".\" counter(outline3, decimal) \".\" counter(outline4, decimal) \".\";\n    counter-increment: outline4;\n  }\n}\n\n// 目录大纲编号 end\n","// theme\n@import \"../../../../scss/shadow/mixin\";\n@import \"../../../../scss/theme/mixin\";\n\n.theme-demo {\n  [class*=\"theme\"] {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 200px;\n    height: 100px;\n    padding: 0 .5rem;\n    margin: 0 1.5rem 2rem;\n    border-radius: 3px;\n    @include shadow(5);\n  }\n\n  @include theme-classes($tone: true);\n  @include theme-assist-classes($tone: true);\n  @include theme-grey-classes($tone: true);\n}\n","@import \"./variable\";\n@import \"./function\";\n\n// box shadow 属性值，支持修改颜色值\n@mixin shadow($z-value, $umbra-color: $shadow-umbra-color,\n  $penumbra-color: $shadow-penumbra-color,\n  $ambient-color: $shadow-ambient-color) {\n\n  @if type-of($z-value) != number or not unitless($z-value) {\n    @error \"$z-value 必须是无单位数值\";\n  }\n\n  @if $z-value < 0 or $z-value > 24 {\n    @error \"$z-value must be between 0 and 24\";\n  }\n\n  box-shadow: #{map-get($shadow-umbra-map, $z-value)} #{$umbra-color},\n  #{map-get($shadow-penumbra-map, $z-value)} #{$penumbra-color},\n  #{map-get($shadow-ambient-map, $z-value)} $ambient-color;\n}\n\n// 动画效果\n@mixin shadow-transition(\n  $duration: $shadow-transition-duration,\n  $easing: $shadow-transition-timing-function) {\n  transition: shadow-transition-rule($duration, $easing);\n  will-change: box-shadow;\n}\n","\n@import \"../animation/variable\";\n\n$shadow-umbra-color: rgba(#000, .2);\n$shadow-penumbra-color: rgba(#000, .14);\n$shadow-ambient-color: rgba(#000, .12);\n\n// 本影\n$shadow-umbra-map: (\n  0: \"0 0 0 0\",\n  1: \"0 2px 1px -1px\",\n  2: \"0 3px 1px -2px\",\n  3: \"0 3px 3px -2px\",\n  4: \"0 2px 4px -1px\",\n  5: \"0 3px 5px -1px\",\n  6: \"0 3px 5px -1px\",\n  7: \"0 4px 5px -2px\",\n  8: \"0 5px 5px -3px\",\n  9: \"0 5px 6px -3px\",\n  10: \"0 6px 6px -3px\",\n  11: \"0 6px 7px -4px\",\n  12: \"0 7px 8px -4px\",\n  13: \"0 7px 8px -4px\",\n  14: \"0 7px 9px -4px\",\n  15: \"0 8px 9px -5px\",\n  16: \"0 8px 10px -5px\",\n  17: \"0 8px 11px -5px\",\n  18: \"0 9px 11px -5px\",\n  19: \"0 9px 12px -6px\",\n  20: \"0 10px 13px -6px\",\n  21: \"0 10px 13px -6px\",\n  22: \"0 10px 14px -6px\",\n  23: \"0 11px 14px -7px\",\n  24: \"0 11px 15px -7px\"\n);\n\n// 半影\n$shadow-penumbra-map: (\n  0: \"0 0 0 0\",\n  1: \"0 1px 1px 0\",\n  2: \"0 2px 2px 0\",\n  3: \"0 3px 4px 0\",\n  4: \"0 4px 5px 0\",\n  5: \"0 5px 8px 0\",\n  6: \"0 6px 10px 0\",\n  7: \"0 7px 10px 1px\",\n  8: \"0 8px 10px 1px\",\n  9: \"0 9px 12px 1px\",\n  10: \"0 10px 14px 1px\",\n  11: \"0 11px 15px 1px\",\n  12: \"0 12px 17px 2px\",\n  13: \"0 13px 19px 2px\",\n  14: \"0 14px 21px 2px\",\n  15: \"0 15px 22px 2px\",\n  16: \"0 16px 24px 2px\",\n  17: \"0 17px 26px 2px\",\n  18: \"0 18px 28px 2px\",\n  19: \"0 19px 29px 2px\",\n  20: \"0 20px 31px 3px\",\n  21: \"0 21px 33px 3px\",\n  22: \"0 22px 35px 3px\",\n  23: \"0 23px 36px 3px\",\n  24: \"0 24px 38px 3px\"\n);\n\n// 全影\n$shadow-ambient-map: (\n  0: \"0 0 0 0\",\n  1: \"0 1px 3px 0\",\n  2: \"0 1px 5px 0\",\n  3: \"0 1px 8px 0\",\n  4: \"0 1px 10px 0\",\n  5: \"0 1px 14px 0\",\n  6: \"0 1px 18px 0\",\n  7: \"0 2px 16px 1px\",\n  8: \"0 3px 14px 2px\",\n  9: \"0 3px 16px 2px\",\n  10: \"0 4px 18px 3px\",\n  11: \"0 4px 20px 3px\",\n  12: \"0 5px 22px 4px\",\n  13: \"0 5px 24px 4px\",\n  14: \"0 5px 26px 4px\",\n  15: \"0 6px 28px 5px\",\n  16: \"0 6px 30px 5px\",\n  17: \"0 6px 32px 5px\",\n  18: \"0 7px 34px 6px\",\n  19: \"0 7px 36px 6px\",\n  20: \"0 8px 38px 7px\",\n  21: \"0 8px 40px 7px\",\n  22: \"0 8px 42px 7px\",\n  23: \"0 9px 44px 8px\",\n  24: \"0 9px 46px 8px\"\n);\n\n// 动画持续时间\n$shadow-transition-duration: 280ms !default;\n\n// 默认动画 function\n$shadow-transition-timing-function: $animation-ease-in-out !default;\n","@import \"../../../../scss/theme/variable\";\n@import \"../../../../scss/theme/mixin\";\n@import \"../../../../scss/shadow/mixin\";\n\n// 基础样式\n.component-wrap {\n  padding: 1.5rem;\n\n  > h1 {\n    font-size: 1.75rem;\n  }\n\n  > h2 {\n    font-size: 1.5rem;\n  }\n\n  > h3 {\n    font-size: 1.25rem;\n  }\n\n  > h4 {\n    font-size: 1.125rem;\n  }\n\n  > h1, > h2, > h3, > h4 {\n    margin-top: 2rem;\n\n    &:first-child {\n      margin-top: 0;\n    }\n  }\n\n  > h1, > h2 {\n    margin-top: 3rem;\n  }\n\n  > h1, > h2, > h3, > h4, > h5, > h6 {\n    position:     relative;\n    padding-left: 1rem;\n\n    &::after {\n      content:        \"\";\n      position:       absolute;\n      top:            calc(50% - .25rem);\n      left:           0;\n      display:        inline-block;\n      width:          .5rem;\n      height:         .5rem;\n      vertical-align: middle;\n      @include theme-prop(background, primary);\n      @include shadow(6,\n        $umbra-color: var(--theme-primary-lighter),\n        $penumbra-color: var(--theme-primary-lighter),\n        $ambient-color: var(--theme-primary-lightest)\n      );\n    }\n  }\n}\n\n.component-container {\n  padding:       1rem 0;\n  margin:        0 1rem;\n  border-bottom: 1px dashed;\n  @include theme-prop(border-bottom-color, primary-lighter);\n}\n\n// 组件间距\n.component-spacing {\n  >div, >button, >a {\n    margin-right:  1rem;\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n}\n\n.component-bottom-spacing {\n  >div, >button, >a {\n    margin-bottom:  1rem;\n  }\n}\n\n.component-vertical-spacing {\n  >div, >button, >a, >nav {\n    margin-bottom: 1rem;\n    &:last-child {\n      margin-bottom: 0;\n    }\n  }\n}\n\n.component-list {\n  max-width: 720px;\n  border:    1px solid rgba(0, 0, 0, .2);\n  + .component-list {\n    margin-top: 1rem;\n  }\n}\n\n@media (max-width: 720px) {\n  .component-wrap {\n    padding: 0;\n  }\n\n  .component-list {\n    max-width:     none;\n    border:        0;\n    border-bottom: 1px solid rgba(0, 0, 0, .2);\n\n    + .component-list {\n      margin-top: 0;\n    }\n  }\n}\n\n// 圆形图标\n.icon-circle {\n  width:         1.5rem;\n  height:        1.5rem;\n  border-radius: 50%;\n  background:    $grey-color-700;\n}\n\n// 灰色小图标\n.icon-grey {\n  background: $grey-color-400;\n}\n\n","@import \"../../../../scss/theme/variable\";\n@import \"../../../../scss/shadow/mixin\";\n@import \"../../../../scss/shadow/function\";\n@import \"../../../../scss/theme/mixin\";\n@import \"../../../../scss/ripple/mixin\";\n\n// ripple\n.ripple-demo {\n  margin: 1rem;\n\n  .ripple {\n    display:         flex;\n    align-items:     center;\n    justify-content: center;\n    width:           200px;\n    height:          100px;\n    padding:         1rem;\n    cursor:          pointer;\n    user-select:     none;\n    @include shadow(5);\n\n    & + .ripple {\n      margin-left: 2rem;\n    }\n  }\n\n  button.ripple {\n    display:    inline-block;\n    border:     0;\n    background: none;\n    appearance: none;\n  }\n\n  .ripple-unbounded {\n    width:         40px;\n    height:        40px;\n    padding:       0;\n    border-radius: 50%;\n    box-shadow:    none;\n  }\n\n  .ripple-unbounded:not(.ripple-impact)::before {\n    top:    0;\n    left:   0;\n    width:  100%;\n    height: 100%;\n  }\n\n  .d-flex .ripple {\n    margin-right: 2rem;\n  }\n\n  // 自定义 ripple\n  .ripple-custom1 {\n    @include ripple-pseudo-theme ((background-color: #e91e63, opacity: .2));\n  }\n\n  .ripple-custom2 {\n    @include ripple-pseudo-theme ((background-color: #9c27b0, opacity: .1));\n  }\n}\n\n// shadow\n.shadow-wrap {\n\n  [class*=\"shadow\"] {\n    display:         flex;\n    align-items:     center;\n    justify-content: center;\n    width:           200px;\n    height:          100px;\n    margin:          0 40px 60px;\n    border-radius:   3px;\n    color:           $grey-color-500;\n    background:      $white;\n  }\n}\n\n.shadow-custom {\n  @for $z-value from 0 through 24 {\n    .shadow-#{$z-value} {\n      @include theme-prop(color, primary);\n      @include shadow($z-value, $umbra-color: var(--theme-primary-lighter),\n        $penumbra-color: var(--theme-primary-lighter),\n        $ambient-color: var(--theme-primary-lighter)\n      );\n    }\n  }\n}\n\n.shadow-animation {\n  @include shadow-transition;\n}\n\n.shadow-transition2 {\n  display:         flex;\n  align-items:     center;\n  justify-content: center;\n  width:           200px;\n  height:          100px;\n  margin:          0 40px 60px;\n  border-radius:   3px;\n  transition:      shadow-transition-rule(), opacity $shadow-transition-duration $shadow-transition-timing-function;\n  will-change:     box-shadow, opacity;\n  @include theme-prop(background-color, secondary-lightest);\n  @include shadow(15);\n}\n\n.shadow-custom-animation {\n  opacity: .5;\n  @include shadow(15, $umbra-color: var(--theme-primary-lighter),\n    $penumbra-color: var(--theme-primary-lighter),\n    $ambient-color: var(--theme-primary-lighter)\n  );\n}\n","// ripple mixin 波纹 涟漪\n@import \"../animation/variable\";\n@import \"../theme/variable\";\n@import \"./keyframe\";\n@import \"./function\";\n\n// ripple 基本样式\n@mixin ripple-base($opacity: .6) {\n  will-change: transform, opacity;\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n\n  // :focus 指获取焦点时，可以通过 tab 键切换或鼠标点击触发该伪类，而 :active 指鼠标点击或键盘按下时触发\n  // 伪类 :active 时背景加重\n  &:not(.ripple-impact) {\n    &:focus::before,\n    &:hover::before,\n    &:active::after {\n      opacity: $opacity;\n      transition-duration: 85ms;\n    }\n  }\n}\n\n// 设置 ripple 颜色\n@mixin ripple-backgroud-color($config) {\n  $background-color: map-get($config, background-color);\n  $opacity: map-get($config, opacity);\n  $theme-style: map-get($config, theme-style);\n\n  @if ($theme-style) {\n    $theme-value: map-get($theme-property-values, $theme-style);\n    // 从色调中取值\n    @if ($theme-value == null) {\n      $theme-value: map-get($theme-tone-property-values, $theme-style);\n    }\n    // 从辅助颜色中取值\n    @if ($theme-value == null) {\n      $theme-value: map-get($theme-assist-colors, $theme-style);\n    }\n\n    @if($theme-value == null) {\n      @error \"无效的主题属性值，#{$theme-style} 必须是以下的某一 key #{map-keys($theme-property-values)}, #{map-keys($theme-tone-property-values)}, #{map-keys($theme-assist-colors)} \";\n    }\n\n    $css-var: $theme-value;\n    $css-var: var(--theme-#{$theme-style}, $theme-value);\n    background-color: rgba($theme-value, $opacity);\n    // 使用 css 变量\n    @if ($opacity == 1 or $opacity == null) {\n      background-color: $css-var;\n    }\n\n    // 可以动态的设置颜色透明度，属于 CSS 4 color 范畴，目前浏览器支持的不是很好\n    // 可以用 rgba 来代替，但只能静态设置，不可以随着颜色和透明度的变化动态设置\n    // https://drafts.csswg.org/css-color/#modifying-colors\n    @supports (background-color: color(green a(10%))) {\n      background-color: color(#{$css-var} a(#{percentage($opacity)}));\n    }\n  } @else {\n    background-color: rgba($background-color, $opacity);\n  }\n\n}\n\n// 设置 ripple 主题\n@mixin ripple-theme($config) {\n  $config: map-merge(ripple-default-config(), $config);\n  @include ripple-backgroud-color($config);\n}\n\n// 为伪类设置 ripple 主题\n@mixin ripple-pseudo-theme($config) {\n  &::before,\n  &::after {\n    @include ripple-theme($config);\n  }\n}\n\n// ripple bg 基础设置\n@mixin ripple-bg-base($config) {\n  $radius: map-get($config, radius);\n  @include ripple-theme($config);\n  position: absolute;\n  top: calc(50% - #{$radius});\n  left: calc(50% - #{$radius});\n  width: $radius * 2;\n  height: $radius * 2;\n  border-radius: 50%;\n  pointer-events: none;\n  opacity: 0;\n  transition: opacity 250ms linear;\n}\n\n// 处理 ripple 背景\n@mixin ripple-bg($config: ()) {\n  $config: map-merge(ripple-default-config(), $config);\n  $pseudo: map-get($config, pseudo);\n\n  @if ($pseudo) {\n    &#{$pseudo} {\n      content: \"\";\n      @include ripple-bg-base($config);\n    }\n  } @else {\n    @include ripple-bg-base($config);\n  }\n}\n\n// FIXME 由于 sass-lint 不支持 css variables，故这里用 #{} 包一层\n// https://github.com/sasstools/sass-lint/issues/877\n// 待 sass-lint 支持后，去掉包裹 #{}\n\n// 更具有冲击力的动画效果\n// 设置 ripple 基本变量，这些变量会根据调用的组件大小和位置，动态的修改其值\n// 需要借助 JavaScript 来实现\n@mixin ripple-impact() {\n  #{--ripple-width}: 0;\n  #{--ripple-height}: 0;\n  #{--ripple-size}: 0;\n  #{--ripple-left}: 0;\n  #{--ripple-top}: 0;\n  #{--ripple-scale}: 1;\n  #{--ripple-translate-end}: 0;\n  #{--ripple-translate-start}: 0;\n\n  // 当 :active 时，显示背景\n  // 当 :focus 时，添加该样式 ripple-impact-focused\n  &.ripple-impact-focused::after,\n  &:active::after {\n    opacity: .6;\n    transition-duration: 85ms;\n  }\n}\n\n@mixin ripple-bg-impact($config: ()) {\n  $config: map-merge(ripple-default-config(), $config);\n  $pseudo: map-get($config, pseudo);\n  $radius: map-get($config, radius);\n\n  &#{$pseudo} {\n    top: 0;\n    left: 0;\n    width: $radius;\n    width: var(--ripple-size, $radius);\n    height: $radius;\n    height: var(--ripple-size, $radius);\n    transform: scale(0);\n    transform-origin: center center;\n  }\n\n  // 活动态\n  &.ripple-impact-active#{$pseudo} {\n    animation: 300ms ripple-radius-in forwards, 83ms ripple-opacity-in forwards;\n  }\n\n  // 取消活动态\n  &.ripple-impact-inactive#{$pseudo} {\n    animation: 300ms ripple-radius-out forwards, 83ms ripple-opacity-out forwards;\n  }\n}\n\n// 无界限的波纹效果\n@mixin ripple-unbounded($config: ()) {\n  $config: map-merge(ripple-default-config(), $config);\n  $pseudo: map-get($config, pseudo);\n  $radius: map-get($config, radius);\n\n  // 对于无界限，单独设置 .ripple-unbounded 为纯 CSS 实现\n  // 设置.ripple-unbounded 和 .ripple-impact 为动画效果，需要结合 JavaScript 来展现动效\n  .ripple-unbounded {\n    overflow: visible;\n\n    &::after {\n      top: calc(50% - #{$radius / 2});\n      top: var(--ripple-top, calc(50% - #{$radius / 2}));\n      left: calc(50% - #{$radius / 2});\n      left: var(--ripple-left, calc(50% - #{$radius / 2}));\n      width: $radius;\n      width: var(--ripple-size, $radius);\n      height: $radius;\n      height: var(--ripple-size, $radius);\n    }\n  }\n\n  .ripple-impact {\n    &.ripple-unbounded::after {\n      transform: scale(0);\n      transform: scale(var(--ripple-scale, 0));\n    }\n    &.ripple-unbounded::before {\n      top: 0;\n      top: var(--ripple-top, 0);\n      left: 0;\n      left: var(--ripple-left, 0);\n    }\n  }\n}\n\n//\n","@import \"./variable\";\n\n// 动画规则\n//  .foo {\n//      transition: shadow-transition-rule(), opacity 100ms ease;\n//      will-change: box-shadow, opacity;\n//  }\n@function shadow-transition-rule(\n  $duration: $shadow-transition-duration,\n  $easing: $shadow-transition-timing-function) {\n  @return box-shadow #{$duration} #{$easing};\n}\n","// 动画相关变量\n// https://material.io/guidelines/motion/duration-easing.html#duration-easing-common-durations\n$animation-ease-out: cubic-bezier(0, 0, .2, 1) !default; // 减速 deceleration-curve-timing\n$animation-ease-in-out: cubic-bezier(.4, 0, .2, 1) !default; // 先迅速加速，再缓慢减速 standard-curve-timing\n$animation-ease-in: cubic-bezier(.4, 0, 1, 1) !default; // 加速 acceleration-curve-timing\n$animation-sharp: cubic-bezier(.4, 0, .6, 1) !default; // 极速的变化 sharp-curve-timing\n\n// 动画函数\n$animation-timing-function: (\n  ease-out: $animation-ease-out,\n  ease-in-out: $animation-ease-in-out,\n  ease-in: $animation-ease-in-out,\n  sharp: $animation-ease-in-out\n);\n","@import \"../../../../scss/theme/variable\";\n@import \"../../../../scss/theme/mixin\";\n@import \"../../../../scss/elements/button/mixin\";\n\n// 自定义按钮\n.btn.btn-customer {\n  display: block;\n  width: 30%;\n  padding-top: 1rem;\n  padding-bottom: 1rem;\n  border-radius: 2rem;\n  font-size: 1rem;\n\n  // 设置前景色\n  @include theme-prop(color, #fff);\n  // 设置背景色\n  @include theme-prop(background-color, #00e676);\n  // 设置 ripple\n  @include button-ripple((opacity: .16));\n  // disabled\n  @include button-disabled($grey-color-300);\n}\n","// ripple function\n// 定义 ripple 默认 config\n@function ripple-default-config() {\n  // sass-lint:disable indentation\n  @return (\n    pseudo: null,\n    radius: 100%,\n    background-color: #000,\n    opacity: .08,\n    theme-style: null\n  );\n}\n","@import \"../../theme/mixin\";\n@import \"../../ripple/mixin\";\n@import \"../../shadow/mixin\";\n\n// 设置前景\n@mixin button-front($color, $assist: false) {\n  @if ($assist) {\n    @include theme-assist(color, $color);\n\n    // 对于 a 标签的处理\n    &:hover {\n      @include theme-assist(color, $color);\n    }\n  } @else {\n    @include theme-prop(color, $color);\n\n    // 对于 a 标签的处理\n    &:hover {\n      @include theme-prop(color, $color);\n    }\n  }\n}\n\n// 设置背景\n@mixin button-back($background-color, $assist: false) {\n  @if ($assist) {\n    @include theme-assist(background-color, $background-color);\n  } @else {\n    @include theme-prop(background-color, $background-color);\n  }\n}\n\n// 设置 ripple 样式，主要是伪类 ::before 和 ::after\n@mixin button-ripple($config) {\n  @include ripple-pseudo-theme($config);\n}\n\n// 设置 button shadow 效果\n@mixin button-shadow() {\n  @include shadow(2);\n  @include shadow-transition;\n\n  &:hover,\n  &:focus {\n    @include shadow(4);\n  }\n\n  &:active {\n    @include shadow(8);\n  }\n}\n\n// 设置 button disabled\n@mixin button-disabled($style) {\n  // disabled\n  fieldset:disabled &,\n  &:disabled,\n  &.disabled {\n    @include theme-prop(color, disabled-on-light);\n    @include theme-prop(background-color, $style);\n  }\n}\n\n// 设置按钮大小\n@mixin btn-size($btn-font-size, $btn-padding-x, $btn-padding-y, $btn-border-radius, $btn-line-height) {\n  padding: $btn-padding-y $btn-padding-x;\n  border-radius: $btn-border-radius;\n  font-size: $btn-font-size;\n  line-height: $btn-line-height;\n}\n","@import \"../../../../scss/theme/variable\";\n@import \"../../../../scss/theme/mixin\";\n@import \"../../../../scss/elements/radio/mixin\";\n\n// 自定义Radio\n.radio-customer {\n  @include radio-theme($theme: #9c27b0, $opacity: .32);\n}\n\n.radio-customer-lg {\n  @include radio-size($radio-outline-size: 60px, $radio-size: 40px);\n}\n","@import \"../../theme/mixin\";\n@import \"../../ripple/mixin\";\n@import \"./variable\";\n\n@mixin radio-size($radio-outline-size: $radio-outline-size, $radio-size: $radio-size) {\n  // radio 渲染百分比\n  $radio-pct: percentage($radio-size / $radio-outline-size);\n  width:   $radio-outline-size;\n  height:  $radio-outline-size;\n  padding: ($radio-outline-size - $radio-size) / 2;\n\n  .radio-background {\n    left:   ($radio-outline-size - $radio-size) / 2;\n    width:  $radio-pct;\n    height: $radio-pct;\n  }\n}\n\n// 定义主题 mixin，也可以通过此 mixin 自定义主题，只需传 $theme 颜色值即可\n@mixin radio-theme($theme, $opacity: .16, $assist: false) {\n  .radio-circle-outer {\n    @if type-of($theme) == \"color\" {\n      @include theme-prop(border-color, rgba($theme, $opacity));\n    } @else {\n      @if ($assist) {\n        @include theme-assist(border-color, #{$theme}-light);\n      } @else {\n        @include theme-prop(border-color, #{$theme}-light);\n      }\n    }\n  }\n\n  .radio-circle-inner {\n    @if type-of($theme) == \"color\" {\n      @include theme-prop(background-color, rgba($theme, $opacity));\n    } @else {\n      @if ($assist) {\n        @include theme-assist(background-color, #{$theme}-light);\n      } @else {\n        @include theme-prop(background-color, #{$theme}-light);\n      }\n    }\n  }\n\n  .radio-native-control {\n    // 获取焦点时\n    &:focus {\n      + .radio-background {\n        .radio-circle-outer {\n          @if ($assist) {\n            @include theme-assist(border-color, $theme);\n          } @else {\n            @include theme-prop(border-color, $theme);\n          }\n        }\n      }\n    }\n\n    // 不包括 :disabled\n    &:checked:not(:disabled) {\n      + .radio-background {\n        .radio-circle-outer {\n          @if ($assist) {\n            @include theme-assist(border-color, $theme);\n          } @else {\n            @include theme-prop(border-color, $theme);\n          }\n        }\n\n        .radio-circle-inner {\n          @if ($assist) {\n            @include theme-assist(background-color, $theme);\n          } @else {\n            @include theme-prop(background-color, $theme);\n          }\n        }\n      }\n    }\n  }\n\n  // 波纹效果时 ripple\n  &.radio-ripple {\n    .radio-background {\n      &::before {\n        @if type-of($theme) == \"color\" {\n          @include theme-prop(background-color, rgba($theme, $opacity));\n        } @else {\n          @if ($assist) {\n            @include theme-assist(background-color, #{$theme}-light);\n          } @else {\n            @include theme-prop(background-color, #{$theme}-light);\n          }\n        }\n      }\n    }\n\n    // 获取焦点时\n    .radio-native-control:focus {\n      + .radio-background::before {\n        opacity: $opacity;\n      }\n    }\n  }\n\n  // 波纹动效时\n  &.ripple-impact {\n    @if (type-of($theme) == color) {\n      @include ripple-pseudo-theme ((background-color: rgba($theme, $opacity / 2)));\n    } @else {\n      @include ripple-pseudo-theme ((theme-style: #{$theme}-alpha, opacity: 1));\n    }\n  }\n}\n","@import \"../../../../scss/theme/variable\";\n@import \"../../../../scss/theme/mixin\";\n@import \"../../../../scss/elements/checkbox/mixin\";\n\n// 自定义 Checkbox\n.checkbox-customer {\n  @include checkbox-theme($theme: #e91e63, $opacity: .32);\n}\n\n.checkbox-customer-lg {\n  @include checkbox-size($checkbox-outline-size: 60px, $checkbox-size: 40px);\n}\n","@import \"../../theme/mixin\";\n@import \"../../ripple/mixin\";\n@import \"./variable\";\n\n@mixin checkbox-size($checkbox-outline-size: $checkbox-outline-size, $checkbox-size: $checkbox-size) {\n  // checkbox 渲染百分比\n  $checkbox-pct: percentage($checkbox-size / $checkbox-outline-size);\n  width:   $checkbox-outline-size;\n  height:  $checkbox-outline-size;\n  padding: ($checkbox-outline-size - $checkbox-size) / 2;\n\n  .checkbox-background {\n    left:   ($checkbox-outline-size - $checkbox-size) / 2;\n    width:  $checkbox-pct;\n    height: $checkbox-pct;\n  }\n}\n\n// 定义主题 mixin，也可以通过此 mixin 自定义主题，只需传 $theme 颜色值即可\n@mixin checkbox-theme($theme, $opacity: .16, $assist: false) {\n  .checkbox-mark-outer {\n    @if type-of($theme) == \"color\" {\n      @include theme-prop(border-color, rgba($theme, $opacity));\n    } @else {\n      @if ($assist) {\n        @include theme-assist(border-color, #{$theme}-light);\n      } @else {\n        @include theme-prop(border-color, #{$theme}-light);\n      }\n    }\n  }\n\n  .checkbox-mark-inner {\n    @if type-of($theme) == \"color\" {\n      @include theme-prop(background-color, rgba($theme, $opacity));\n    } @else {\n      @if ($assist) {\n        @include theme-assist(background-color, #{$theme}-light);\n      } @else {\n        @include theme-prop(background-color, #{$theme}-light);\n      }\n    }\n  }\n\n  .checkbox-native-control {\n    // 获取焦点时\n    &:focus {\n      + .checkbox-background {\n        .checkbox-mark-outer {\n          @if ($assist) {\n            @include theme-assist(border-color, $theme);\n          } @else {\n            @include theme-prop(border-color, $theme);\n          }\n        }\n      }\n    }\n\n    // 不包括 :disabled\n    &:checked:not(:disabled),\n    &:indeterminate:not(:disabled) {\n      + .checkbox-background {\n        .checkbox-mark-inner {\n          @if ($assist) {\n            @include theme-assist(background-color, $theme);\n          } @else {\n            @include theme-prop(background-color, $theme);\n          }\n        }\n      }\n    }\n  }\n\n  // 波纹效果时 ripple\n  &.checkbox-ripple {\n    .checkbox-background {\n      &::before {\n        @if type-of($theme) == \"color\" {\n          @include theme-prop(background-color, rgba($theme, $opacity));\n        } @else {\n          @if ($assist) {\n            @include theme-assist(background-color, #{$theme}-light);\n          } @else {\n            @include theme-prop(background-color, #{$theme}-light);\n          }\n        }\n      }\n    }\n\n    // 获取焦点时\n    .checkbox-native-control:focus {\n      + .checkbox-background::before {\n        opacity: $opacity;\n      }\n    }\n  }\n\n  // 波纹动效时\n  &.ripple-impact {\n    @if (type-of($theme) == color) {\n      @include ripple-pseudo-theme ((background-color: rgba($theme, $opacity / 2)));\n    } @else {\n      @include ripple-pseudo-theme ((theme-style: #{$theme}-alpha, opacity: 1));\n    }\n  }\n}\n","// list wrap\n\n@import \"../../../../scss/theme/variable\";\n@import \"../../../../scss/theme/mixin\";\n\n.list-wrap {\n  max-width: 720px;\n  padding: .5rem 1rem;\n  border: 1px dashed;\n  @include theme-prop(border-color, primary-light);\n  + .list-wrap {\n    margin-top: 1rem;\n  }\n}\n\n@media (max-width: 720px) {\n  .list-wrap {\n    max-width: none;\n    padding-left: 0;\n    padding-right: 0;\n    border-width: 1px 0;\n\n    + .list-wrap {\n      margin-top: 0;\n    }\n  }\n}\n\n","@import \"../../../../scss/theme/mixin\";\n\n.iframe-dialog {\n  width: 320px;\n  height: 400px;\n  border: 1px dotted;\n  @include theme-prop(border-color, primary);\n}\n\n","@import \"../../../../scss/navigation/tabs/mixin\";\n\n// 自定义 Tab\n.tab-bar-customer {\n  @include tab-size($padding-x: 2rem, $padding-y: 3rem, $font-size: 1.25rem);\n  @include tab-theme($theme: #9c27b0);\n}\n","@import \"../../theme/mixin\";\n@import \"./variable\";\n\n// 定义 tab 大小\n@mixin tab-size($padding-x: $tab-padding-x, $padding-y: $tab-padding-y,\n  $font-size: $tab-font-size, $font-weight: $tab-font-weight,\n  $line-height: $tab-line-height, $active-width-subtract: $tab-active-width-subtract, $active-border: $tab-active-border) {\n\n  .tab {\n    padding:     $padding-x $padding-y;\n    font-size:   $font-size;\n    font-weight: $font-weight;\n    line-height: $line-height;\n\n    &::after {\n      // 保持居中显示\n      left:   $active-width-subtract / 2;\n      width:  calc(100% - #{$active-width-subtract});\n      height: $active-border;\n    }\n  }\n}\n\n// 定义 tab 主题\n@mixin tab-theme($theme, $opacity: .65, $assist: false) {\n  .tab {\n    @if type-of($theme) == \"color\" {\n      @include theme-prop(color, rgba($theme, $opacity));\n    } @else {\n      @if ($assist) {\n        @include theme-assist(color, #{$theme}-light);\n      } @else {\n        @include theme-prop(color, #{$theme}-light);\n      }\n    }\n\n    &::after {\n      @if ($assist) {\n        @include theme-assist(background-color, $theme);\n      } @else {\n        @include theme-prop(background-color, $theme);\n      }\n    }\n\n    &.active,\n    &:hover {\n      @if ($assist) {\n        @include theme-assist(color, $theme);\n      } @else {\n        @include theme-prop(color, $theme);\n      }\n    }\n\n    &:focus {\n      @if type-of($theme) == \"color\" {\n        @include theme-prop(outline-color, rgba($theme, $opacity));\n      } @else {\n        @if ($assist) {\n          @include theme-assist(outline-color, #{$theme}-light);\n        } @else {\n          @include theme-prop(outline-color, #{$theme}-light);\n        }\n      }\n    }\n\n    // disabled\n    &.disabled {\n      @include theme-prop(color, disabled-on-light);\n    }\n  }\n\n  // Tab 底部线条平滑的移动\n  &.tab-bar-smooth {\n    .tab-bar-smooth-line {\n      @if ($assist) {\n        @include theme-assist(background-color, $theme);\n      } @else {\n        @include theme-prop(background-color, $theme);\n      }\n    }\n  }\n}\n","// Tab 变量\n\n$tab-padding-x: .75rem !default;\n$tab-padding-y: 1.5rem !default;\n$tab-font-size: 1rem !default;\n$tab-font-weight: 400 !default;\n$tab-line-height: 1.5rem !default;\n\n// active 和鼠标经过，边框减少宽度\n$tab-active-width-subtract: 16px !default;\n$tab-active-border: 2px !default;\n\n// 动画持续时间\n$tab-transition-duration: 240ms !default;\n\n// Tab 大小\n$tab-padding-x-lg: 1rem !default;\n$tab-padding-y-lg: 2rem !default;\n$tab-font-size-lg: 1.125rem !default;\n\n$tab-padding-x-sm: .5rem !default;\n$tab-padding-y-sm: 1rem !default;\n$tab-font-size-sm: .875rem !default;\n\n// 是否开启定制主题，包括主颜色和辅助颜色，默认关闭，需要的话可开启\n$enable-custom-theme-for-tab: false !default;\n\n// tab-bar-scroller\n$tab-bar-scroller-indicator-width: 48px;\n","@import \"../../../../scss/theme/mixin\";\n\n.menu-demo-label {\n  margin-bottom: .5rem;\n}\n\n.menu-demo-panel {\n  position: relative;\n  height: 240px;\n  padding: 1rem;\n  border: 1px solid;\n  @include theme-prop(border-color, secondary-lighter);\n}\n\n.menu-demo-position {\n  position: absolute;\n}\n","@import \"../../../../scss/theme/variable\";\n@import \"../../../../scss/theme/mixin\";\n@import \"../../../../scss/elements/switch/mixin\";\n\n// 自定义Radio\n.switch-customer-color {\n  @include switch-theme($theme: #9c27b0, $unchecked-bg-color: #ba68c8);\n}\n\n.switch-customer-size {\n  @include switch-size($width: 100px, $height: 64px, $diameter: 30px, $offset: 4px);\n}\n","@import \"./variable\";\n@import \"../../theme/mixin\";\n\n// 没有选中时，背景颜色\n@mixin switch-unchecked-bg-color($track-bg-color, $knob-bg-color, $focus-ring-bg-color) {\n  .switch-control:enabled:not(:checked) ~ .switch-track::before {\n    @include theme-prop(background-color, $track-bg-color);\n  }\n  .switch-control:enabled:not(:checked) ~ .switch-track .switch-knob {\n    @include theme-prop(background-color, $knob-bg-color);\n  }\n\n  .switch-control:enabled:not(:checked) ~ .switch-track .switch-knob::before {\n    @include theme-prop(background-color, $focus-ring-bg-color);\n  }\n}\n\n// 选中时，背景颜色\n@mixin switch-checked-bg-color($bg-color) {\n  .switch-control:enabled:checked:not(:disabled) ~ .switch-track::before {\n    @include theme-prop(background-color, $bg-color);\n  }\n  .switch-control:enabled:checked:not(:disabled) ~ .switch-track .switch-knob {\n    @include theme-prop(background-color, $bg-color);\n  }\n\n  .switch-control:enabled:checked:not(:disabled) ~ .switch-track .switch-knob::before {\n    @include theme-prop(background-color, $bg-color);\n  }\n}\n\n// switch 轮廓大小位置\n@mixin switch-control-size($switch-focus-ring-width: $switch-focus-ring-width,\n  $switch-focus-ring-height: $switch-focus-ring-height, $switch-knob-diameter: $switch-knob-diameter,\n  $switch-track-width: $switch-track-width, $switch-knob-vertical-offset: $switch-knob-vertical-offset,\n  $switch-control-active-translate-x: $switch-control-active-translate-x,\n  $switch-knob-active-translate-x: $switch-knob-active-translate-x) {\n\n  $offset-top: -($switch-focus-ring-height - $switch-knob-diameter) / 2;\n  $offset-left: -($switch-focus-ring-width - $switch-knob-diameter) / 2;\n  $switch-diameter: min($switch-focus-ring-width, $switch-focus-ring-height);\n\n  position:   absolute;\n  top:        max($offset-top, $offset-left);\n  left:       max($offset-top, $offset-left);\n  width:      ($switch-diameter - $switch-knob-diameter) / 2 + $switch-track-width;\n  height:     min($switch-focus-ring-width, $switch-focus-ring-height);\n  margin-top: -$switch-knob-vertical-offset;\n\n  &:checked {\n    transform: translateX($switch-control-active-translate-x);\n  }\n\n  &:checked ~ .switch-track {\n    .switch-knob {\n      transform: translateX($switch-knob-active-translate-x);\n    }\n  }\n}\n\n// switch 轨迹大小\n@mixin switch-track-size($width: $switch-track-width, $height: $switch-track-height) {\n  width:         $width;\n  height:        $height;\n  border-radius: $height / 2;\n\n  &::before {\n    border-radius: $height / 2;\n  }\n}\n\n// switch 切换按钮大小\n@mixin switch-knob-size($diameter: $switch-knob-diameter, $height: $switch-track-height, $offset: $switch-knob-vertical-offset) {\n  top:           -$offset;\n  left:          0;\n  width:         $diameter;\n  height:        $diameter;\n  border-radius: $diameter / 2;\n\n  &::before {\n    border-radius: $height / 2;\n  }\n}\n\n// switch 聚焦大小\n@mixin switch-focus-ring-size($width: $switch-focus-ring-width, $height: $switch-focus-ring-height,\n  $diameter: $switch-knob-diameter) {\n\n  $offset-top: -($height - $diameter) / 2;\n  $offset-left: -($width - $diameter) / 2;\n\n  position:      absolute;\n  top:           max($offset-top, $offset-left);\n  left:          max($offset-top, $offset-left);\n  width:         min($width, $height);\n  height:        min($width, $height);\n  border-radius: $width / 2;\n}\n\n// 自定义大小，把定义大小的地方统一抽到该方法里\n@mixin switch-size($width: $switch-focus-ring-width, $height: $switch-focus-ring-height,\n  $diameter: $switch-knob-diameter, $offset: $switch-knob-vertical-offset) {\n\n  // 重新赋值，覆盖 !default 定义的值\n  $switch-focus-ring-width: $width;\n  $switch-focus-ring-height: $height;\n  $switch-knob-diameter: $diameter;\n  $switch-knob-vertical-offset: $offset;\n\n  $switch-track-width: $switch-focus-ring-width / 2 + $switch-knob-diameter / 2;\n  $switch-track-height: $switch-knob-diameter - $switch-knob-vertical-offset * 2;\n  $switch-control-active-translate-x: (min($switch-focus-ring-width, $switch-focus-ring-height) - $switch-knob-diameter) / 2;\n  $switch-knob-active-translate-x: ($switch-focus-ring-width - $switch-knob-diameter) / 2;\n\n  .switch-control {\n    @include switch-control-size($switch-focus-ring-width: $switch-focus-ring-width,\n      $switch-focus-ring-height: $switch-focus-ring-height, $switch-knob-diameter: $switch-knob-diameter,\n      $switch-track-width: $switch-track-width, $switch-knob-vertical-offset: $switch-knob-vertical-offset,\n      $switch-control-active-translate-x: $switch-control-active-translate-x,\n      $switch-knob-active-translate-x: $switch-knob-active-translate-x);\n  }\n\n  .switch-track {\n    @include switch-track-size($width: $switch-track-width, $height: $switch-track-height);\n  }\n\n  .switch-knob {\n    @include switch-knob-size($diameter: $switch-knob-diameter, $height: $switch-track-height, $offset: $switch-knob-vertical-offset);\n  }\n\n  // 聚焦效果\n  &.switch-focus-ring {\n    .switch-knob {\n      &::before {\n        @include switch-focus-ring-size($width: $switch-focus-ring-width, $height: $switch-focus-ring-height, $diameter: $switch-knob-diameter);\n      }\n    }\n  }\n}\n\n// 定义主题\n@mixin switch-theme($theme, $unchecked-bg-color: null) {\n  $bg-color: if($unchecked-bg-color, $unchecked-bg-color, #{$theme}-light);\n  @include switch-unchecked-bg-color($bg-color, $bg-color, $bg-color);\n  @include switch-checked-bg-color($theme);\n}\n"]}