{"version":3,"sources":["webpack:///./docs/assets/scss/home.scss","webpack:///./docs/assets/scss/common/_main.scss","webpack:///./components/theme/_function.scss","webpack:///./components/theme/_mixin.scss","webpack:///./docs/assets/scss/common/_header.scss","webpack:///./components/base/variables/_font.scss","webpack:///./docs/assets/scss/common/_footer.scss","webpack:///./docs/assets/scss/home/_journey.scss","webpack:///./components/responsive/_mixin.scss"],"names":[],"mappings":"AAAA;;ACEA;EACE;CDCD;;ACED;;EACE;EACA;CDED;;AE8BD;;;GFzBG;;AEyBH;;;GFpBG;;AGhBH;;;;GHsBG;;AIxBH;EDkBI;EACA;CHUH;;AIxBC;ED6BE;EACA;CHDH;;AIzBG;EDyBA;EACA;CHIH;;AEDD;;;GFMG;;AK5CH;;;;;;;;;;;;;;;;;GL+DG;;AK/DH;;;;;;;;;;;;;;;;;GLkFG;;AM9EH;EAEE;CNgFD;;AM7ED;EACE;EACA;EACA;EACA;EACA;EACA;EACA;CNgFD;;AO9FD;EACE;EACA;CPiGD;;AOnGD;EAKI;CPkGH;;AO/FC;EACE;EACA;EACA;EACA;EACA;CPkGH;;AQxCG;EDvEJ;IAiBI;IACA;GPmGD;CACF;;AQ/CG;EDvEJ;IAuBM;GPoGH;;EO3HH;IA2BM;IACA;IACA;IACA;GPoGH;;EOlIH;IAiCQ;GPqGL;CACF;;AQhEG;EDvEJ;IAwCM;GPoGH;CACF","file":"home.css","sourcesContent":["// main æ ·å¼\n@import \"common/main\";\n\n// header\n@import \"common/header\";\n\n// åºé¨æ ·å¼\n@import \"common/footer\";\n\n// å¼å¯ä¹æ\n@import \"home/journey\";\n","// è¿éä¹æä»¥å®ä¹ html ä¸º position: relative; ä¸»è¦ä¸ºäºå®ç°ï¼ä¸è®ºé¡µé¢é«åº¦å¦ä½ï¼åºé¨å§ç»å¨æä¸é¢æ¾ç¤º\n\nhtml {\n  position: relative;\n}\n\nhtml, body {\n  height: auto;\n  min-height: 100%;\n}\n","// å®ä¹ä¸»é¢ç¸å³ function\n@import \"../base/functions/math/pow\";\n@import \"../base/functions/rgba-to-rgb\";\n\n// sass ä¸­åªè½ç²¾ç¡®å° 15 ä½ï¼å³ precision æå¤§ä¸º15\n\n// é¢è²è²å½©ç³»æ°\n// ä¾å¦ coefficient(0) => 0   coefficient(1) => .000303526983549\n// coefficient(2) => .000607053967098  coefficient(3) => .000910580950647\n// å¦æä¸ç¨ç¬¬ä¸æ¹ pow å½æ°æ±è§£ï¼ä¹å¯ä»¥ä½¿ç¨æåç¨ JavaScript è®¡ç®å¥½çæ°ç»\n// æ¯å¦ $mdc-theme-linear-channel-values: 0 .0003035269835488375 .000607053967097675 .0009105809506465125;\n// æ³¨æ sass ä¸­çæ°ç»ä¸æ æ¯ä» 1 å¼å§\n@function coefficient($rgb) {\n  $rgb: $rgb / 255;\n\n  @return if($rgb < .03928, $rgb / 12.92, pow(($rgb + .055) / 1.055, 2.4));\n}\n\n// è®¡ç®è²å½©çç¸å¯¹äº®åº¦\n// éµå¾ª WCAG 2.0 è§è https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n// https://www.w3.org/Translations/WCAG20-zh/  é¡µé¢ä¸­æ¥æ¾ ç¸å¯¹äº®åº¦\n// é¢è²åä¸º R G B ä¸åºè², å¼ä» 0 å° 255\n// å¯¹äºsRGBè²å½©ç©ºé´ï¼è²å½©çç¸å¯¹äº®åº¦æ¯æå®ä¹ L = 0.2126 * R + 0.7152 * G + 0.0722 * Bï¼å¶ä¸­Rï¼GåBçå®ä¹ä¸º\n//  function f($color) {\n//   $color = $color / 255;\n//   return $color < 0.03928 ? $color / 12.92 : Math.pow(($color + 0.055) / 1.055, 2.4);\n// }\n// è¯¥å®ä¹å·²å°è£ä¸ºå½æ° coefficient\n@function theme-luminance($color) {\n  // æ³¨æè¿éä¸éè¦å  1\n  $red: red($color);\n  $green: green($color);\n  $blue: blue($color);\n  $r: coefficient($red);\n  $g: coefficient($green);\n  $b: coefficient($blue);\n\n  @return .2126 * $r + .7152 * $g + .0722 * $b;\n}\n\n/**\n * è®¡ç®ä¸¤ç§é¢è²çå¯¹æ¯åº¦ï¼ä¸è¬æåæ¯è²åèæ¯è²\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests ç¬¬3ç¹\n */\n@function theme-contrast-ratio($back, $front) {\n  $back-luminance: theme-luminance($back) + .05;\n  $fore-luminance: theme-luminance($front) + .05;\n  // æäº®åº¦æå¤§é¤ä»¥æå°å¾å¤å¯¹æ¯åº¦\n  @return max($back-luminance, $fore-luminance) / min($back-luminance, $fore-luminance);\n}\n\n// æ ¹æ®ç»å®çé¢è²æ¥å¤æ­è²è°æ¯æµè²è¿æ¯æ·±è²\n@function theme-tone($color) {\n  //$alpha: alpha($color);\n  //// å¦ææ¯éæè²ï¼éè¦åè½¬æ¢ä¸ºå¯¹åºçä¸éæè²\n  //@if ($alpha < 1) {\n  //  $color: rgba-to-rgb($color, $background: rgb(red($color), green($color), blue($color)));\n  //}\n  // æå°å¯¹æ¯åº¦è®¾ä¸º 3.1\n  $minimum-contrast: 3.1;\n  $light-contrast: theme-contrast-ratio($color, #fff);\n  $dark-contrast: theme-contrast-ratio($color, rgba(#000, .87));\n\n  // å½ç»å®é¢è²ä¸ç½è²çå¯¹æ¯åº¦å°äº 3.1æ¶ï¼å¹¶ä¸ç»å®é¢è²ä¸é»è²çå¯¹æ¯åº¦å¤§äºç»å®é¢è²ä¸ç½è²çå¯¹æ¯åº¦æ¶ï¼\n  // è¿å darkï¼å¦å light\n\n  @if ($light-contrast < $minimum-contrast) and ($dark-contrast > $light-contrast) {\n    @return \"light\";\n  } @else {\n    @return \"dark\";\n  }\n}\n\n// é¢è²çå¯¹æ¯è²è°ï¼å³æ·±é¢è²å¯¹åºçå¯¹æ¯è²è°ä¸ºæµé¢è²\n// å¦æ$coloræ¯æµè²ï¼åè¿åæ·±è² darkï¼å¦åä¸ºæµè² light\n@function theme-contrast-tone($color) {\n  @return if(theme-tone($color) == \"dark\", \"light\", \"dark\");\n}\n\n// æ ¹æ® $theme-contrast-tone-property-values ä¸­ç key è®¡ç®å¯¹åºç CSS åéå\n// æ¯å¦ primary-on-primary å¯¹åºçåéåä¸º --theme-#{$theme-primary-contrast-tone}-primary\n// --theme-light-primary\n@function theme-contrast-tone-var($theme-contrast-tone-property) {\n  $on-index: str-index($theme-contrast-tone-property, \"-on-\");\n  $on-prev-str: str-slice($theme-contrast-tone-property, 0, $on-index - 1);\n  $on-next-str: str-slice($theme-contrast-tone-property, $on-index + 4);\n  $contrast-tone: null;\n\n  // è¿é scss ä¸æ¯æå½¢å¦ js ååéçæ¹å¼ï¼æéè¦å¤çå¤ä¸ªå¤æ­\n  @if ($on-next-str == \"light\") {\n    $contrast-tone: dark;\n  } @else if ($on-next-str == \"dark\") {\n    $contrast-tone: light;\n  } @else if ($on-next-str == \"primary\") {\n    $contrast-tone: $theme-primary-contrast-tone;\n  } @else if ($on-next-str == \"primary-light\") {\n    $contrast-tone: $theme-primary-light-contrast-tone;\n  } @else if ($on-next-str == \"primary-lighter\") {\n    $contrast-tone: $theme-primary-lighter-contrast-tone;\n  } @else if ($on-next-str == \"primary-lightest\") {\n    $contrast-tone: $theme-primary-lightest-contrast-tone;\n  } @else if ($on-next-str == \"primary-dark\") {\n    $contrast-tone: $theme-primary-dark-contrast-tone;\n  } @else if ($on-next-str == \"primary-darker\") {\n    $contrast-tone: $theme-primary-darker-contrast-tone;\n  } @else if ($on-next-str == \"primary-darkest\") {\n    $contrast-tone: $theme-primary-darkest-contrast-tone;\n  } @else if ($on-next-str == \"secondary\") {\n    $contrast-tone: $theme-secondary-contrast-tone;\n  } @else if ($on-next-str == \"secondary-light\") {\n    $contrast-tone: $theme-secondary-light-contrast-tone;\n  } @else if ($on-next-str == \"secondary-lighter\") {\n    $contrast-tone: $theme-secondary-lighter-contrast-tone;\n  } @else if ($on-next-str == \"secondary-lightest\") {\n    $contrast-tone: $theme-secondary-lightest-contrast-tone;\n  } @else if ($on-next-str == \"secondary-dark\") {\n    $contrast-tone: $theme-secondary-dark-contrast-tone;\n  } @else if ($on-next-str == \"secondary-darker\") {\n    $contrast-tone: $theme-secondary-darker-contrast-tone;\n  } @else if ($on-next-str == \"secondary-darkest\") {\n    $contrast-tone: $theme-secondary-darkest-contrast-tone;\n  } @else if ($on-next-str == \"background\") {\n    $contrast-tone: $theme-background-contrast-tone;\n  }\n\n  @return #{$contrast-tone}-#{$on-prev-str};\n}\n\n","// theme mixin\n@import \"./variable\";\n@import \"./function\";\n\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $theme-property-values (_variables.scss).\n */\n\n// ç»å±æ§ $property è®¾ç½®é¢è² $style å¼\n// å±æ§ $property ä¸è¬ç¨å¨ color background-color border-color ç­ï¼ä¹å¯ç¨å¨ä»»ä½å¯ä»¥è®¾ç½®é¢è²å¼çå±æ§ä¸\n// $style åºè¯¥æ¯ $theme-property-values ä¸­æä¸ª key\n// è¯¥ mixin ä¸»è¦ç¨æ¥è®¾ç½®ä¸»é¢é¢è²å¼ï¼å¹¶ä¸è®¾ç½®äºä¸»é¢ css åéå¼\n// ç¨æ·éè¿ä¿®æ¹ css åéå¼å¯ä»¥å¨æçä¿®æ¹æ´ä¸ªä¸»é¢å¼ï¼æ¯å¦å¨ body ä¸ä¿®æ¹ css åéå¼\n@mixin theme-color-prop($property, $style, $important) {\n  @if $important {\n    #{$property}: map-get($theme-property-values, $style) !important;\n    #{$property}: var(--theme-#{$style}, map-get($theme-property-values, $style)) !important;\n  } @else {\n    #{$property}: map-get($theme-property-values, $style);\n    #{$property}: var(--theme-#{$style}, map-get($theme-property-values, $style));\n  }\n}\n\n// ç¨æ¥è®¾ç½®ä¸»é¢è²å¯¹åºçå¯¹æ¯è²è°å¼ï¼æµè²è¿æ¯æ·±è²\n// $style åºè¯¥æ¯ $theme-contrast-tone-property-values ä¸­æä¸ª key\n// è¯¥ mixin é¤äºè®¾ç½®äºå¯¹æ¯è²è°å¼ï¼è¿è®¾ç½®äºå¯¹åºç css åéå¼\n@mixin theme-contrast-tone-prop($property, $style, $important) {\n  // æ ¹æ® $style è¿ååéï¼ä¸»è¦æ¯ light æ dark åé\n  $theme-var: theme-contrast-tone-var($style);\n\n  @if $important {\n    #{$property}: map-get($theme-contrast-tone-property-values, $style) !important;\n    #{$property}: var(--theme-#{$theme-var}, map-get($theme-contrast-tone-property-values, $style)) !important;\n  } @else {\n    #{$property}: map-get($theme-contrast-tone-property-values, $style);\n    #{$property}: var(--theme-#{$theme-var}, map-get($theme-contrast-tone-property-values, $style));\n  }\n}\n\n// è®¾ç½®è¾å©é¢è² mixin\n// æ ¹æ®ç»å®ç $style ($theme-assist-colors ä¸­ç key) å $opacity è®¾ç½®é¢è²\n@mixin theme-assist($property, $style, $opacity: 1, $important: false) {\n  @if type-of($style) == \"color\" {\n    @if $important {\n      #{$property}: $style !important;\n    } @else {\n      #{$property}: $style;\n    }\n  } @else {\n    $color: map-get($theme-assist-colors, $style);\n\n    @if ($property == \"backgroud-color\" and $opacity != 1) {\n      // åé --theme-#{$style} å¨ theme.scss ä¸­å®ä¹\n      $css-var: var(--theme-#{$style}, $color);\n\n      @if $important {\n        background-color: rgba($color, $opacity) !important;\n      } @else {\n        background-color: rgba($color, $opacity);\n      }\n\n      // å¯ä»¥å¨æçè®¾ç½®é¢è²éæåº¦ï¼å±äº CSS 4 color èç´ï¼ç®åæµè§å¨æ¯æçä¸æ¯å¾å¥½\n      // å¯ä»¥ç¨ rgba æ¥ä»£æ¿ï¼ä½åªè½éæè®¾ç½®ï¼ä¸å¯ä»¥éçé¢è²åéæåº¦çååå¨æè®¾ç½®\n      // https://drafts.csswg.org/css-color/#modifying-colors\n      @supports (background-color: color(green a(10%))) {\n        @if $important {\n          background-color: color(#{$css-var} a(#{percentage($opacity)})) !important;\n        } @else {\n          background-color: color(#{$css-var} a(#{percentage($opacity)}));\n        }\n      }\n    } @else {\n      // ä¹å¯ä»¥ä½¿ç¨ alpha($color); åºå«æ¯ function alpha ä¹å¯ä»¥å¤ç the proprietary Microsoft `alpha(opacity=20)\n      // è function opacity åªæ¯æé¢è²å¼ï¼å¦æä¸æ¯é¢è²å¼åæ¥é\n      $alpha: opacity($color);\n\n      @if ($alpha != 1) {\n        @if $important {\n          #{$property}: $color !important;\n        } @else {\n          #{$property}: $color;\n        }\n      } @else {\n        @if $important {\n          #{$property}: rgba($color, $opacity) !important;\n        } @else {\n          #{$property}: rgba($color, $opacity);\n        }\n      }\n    }\n\n    // å ä¸ºä¸æ¯æä»¥ä¸åæ³ï¼æä»¥åªå¤ç $opacity == 1 çæåµ\n    // #{$property}: rgba(var(--theme-#{$style}, $color), $opacity);\n    @if ($opacity == 1) {\n      #{$property}: var(--theme-#{$style}, $color);\n    }\n  }\n}\n\n// ç³å theme-color-prop å theme-contrast-tone-prop\n// å¦æ $style æ¯é¢è²å¼ï¼åç´æ¥è®¾ç½®é¢è²\n@mixin theme-prop($property, $style, $important: false) {\n  @if type-of($style) == \"color\" {\n    @if $important {\n      #{$property}: $style !important;\n    } @else {\n      #{$property}: $style;\n    }\n  } @else {\n    $color: map-get($theme-property-values, $style);\n\n    @if ($color) {\n      @include theme-color-prop($property, $style, $important);\n    } @else {\n      $color: map-get($theme-contrast-tone-property-values, $style);\n\n      @if ($color) {\n        @include theme-contrast-tone-prop($property, $style, $important);\n      } @else {\n        // ç¨è¾å©é¢è²æ¥è®¾ç½®\n        $color: map-get($theme-assist-colors, $style);\n\n        @if ($color) {\n          @include theme-assist($property, $style, $important: $important);\n        } @else {\n          @error \"æ æçä¸»é¢å±æ§å¼ï¼#{$style} å¿é¡»æ¯ä»¥ä¸çæä¸ key #{map-keys($theme-property-values)}, #{map-keys($theme-contrast-tone-property-values)}\";\n        }\n      }\n    }\n  }\n}\n\n// éè¿è®¾ç½®ååæ¯æ¥å®å¶ä¸»é¢ï¼è¯¥ mixin åªå¤çç®åç color å background-color ï¼å¯¹äºæ´å¤å¶çéè¦ç»ä»¶åç¬å®ä¹\n// $style æ $theme-property-values æ $theme-assist-colors ä¸­å±æ§å¼\n// $fore true æåæ¯ï¼false æèæ¯ï¼é»è®¤ true\n@mixin theme($style, $fore: true) {\n  $themes: $theme-property-values;\n  $themes: map-merge($theme-assist-colors, $themes);\n  $color: map-get($themes, $style);\n\n  @if ($color == null) {\n    @error \"æ æçä¸»é¢å±æ§å¼ï¼#{$style} å¿é¡»æ¯ä»¥ä¸çæä¸ key #{map-keys($theme-property-values)}, #{map-keys($theme-assist-colors)}\";\n  }\n\n  // è²è°ï¼å¤æ­æ¯æ·±è²è¿æ¯æµè²\n  $tone: theme-tone($color);\n  // å¯¹æ¯è²è°\n  $contrast-tone: theme-contrast-tone($color);\n\n  @if ($fore) {\n    color: $color;\n    color: var(--theme-#{$style}, $color);\n    background-color: map-get($theme-contrast-tone-property-values, primary-on-#{$tone});\n    background-color: var(--theme-#{$contrast-tone}-primary, map-get($theme-contrast-tone-property-values, primary-on-#{$tone}));\n  } @else {\n    color: map-get($theme-contrast-tone-property-values, primary-on-#{$tone});\n    color: var(--theme-#{$contrast-tone}-primary, map-get($theme-contrast-tone-property-values, primary-on-#{$tone}));\n    background-color: $color;\n    background-color: var(--theme-#{$style}, $color);\n  }\n}\n\n// è®¾ç½®ä¸»é¢å¯¹åºçèæ¯ååæ¯é¢è² class\n// å¦æ $tone è®¾ä¸º trueï¼åä¼ç»åºå¯¹åºçåæ¯æèæ¯å¯¹æ¯é¢è²è²è°å¼ï¼æ·±è²ææµè²ï¼ï¼\n// è¿æ ·å¯ä»¥çªåºå¯¹æ¯åº¦ï¼æ¹ä¾¿éè¯»ï¼å¨éè¦çå°æ¹å¯ä»¥è°ç¨è¯¥ mixin ï¼å¹¶ä¸åæ° $tone è®¾ä¸º true å³å¯\n@mixin theme-classes($tone: false) {\n  @each $style, $color in $theme-property-values {\n    $color-alpha: alpha($color);\n\n    // è®¾ç½® primary å secondary ä»¥åæµè²åæ·±è²èæ¯é¢è²\n    // .theme-primary-bg {background-color: #2196f3; background-color: var(--theme-primary, #2196f3);}\n    // å¯¹äº $style å¼ä¸º background æ¶\n    // .theme-background {background-color: #fff; background-color: var(--theme-background, #fff);}\n    $class-name: if($style == \"background\", $style, #{$style}-bg);\n\n    .theme-#{$class-name} {\n      @include theme-prop(background-color, $style, true);\n\n      @if ($tone) {\n        @if ($color-alpha == 1) {\n          @include theme-prop(color, primary-on-#{$style}, true);\n        } @else {\n          @include theme-prop(color, primary-on-light, true);\n        }\n      }\n    }\n\n    // è®¾ç½® primary å secondary ä»¥åæµè²åæ·±è²åæ¯é¢è²\n    // .theme-primary {color: #2196f3; color: var(--theme-primary, #2196f3);}\n    @if $style != \"background\" {\n      .theme-#{$style} {\n        @include theme-prop(color, $style, true);\n\n        @if ($tone) {\n          @if ($color-alpha == 1) {\n            @include theme-prop(background-color, primary-on-#{$style}, true);\n          } @else {\n            @include theme-prop(background-color, primary-on-dark, true);\n          }\n        }\n      }\n    }\n  }\n}\n\n// è®¾ç½®è¾å©é¢è²å¯¹åºçèæ¯ååæ¯é¢è² class\n// å¦æ $tone è®¾ä¸º trueï¼åä¼ç»åºå¯¹åºçåæ¯æèæ¯å¯¹æ¯é¢è²è²è°å¼ï¼æ·±è²ææµè²ï¼ï¼\n// è¿æ ·å¯ä»¥çªåºå¯¹æ¯åº¦ï¼æ¹ä¾¿éè¯»ï¼å¨éè¦çå°æ¹å¯ä»¥è°ç¨è¯¥ mixin ï¼å¹¶ä¸åæ° $tone è®¾ä¸º true å³å¯\n@mixin theme-assist-classes($tone: false) {\n  @each $theme, $color in $theme-assist-colors {\n    $color-alpha: alpha($color);\n\n    // è¾å©é¢è²èæ¯è²\n    // .theme-success-bg {background-color: #4caf50; background-color: var(--theme-success, #4caf50);}\n    .theme-#{$theme}-bg {\n      background-color: $color !important;\n      background-color: var(--theme-#{$theme}, $color) !important;\n\n      @if ($tone) {\n        $contrast-tone: if($color-alpha == 1, theme-contrast-tone($color), \"dark\");\n        $color: map-get(map-get($theme-text-colors, $contrast-tone), primary);\n\n        color: $color !important;\n      }\n    }\n\n    // è¾å©é¢è²åæ¯è²\n    // .theme-success {color: #4caf50; color: var(--theme-success, #4caf50);}\n    .theme-#{$theme} {\n      color: $color !important;\n      color: var(--theme-#{$theme}, $color) !important;\n\n      @if ($tone) {\n        $contrast-tone: theme-contrast-tone($color);\n        $color: map-get(map-get($theme-text-colors, $contrast-tone), primary);\n\n        background-color: $color !important;\n      }\n    }\n  }\n}\n\n// è®¾ç½®ç°åº¦é¢è²å¯¹åºçèæ¯ååæ¯é¢è² class\n// å¦æ $tone è®¾ä¸º trueï¼åä¼ç»åºå¯¹åºçåæ¯æèæ¯å¯¹æ¯é¢è²è²è°å¼ï¼æ·±è²ææµè²ï¼ï¼\n// è¿æ ·å¯ä»¥çªåºå¯¹æ¯åº¦ï¼æ¹ä¾¿éè¯»ï¼å¨éè¦çå°æ¹å¯ä»¥è°ç¨è¯¥ mixin ï¼å¹¶ä¸åæ° $tone è®¾ä¸º true å³å¯\n@mixin theme-grey-classes($tone: false) {\n  // ç°åº¦é¢è²åæ¯-èæ¯é¢è²å¼\n  @each $theme, $color in $greys {\n    .theme-grey-#{$theme} {\n      color: $color !important;\n\n      @if ($tone) {\n        $contrast-tone: theme-contrast-tone($color);\n        $color: map-get(map-get($theme-text-colors, $contrast-tone), primary);\n\n        background-color: $color !important;\n      }\n    }\n\n    .theme-grey-bg-#{$theme} {\n      background-color: $color !important;\n\n      @if ($tone) {\n        $contrast-tone: theme-contrast-tone($color);\n        $color: map-get(map-get($theme-text-colors, $contrast-tone), primary);\n\n        color: $color !important;\n      }\n    }\n  }\n}\n","@import \"../../../../components/theme/mixin\";\n\n.navbar-primary {\n  @include theme-prop(background-color, primary-dark);\n}\n\n.drawer-toggle {\n  .icon-pure-menu {\n    @include theme-prop(color, secondary-on-dark);\n  }\n  &:hover {\n    .icon-pure-menu {\n      @include theme-prop(color, primary-on-dark);\n    }\n  }\n}\n","// font weight\n\n/**\n* å³äº font weight çè®¾ç½®ï¼è·å­ä½ç²ç»å¼æå³\n* 1. å¨ Safari å IOS ç³»ç»ä¸ï¼é»è®¤å­ä½ç²ç»åä¸º\n    100-300   400-500  600-700  800-900  åç§ï¼å¯¹åºä¸º\n    lighter æ¯ä»ç¶åç´ ç»§æ¿æ¥çå¼æ´ç»(å¤å¨å­ä½å¯è¡çç²ç»å¼èå´å)ã\n    normal æ­£å¸¸ç²ç»ï¼ä¸400ç­å¼ã\n    bold å ç²ï¼ ä¸700ç­å¼\n    bolder æ¯ä»ç¶åç´ ç»§æ¿æ¥çå¼æ´ç² (å¤å¨å­ä½å¯è¡çç²ç»å¼èå´å)ã\n å¦æè®¾ä¸º -apple-system æ \"PingFang SC\"æ¶ï¼å°±ä¼ææ´å¤çå­ä½ç²ç»ï¼\n  100 200 300 400 500 600-900 å­ç§ç²ç»\n  å¶ä¸­ lighter å¯¹åº 100    normal å¯¹åº 400    bold å¯¹åº 700    bolder å¯¹åº 700\n\n*  2 å¨ Chrome ä¸ï¼é»è®¤å­ä½ç²ç»åªæä¸¤ç§\n   100-400 500-900 å¯¹åºä¸º normal å boldï¼å¦æè®¾ç½®ä¸º lighterï¼åç­ä»·äº normalï¼ è®¾ä¸º bolder ç­ä»·äº bold\n   å¦æè®¾ä¸º \"PingFang SC\" åæ ·æå­ç§å­ä½ç²ç»ï¼åèä¸é¢\n* æä»¥ font-weight å­ä½ç²ç»è·å­ä½æå³ãå³äºå­ä½ç²ç»çåéæºå¶å¯ä»¥åèä»¥ä¸æç« \n  https://developer.mozilla.org/zh-CN/docs/Web/CSS/font-weight\n**/\n\n$font-weight-lighter: lighter !default;\n$font-weight-normal: normal !default;\n$font-weight-bold: bold !default;\n$font-weight-bolder: bolder !default;\n$font-weight-base: $font-weight-normal !default;\n\n// è®¾ç½®å¨å±å­ä½ï¼ä½¿ç¨ç³»ç»èªå¸¦çå­ä½ï¼åè https://www.smashingmagazine.com/2015/11/using-system-ui-fonts-practical-guide/\n\n// sass-lint:disable indentation\n$font-family:\n  // è®¾ç½®æ°å­å­ä½ç­å®½ï¼æ´ç´§åç¾è§ï¼åæ¶ä¹ä¼å½±åå°è¶é¾æ¥å­ä½\n  Helvetica Neue For Number,\n  // Safari for OS X and iOS (San Francisco)\n  -apple-system,\n  // Chrome >= 56 for OS X (San Francisco), Windows, Linux and Android\n  system-ui,\n    // Chrome < 56 for OS X (San Francisco)\n  BlinkMacSystemFont,\n    // Windows\n  \"Segoe UI\",\n    // Android\n  \"Roboto\",\n    // å¹³æ¹å­ä½ï¼å­ä½å¯¹æ¯åº¦æ´å¼ºï¼æ´ç»é¿\n  PingFang SC,\n    // å¤ç¨å­ä½\n  Hiragino Sans GB,\n    // å¨ window ç³»ç»ä¸å¤ç¨å­ä½\n  Microsoft YaHei,\n    // Basic web fallback\n  \"Helvetica Neue\", Arial, sans-serif !default;\n\n// ä»£ç æ ç­¾ä½¿ç¨è¯¥å­ä½ï¼ç¨å¨ code, kbd, pre, samp ä¸­\n$font-family-monospace: Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace !default;\n\n// å­ä½å¤§å°ï¼åºäº rem ï¼æ ¹å­ä½ä¸åè®¾ç½®ï¼ä½¿ç¨æµè§å¨é»è®¤å­ä½ 16px\n$font-size-base: .875rem !default; // è®¾ç½®å¨ body ä¸ï¼é»è®¤å­ä½ä¸º 14px\n$font-size: 1rem; // 16px;\n$font-size-lg: 1rem !default; // 16px\n$font-size-sm: .75rem !default; // 12px  ä¸è¬æµè§å¨æ¯æçæå°å­ä½\n\n// é»è®¤è¡é«ï¼å®éé«åº¦ç­äºå­ä½ä¹ä»¥è¡é«\n// å­ä½åè¡é«å¯¹åºå³ç³»\n// 12px -> 18px\n// 14px -> 21px\n// 16px -> 24px\n// 18px -> 27px\n$line-height-base: 1.5 !default;\n\n// dt font\n$dt-font-weight: $font-weight-bold !default;\n\n","// é¡µé¢åºé¨æ ·å¼\n\n@import \"../../../../components/theme/variable\";\n@import \"../../../../components/base/variables/font\";\n@import \"../../../../components/base/variables/font\";\n\n.footer-assist {\n  // æ­¤å¤çæ°å¼ç­äº footer çé«åº¦ + é¢ççé´è·\n  margin-top: $font-size-base * $line-height-base + 2rem;\n}\n\n.footer {\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  padding: 1rem 0;\n  border-top: 1px solid $grey-color-300;\n  color: map-get(map-get($theme-text-colors, dark), secondary);\n  background: #fff;\n}\n","// é¦é¡µå¼å¯ä¹æ\n@import \"../../../../components/layout/grid/variable\";\n@import \"../../../../components/responsive/mixin\";\n\n.doc-journey {\n  position: relative;\n  padding:  2rem ($grid-gutter-width / 2);\n\n  h1 {\n    line-height: 1;\n  }\n\n  .btn {\n    width:         100%;\n    padding:       .75rem 1.5rem;\n    margin-bottom: 1rem;\n    border-radius: 5px;\n    font-size:     1.125rem;\n  }\n\n  @include media-breakpoint-up(sm) {\n    padding-top:    2.5rem;\n    padding-bottom: 2.5rem;\n  }\n\n  @include media-breakpoint-up(md) {\n    h1 {\n      font-size: 3rem;\n    }\n\n    .btn {\n      height:        3.5rem;\n      padding:       .875rem 2rem;\n      border-radius: 5px;\n      font-size:     1.125rem;\n\n      &:first-child {\n        margin-right: 2rem;\n      }\n    }\n  }\n\n  @include media-breakpoint-up(lg) {\n    .btn {\n      width: 40%;\n    }\n  }\n}\n","// responsive mixin\n@import \"variable\";\n@import \"function\";\n\n// ååºå¼ååªä½æ¥è¯¢ï¼è®¾å¤å¤§å°åçç¹ä¸º\n// {\n//   xs: 0, // xsmall\n//   sm: 600px, // small\n//   md: 1024px, // medium\n//   lg: 1440px, // large\n//   xl: 1600px, // xlarge\n// }\n\n// https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Media_queries\n// è¡¥åä¸ä¸åªä½æ¥è¯¢ max-width min-width max-height min-height ç¥è¯\n// ä»¥ max-width min-width ä¸ºä¾æ¥è¯´æ\n\n// 1\n// max-width ä¸é¢çä¾å­æå°äºç­äº 600px æ¶ï¼è¯¥æ ·å¼èµ·ä½ç¨ï¼å³æå¤§å®½åº¦ä¸è¶è¿ 600px èµ·ä½ç¨\n//@media screen and (max-width: 600px) {\n//  .class {\n//    background: #ccc;\n//  }\n//}\n\n// 2\n// min-width ä¸é¢çä¾å­æå¤§äºç­äº 900px æ¶ï¼è¯¥æ ·å¼èµ·ä½ç¨ï¼å³æå°å®½åº¦éè¦å¤§äºç­äº900px èµ·ä½ç¨\n//@media screen and (min-width: 900px) {\n//  .class {\n//    background: #666;\n//  }\n//}\n\n// 3\n// ç»åä½¿ç¨ï¼ä¸é¢çä¾å­æå¤§äºç­äº600px å°äºç­äº900px æ¶ï¼èµ·ä½ç¨\n//@media screen and (min-width: 600px) and (max-width: 900px) {\n//  .class {\n//    background: #333;\n//  }\n//}\n\n// éè¿ä¸é¢çä¾å­ï¼ç»åcsså±æ§ min-width å max-width çè§£ï¼å³æå°å®½åº¦å¿é¡»æ¯å¤å°æå¶ä½ç¨ï¼\n// ä¸è½è¶è¿æå¤§å®½åº¦æèµ·ä½ç¨\n// å¦å¤ä¸ä¾ä¸­ 3 ä¸­çæåµï¼min-width å¿é¡»å°äº max-width ï¼å¦åä¸èµ·ä½ç¨\n\n// å¦æ $name ä¸ºæå°å¼ï¼å³ xs æ¶ï¼åä¸ç¨åªä½æ¥è¯¢è¾åºæ ·å¼ï¼å¦åä¸ºåªä½æ¥è¯¢è¾åº\n// å¹¶è®¾ç½®å¶æå°å®½åº¦ï¼å³å½è®¾å¤å®½åº¦è¾¾å°è¯¥å¼æ¶ï¼åºç¨å®ä¹çè¯¥æ ·å¼\n//@include media-breakpoint-up(xs) {\n//  .test {\n//    color: #ff0000;\n//  }\n//}\n//\n//è¾åºç»æä¸º\n//  .test {\n//    color: #ff0000;\n//  }\n//\n\n//@include media-breakpoint-up(sm) {\n//  .test {\n//    color: #ff0000;\n//  }\n//}\n//è¾åºç»æä¸º\n// @media (min-width: 600px) {\n//  .test {\n//    color: #ff0000;\n//  }\n// }\n\n@mixin media-breakpoint-up($name, $breakpoints: $responsive-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// è· media-breakpoint-up ç¸å å¦æ $name ä¸ºæå¤§å¼ï¼å³ xl æ¶ï¼åä¸ä½¿ç¨åªä½æ¥è¯¢è¾åºæ ·å¼ï¼\n// å¦åä½¿ç¨åªä½æ¥è¯¢è¾åºï¼\n// å¹¶è®¾ç½®å¶æå¤§å®½åº¦ï¼å³å½è®¾å¤å®½åº¦å°äºç­äºè¯¥å¼æ¶ï¼åºç¨å®ä¹çè¯¥æ ·å¼\n//@include media-breakpoint-down(xs) {\n//  .test {\n//    color: #ff0000;\n//  }\n//}\n//è¾åºç»æä¸º\n//@media (max-width: 599px) {\n//  .test {\n//    color: #ff0000;\n//  }\n//}\n//\n\n//@include media-breakpoint-down(xl) {\n//  .test {\n//    color: #ff0000;\n//  }\n//}\n//è¾åºç»æä¸º\n//.test {\n//  color: #ff0000;\n//}\n\n@mixin media-breakpoint-down($name, $breakpoints: $responsive-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// è®¾ç½®åªä½æ¥è¯¢æå¤§åæå°åºé´æ ·å¼\n//@include media-breakpoint-between(xs, xl) {\n//  .test {\n//    color: #ff0000;\n//  }\n//}\n//è¾åºç»æä¸º\n//@media (min-width: 599px) {\n//  .test {\n//    color: #ff0000;\n//  }\n//}\n//\n//@include media-breakpoint-between(sm, md) {\n//  .test {\n//    color: #ff0000;\n//  }\n//}\n//è¾åºç»æä¸º\n//@media (min-width: 1023px) and (max-width: 1439px) {\n//  .test {\n//    color: #ff0000;\n//  }\n//}\n\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $responsive-breakpoints) {\n  $min: breakpoint-max($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if ($max == null) {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  }\n}\n\n// è®¾ç½®æä¸åªä½æ¥è¯¢åºé´æå¤§åæå°åºé´æ ·å¼ï¼æ¯å¦ sm çåºé´ä¸º 600px  1023px\n//æ²¡æ breakpoint ä¸º xs å xl çæåµï¼å³å¦æä¼ å¥ xs å xl è¿åä¸ºç©º\n//@include media-breakpoint-only(xl) {\n//  .test {\n//    color: #ff0000;\n//  }\n//}\n//è¾åºç»æä¸ºç©º\n//\n//@include media-breakpoint-only(lg) {\n//  .test {\n//    color: #ff0000;\n//  }\n//}\n//è¾åºç»æä¸º\n//@media (min-width: 1440px) and (max-width: 1599px) {\n//  .test {\n//    color: #ff0000;\n//  }\n//}\n\n@mixin media-breakpoint-only($name, $breakpoints: $responsive-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name) {\n      @content;\n    }\n  } @else if ($min == null) {\n    @include media-breakpoint-down($name) {\n      @content;\n    }\n  }\n}\n\n// å¦ææä»¬ä¸ä½¿ç¨ååºå¼å¸å±æ¶ï¼å³æåéå¼ $enable-breakpoint è®¾ä¸º false æ¶\n@mixin no-media-breakpoint() {\n  @content;\n}\n\n"],"sourceRoot":""}