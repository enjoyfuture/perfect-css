{"version":3,"sources":["webpack:///./docs/assets/scss/common/_header.scss","webpack:///./components/theme/_mixin.scss","webpack:///./home.scss","webpack:///./docs/assets/scss/common/_footer.scss","webpack:///./docs/assets/scss/home/_journey.scss","webpack:///./components/responsive/_mixin.scss"],"names":[],"mappings":"AAEA,+BCiCI,yBACA,sDCfH,qCDcG,WACA,sCEhCJ,eAEE,mBAGF,QACE,kBACA,SACA,WACA,eACA,qCACA,sBACA,gBCZF,aACE,kBACA,kBAEA,gBACE,cALJ,kBASI,WACA,sBACA,mBACA,kBACA,mBCyDA,yBDtEJ,aAiBI,mBACA,sBF8CD,CGMC,0BDhDA,gBACE,eAvBN,kBA2BM,qBACA,kBACA,mBAHF,8BAMI,kBFgDL,CGVC,0BDhCA,kBACE,UF+CH","file":"home.css","sourcesContent":["@import \"../../../../components/theme/mixin\";\n\n.drawer-toggle {\n  .icon-pure-menu {\n    @include theme-prop(color, secondary-on-dark);\n  }\n  &:hover {\n    .icon-pure-menu {\n      @include theme-prop(color, primary-on-dark);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./docs/assets/scss/common/_header.scss","// theme mixin\n@import \"./variable\";\n@import \"./function\";\n\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $theme-property-values (_variables.scss).\n */\n\n// ç»å±æ§ $property è®¾ç½®é¢è² $style å¼\n// å±æ§ $property ä¸è¬ç¨å¨ color background-color border-color ç­ï¼ä¹å¯ç¨å¨ä»»ä½å¯ä»¥è®¾ç½®é¢è²å¼çå±æ§ä¸\n// $style åºè¯¥æ¯ $theme-property-values ä¸­æä¸ª key\n// è¯¥ mixin ä¸»è¦ç¨æ¥è®¾ç½®ä¸»é¢é¢è²å¼ï¼å¹¶ä¸è®¾ç½®äºä¸»é¢ css åéå¼\n// ç¨æ·éè¿ä¿®æ¹ css åéå¼å¯ä»¥å¨æçä¿®æ¹æ´ä¸ªä¸»é¢å¼ï¼æ¯å¦å¨ body ä¸ä¿®æ¹ css åéå¼\n@mixin theme-color-prop($property, $style, $important) {\n  @if $important {\n    #{$property}: map-get($theme-property-values, $style) !important;\n    #{$property}: var(--theme-#{$style}, map-get($theme-property-values, $style)) !important;\n  } @else {\n    #{$property}: map-get($theme-property-values, $style);\n    #{$property}: var(--theme-#{$style}, map-get($theme-property-values, $style));\n  }\n}\n\n// ç¨æ¥è®¾ç½®ä¸»é¢è²å¯¹åºçå¯¹æ¯è²è°å¼ï¼æµè²è¿æ¯æ·±è²\n// $style åºè¯¥æ¯ $theme-contrast-tone-property-values ä¸­æä¸ª key\n// è¯¥ mixin é¤äºè®¾ç½®äºå¯¹æ¯è²è°å¼ï¼è¿è®¾ç½®äºå¯¹åºç css åéå¼\n@mixin theme-contrast-tone-prop($property, $style, $important) {\n  // æ ¹æ® $style è¿ååéï¼ä¸»è¦æ¯ light æ dark åé\n  $theme-var: theme-contrast-tone-var($style);\n  @if $important {\n    #{$property}: map-get($theme-contrast-tone-property-values, $style) !important;\n    #{$property}: var(--theme-#{$theme-var}, map-get($theme-contrast-tone-property-values, $style)) !important;\n  } @else {\n    #{$property}: map-get($theme-contrast-tone-property-values, $style);\n    #{$property}: var(--theme-#{$theme-var}, map-get($theme-contrast-tone-property-values, $style));\n  }\n}\n\n// è®¾ç½®è¾å©é¢è² mixin\n// æ ¹æ®ç»å®ç $style ($theme-assist-colors ä¸­ç key) å $opacity è®¾ç½®é¢è²\n@mixin theme-assist($property, $style, $opacity: 1, $important: false) {\n  @if type-of($style) == \"color\" {\n    @if $important {\n      #{$property}: $style !important;\n    } @else {\n      #{$property}: $style;\n    }\n  } @else {\n    $color: map-get($theme-assist-colors, $style);\n\n    @if ($property == \"backgroud-color\" and $opacity != 1) {\n      // åé --theme-#{$style} å¨ theme.scss ä¸­å®ä¹\n      $css-var: var(--theme-#{$style}, $color);\n      @if $important {\n        background-color: rgba($color, $opacity) !important;\n      } @else {\n        background-color: rgba($color, $opacity);\n      }\n\n      // å¯ä»¥å¨æçè®¾ç½®é¢è²éæåº¦ï¼å±äº CSS 4 color èç´ï¼ç®åæµè§å¨æ¯æçä¸æ¯å¾å¥½\n      // å¯ä»¥ç¨ rgba æ¥ä»£æ¿ï¼ä½åªè½éæè®¾ç½®ï¼ä¸å¯ä»¥éçé¢è²åéæåº¦çååå¨æè®¾ç½®\n      // https://drafts.csswg.org/css-color/#modifying-colors\n      @supports (background-color: color(green a(10%))) {\n        @if $important {\n          background-color: color(#{$css-var} a(#{percentage($opacity)})) !important;\n        } @else {\n          background-color: color(#{$css-var} a(#{percentage($opacity)}));\n        }\n      }\n    } @else {\n      // ä¹å¯ä»¥ä½¿ç¨ alpha($color); åºå«æ¯ function alpha ä¹å¯ä»¥å¤ç the proprietary Microsoft `alpha(opacity=20)\n      // è function opacity åªæ¯æé¢è²å¼ï¼å¦æä¸æ¯é¢è²å¼åæ¥é\n      $alpha: opacity($color);\n\n      @if ($alpha != 1) {\n        @if $important {\n          #{$property}: $color !important;\n        } @else {\n          #{$property}: $color;\n        }\n      } @else {\n        @if $important {\n          #{$property}: rgba($color, $opacity) !important;\n        } @else {\n          #{$property}: rgba($color, $opacity);\n        }\n      }\n    }\n\n    // å ä¸ºä¸æ¯æä»¥ä¸åæ³ï¼æä»¥åªå¤ç $opacity == 1 çæåµ\n    // #{$property}: rgba(var(--theme-#{$style}, $color), $opacity);\n    @if ($opacity == 1) {\n      #{$property}: var(--theme-#{$style}, $color);\n    }\n  }\n}\n\n// ç³å theme-color-prop å theme-contrast-tone-prop\n// å¦æ $style æ¯é¢è²å¼ï¼åç´æ¥è®¾ç½®é¢è²\n@mixin theme-prop($property, $style, $important: false) {\n  @if type-of($style) == \"color\" {\n    @if $important {\n      #{$property}: $style !important;\n    } @else {\n      #{$property}: $style;\n    }\n  } @else {\n    $color: map-get($theme-property-values, $style);\n    @if ($color) {\n      @include theme-color-prop($property, $style, $important);\n    } @else {\n      $color: map-get($theme-contrast-tone-property-values, $style);\n      @if ($color) {\n        @include theme-contrast-tone-prop($property, $style, $important);\n      } @else {\n        // ç¨è¾å©é¢è²æ¥è®¾ç½®\n        $color: map-get($theme-assist-colors, $style);\n        @if ($color) {\n          @include theme-assist($property, $style, $important: $important);\n        } @else {\n          @error \"æ æçä¸»é¢å±æ§å¼ï¼#{$style} å¿é¡»æ¯ä»¥ä¸çæä¸ key #{map-keys($theme-property-values)}, #{map-keys($theme-contrast-tone-property-values)}\";\n        }\n      }\n    }\n  }\n}\n\n// éè¿è®¾ç½®ååæ¯æ¥å®å¶ä¸»é¢ï¼è¯¥ mixin åªå¤çç®åç color å background-color ï¼å¯¹äºæ´å¤å¶çéè¦ç»ä»¶åç¬å®ä¹\n// $style æ $theme-property-values æ $theme-assist-colors ä¸­å±æ§å¼\n// $fore true æåæ¯ï¼false æèæ¯ï¼é»è®¤ true\n@mixin theme($style, $fore: true) {\n  $themes: $theme-property-values;\n  $themes: map-merge($theme-assist-colors, $themes);\n  $color: map-get($themes, $style);\n\n  @if ($color == null) {\n    @error \"æ æçä¸»é¢å±æ§å¼ï¼#{$style} å¿é¡»æ¯ä»¥ä¸çæä¸ key #{map-keys($theme-property-values)}, #{map-keys($theme-assist-colors)}\";\n  }\n\n  // è²è°ï¼å¤æ­æ¯æ·±è²è¿æ¯æµè²\n  $tone: theme-tone($color);\n  // å¯¹æ¯è²è°\n  $contrast-tone: theme-contrast-tone($color);\n\n  @if ($fore) {\n    color: $color;\n    color: var(--theme-#{$style}, $color);\n    background-color: map-get($theme-contrast-tone-property-values, primary-on-#{$tone});\n    background-color: var(--theme-#{$contrast-tone}-primary, map-get($theme-contrast-tone-property-values, primary-on-#{$tone}));\n  } @else {\n    color: map-get($theme-contrast-tone-property-values, primary-on-#{$tone});\n    color: var(--theme-#{$contrast-tone}-primary, map-get($theme-contrast-tone-property-values, primary-on-#{$tone}));\n    background-color: $color;\n    background-color: var(--theme-#{$style}, $color);\n  }\n}\n\n// è®¾ç½®ä¸»é¢å¯¹åºçèæ¯ååæ¯é¢è² class\n// å¦æ $tone è®¾ä¸º trueï¼åä¼ç»åºå¯¹åºçåæ¯æèæ¯å¯¹æ¯é¢è²è²è°å¼ï¼æ·±è²ææµè²ï¼ï¼\n// è¿æ ·å¯ä»¥çªåºå¯¹æ¯åº¦ï¼æ¹ä¾¿éè¯»ï¼å¨éè¦çå°æ¹å¯ä»¥è°ç¨è¯¥ mixin ï¼å¹¶ä¸åæ° $tone è®¾ä¸º true å³å¯\n@mixin theme-classes($tone: false) {\n  // è®¾ç½® primary å secondary ä»¥åæµè²åæ·±è²èæ¯é¢è²å¼\n  // .theme-primary-bg {background-color: #2196f3; background-color: var(--theme-primary, #2196f3);}\n  @each $style in map-keys($theme-property-values) {\n    @if $style == \"background\" {\n      // èæ¯è²ï¼ç¨å¨èæ¯ä¸\n      // .theme-background {background-color: #fff; background-color: var(--theme-background, #fff);}\n      .theme-background {\n        @include theme-prop(background-color, background, true);\n        @if ($tone) {\n          @include theme-prop(color, primary-on-background, true);\n        }\n      }\n    } @else {\n      .theme-#{$style}-bg {\n        @include theme-prop(background-color, $style, true);\n        @if ($tone) {\n          @include theme-prop(color, primary-on-#{$style}, true);\n        }\n      }\n    }\n  }\n\n  // éè¿æ·»å è¯¥æ ·å¼å¼ï¼æ¹åææ¬ä¸»é¢åæ¯é¢è²å¼ï¼å¯¹äºä¸»é¢è²è°($theme-contrast-tone-property-values)ï¼ä¸åç¬è®¾ç½®\n  // .theme-primary {color: #2196f3; color: var(--theme-primary, #2196f3);}\n  @each $style in map-keys($theme-property-values) {\n    @if $style != \"background\" {\n      .theme-#{$style} {\n        @include theme-prop(color, $style, true);\n        @if ($tone) {\n          @include theme-prop(background-color, primary-on-#{$style}, true);\n        }\n      }\n    }\n  }\n}\n\n// è®¾ç½®è¾å©é¢è²å¯¹åºçèæ¯ååæ¯é¢è² class\n// å¦æ $tone è®¾ä¸º trueï¼åä¼ç»åºå¯¹åºçåæ¯æèæ¯å¯¹æ¯é¢è²è²è°å¼ï¼æ·±è²ææµè²ï¼ï¼\n// è¿æ ·å¯ä»¥çªåºå¯¹æ¯åº¦ï¼æ¹ä¾¿éè¯»ï¼å¨éè¦çå°æ¹å¯ä»¥è°ç¨è¯¥ mixin ï¼å¹¶ä¸åæ° $tone è®¾ä¸º true å³å¯\n@mixin theme-assist-classes($tone: false) {\n  // è¾å©é¢è²èæ¯è²\n  // .theme-success-bg {background-color: #4caf50; background-color: var(--theme-success, #4caf50);}\n  @each $theme, $color in $theme-assist-colors {\n    .theme-#{$theme}-bg {\n      background-color: $color !important;\n      background-color: var(--theme-#{$theme}, $color) !important;\n      @if ($tone) {\n        $contrast-tone: theme-contrast-tone($color);\n        $color: map-get(map-get($theme-text-colors, $contrast-tone), primary);\n        color: $color !important;\n      }\n    }\n  }\n\n  // è¾å©é¢è²åæ¯è²\n  // .theme-success {color: #4caf50; color: var(--theme-success, #4caf50);}\n  @each $theme, $color in $theme-assist-colors {\n    .theme-#{$theme} {\n      color: $color !important;\n      color: var(--theme-#{$theme}, $color) !important;\n      @if ($tone) {\n        $contrast-tone: theme-contrast-tone($color);\n        $color: map-get(map-get($theme-text-colors, $contrast-tone), primary);\n        background-color: $color !important;\n      }\n    }\n  }\n}\n\n// è®¾ç½®ç°åº¦é¢è²å¯¹åºçèæ¯ååæ¯é¢è² class\n// å¦æ $tone è®¾ä¸º trueï¼åä¼ç»åºå¯¹åºçåæ¯æèæ¯å¯¹æ¯é¢è²è²è°å¼ï¼æ·±è²ææµè²ï¼ï¼\n// è¿æ ·å¯ä»¥çªåºå¯¹æ¯åº¦ï¼æ¹ä¾¿éè¯»ï¼å¨éè¦çå°æ¹å¯ä»¥è°ç¨è¯¥ mixin ï¼å¹¶ä¸åæ° $tone è®¾ä¸º true å³å¯\n@mixin theme-grey-classes($tone: false) {\n  // ç°åº¦é¢è²åæ¯-èæ¯é¢è²å¼\n  @each $theme, $color in $greys {\n    .theme-grey-#{$theme} {\n      color: $color !important;\n      @if ($tone) {\n        $contrast-tone: theme-contrast-tone($color);\n        $color: map-get(map-get($theme-text-colors, $contrast-tone), primary);\n        background-color: $color !important;\n      }\n    }\n    .theme-grey-bg-#{$theme} {\n      background-color: $color !important;\n      @if ($tone) {\n        $contrast-tone: theme-contrast-tone($color);\n        $color: map-get(map-get($theme-text-colors, $contrast-tone), primary);\n        color: $color !important;\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./components/theme/_mixin.scss","@charset \"UTF-8\";\n\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $theme-property-values (_variables.scss).\n */\n\n.drawer-toggle .icon-pure-menu {\n  color: rgba(255, 255, 255, 0.7);\n  color: var(--theme-light-secondary, rgba(255, 255, 255, 0.7));\n}\n\n.drawer-toggle:hover .icon-pure-menu {\n  color: #ffffff;\n  color: var(--theme-light-primary, #ffffff);\n}\n\n/**\n * 计算两种颜色的对比度，一般指前景色和背景色\n * https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests 第3点\n */\n\n.footer-assist {\n  padding-top: 4.5rem;\n}\n\n.footer {\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  padding: 1rem 0;\n  border-top: 1px solid rgba(0, 0, 0, 0.12);\n  color: rgba(0, 0, 0, 0.54);\n  background: #fff;\n}\n\n.doc-journey {\n  position: relative;\n  padding: 2rem 15px;\n}\n\n.doc-journey h1 {\n  line-height: 1;\n}\n\n.doc-journey .btn {\n  width: 100%;\n  padding: .75rem 1.5rem;\n  margin-bottom: 1rem;\n  border-radius: 5px;\n  font-size: 1.125rem;\n}\n\n@media (min-width: 600px) {\n  .doc-journey {\n    padding-top: 2.5rem;\n    padding-bottom: 2.5rem;\n  }\n}\n\n@media (min-width: 1024px) {\n  .doc-journey h1 {\n    font-size: 3rem;\n  }\n\n  .doc-journey .btn {\n    padding: .875rem 2rem;\n    border-radius: 5px;\n    font-size: 1.125rem;\n  }\n\n  .doc-journey .btn:first-child {\n    margin-right: 2rem;\n  }\n}\n\n@media (min-width: 1200px) {\n  .doc-journey .btn {\n    width: 40%;\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./home.scss","// é¡µé¢åºé¨æ ·å¼\n\n@import \"../../../../components/theme/variable\";\n\n.footer-assist {\n  // æ­¤å¤çæ°å¼ç­äº footer çé«åº¦ + é¢ççé´è·\n  padding-top: 4.5rem;\n}\n\n.footer {\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  padding: 1rem 0;\n  border-top: 1px solid $grey-color-300;\n  color: map-get(map-get($theme-text-colors, dark), secondary);\n  background: #fff;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./docs/assets/scss/common/_footer.scss","// é¦é¡µå¼å¯ä¹æ\n@import \"../../../../components/layout/grid/variable\";\n@import \"../../../../components/responsive/mixin\";\n\n.doc-journey {\n  position: relative;\n  padding: 2rem ($grid-gutter-width / 2);\n\n  h1 {\n    line-height: 1;\n  }\n\n  .btn {\n    width: 100%;\n    padding: .75rem 1.5rem;\n    margin-bottom: 1rem;\n    border-radius: 5px;\n    font-size: 1.125rem;\n  }\n\n  @include media-breakpoint-up(sm) {\n    padding-top: 2.5rem;\n    padding-bottom: 2.5rem;\n  }\n\n  @include media-breakpoint-up(md) {\n    h1 {\n      font-size: 3rem;\n    }\n\n    .btn {\n      padding: .875rem 2rem;\n      border-radius: 5px;\n      font-size: 1.125rem;\n\n      &:first-child {\n        margin-right: 2rem;\n      }\n    }\n  }\n\n  @include media-breakpoint-up(lg) {\n    .btn {\n      width: 40%;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./docs/assets/scss/home/_journey.scss","// responsive mixin\n@import \"variable\";\n@import \"function\";\n\n// ååºå¼ååªä½æ¥è¯¢ï¼è®¾å¤å¤§å°åçç¹ä¸º\n// {\n//   xs: 0, // xsmall\n//   sm: 600px, // small\n//   md: 1024px, // medium\n//   lg: 1440px, // large\n//   xl: 1600px, // xlarge\n// }\n\n// https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Media_queries\n// è¡¥åä¸ä¸åªä½æ¥è¯¢ max-width min-width max-height min-height ç¥è¯\n// ä»¥ max-width min-width ä¸ºä¾æ¥è¯´æ\n\n// 1\n// max-width ä¸é¢çä¾å­æå°äºç­äº 600px æ¶ï¼è¯¥æ ·å¼èµ·ä½ç¨ï¼å³æå¤§å®½åº¦ä¸è¶è¿ 600px èµ·ä½ç¨\n//@media screen and (max-width: 600px) {\n//  .class {\n//    background: #ccc;\n//  }\n//}\n\n// 2\n// min-width ä¸é¢çä¾å­æå¤§äºç­äº 900px æ¶ï¼è¯¥æ ·å¼èµ·ä½ç¨ï¼å³æå°å®½åº¦éè¦å¤§äºç­äº900px èµ·ä½ç¨\n//@media screen and (min-width: 900px) {\n//  .class {\n//    background: #666;\n//  }\n//}\n\n// 3\n// ç»åä½¿ç¨ï¼ä¸é¢çä¾å­æå¤§äºç­äº600px å°äºç­äº900px æ¶ï¼èµ·ä½ç¨\n//@media screen and (min-width: 600px) and (max-width: 900px) {\n//  .class {\n//    background: #333;\n//  }\n//}\n\n// éè¿ä¸é¢çä¾å­ï¼ç»åcsså±æ§ min-width å max-width çè§£ï¼å³æå°å®½åº¦å¿é¡»æ¯å¤å°æå¶ä½ç¨ï¼\n// ä¸è½è¶è¿æå¤§å®½åº¦æèµ·ä½ç¨\n// å¦å¤ä¸ä¾ä¸­ 3 ä¸­çæåµï¼min-width å¿é¡»å°äº max-width ï¼å¦åä¸èµ·ä½ç¨\n\n// å¦æ $name ä¸ºæå°å¼ï¼å³ xs æ¶ï¼åä¸ç¨åªä½æ¥è¯¢è¾åºæ ·å¼ï¼å¦åä¸ºåªä½æ¥è¯¢è¾åº\n// å¹¶è®¾ç½®å¶æå°å®½åº¦ï¼å³å½è®¾å¤å®½åº¦è¾¾å°è¯¥å¼æ¶ï¼åºç¨å®ä¹çè¯¥æ ·å¼\n//@include media-breakpoint-up(xs) {\n//  .test {\n//    color: #ff0000;\n//  }\n//}\n//\n//è¾åºç»æä¸º\n//  .test {\n//    color: #ff0000;\n//  }\n//\n\n//@include media-breakpoint-up(sm) {\n//  .test {\n//    color: #ff0000;\n//  }\n//}\n//è¾åºç»æä¸º\n// @media (min-width: 600px) {\n//  .test {\n//    color: #ff0000;\n//  }\n// }\n\n@mixin media-breakpoint-up($name, $breakpoints: $responsive-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// è· media-breakpoint-up ç¸å å¦æ $name ä¸ºæå¤§å¼ï¼å³ xl æ¶ï¼åä¸ä½¿ç¨åªä½æ¥è¯¢è¾åºæ ·å¼ï¼\n// å¦åä½¿ç¨åªä½æ¥è¯¢è¾åºï¼\n// å¹¶è®¾ç½®å¶æå¤§å®½åº¦ï¼å³å½è®¾å¤å®½åº¦å°äºç­äºè¯¥å¼æ¶ï¼åºç¨å®ä¹çè¯¥æ ·å¼\n//@include media-breakpoint-down(xs) {\n//  .test {\n//    color: #ff0000;\n//  }\n//}\n//è¾åºç»æä¸º\n//@media (max-width: 599px) {\n//  .test {\n//    color: #ff0000;\n//  }\n//}\n//\n\n//@include media-breakpoint-down(xl) {\n//  .test {\n//    color: #ff0000;\n//  }\n//}\n//è¾åºç»æä¸º\n//.test {\n//  color: #ff0000;\n//}\n\n@mixin media-breakpoint-down($name, $breakpoints: $responsive-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// è®¾ç½®åªä½æ¥è¯¢æå¤§åæå°åºé´æ ·å¼\n//@include media-breakpoint-between(xs, xl) {\n//  .test {\n//    color: #ff0000;\n//  }\n//}\n//è¾åºç»æä¸º\n//@media (min-width: 599px) {\n//  .test {\n//    color: #ff0000;\n//  }\n//}\n//\n//@include media-breakpoint-between(sm, md) {\n//  .test {\n//    color: #ff0000;\n//  }\n//}\n//è¾åºç»æä¸º\n//@media (min-width: 1023px) and (max-width: 1439px) {\n//  .test {\n//    color: #ff0000;\n//  }\n//}\n\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $responsive-breakpoints) {\n  $min: breakpoint-max($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if ($max == null) {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  }\n}\n\n// è®¾ç½®æä¸åªä½æ¥è¯¢åºé´æå¤§åæå°åºé´æ ·å¼ï¼æ¯å¦ sm çåºé´ä¸º 600px  1023px\n//æ²¡æ breakpoint ä¸º xs å xl çæåµï¼å³å¦æä¼ å¥ xs å xl è¿åä¸ºç©º\n//@include media-breakpoint-only(xl) {\n//  .test {\n//    color: #ff0000;\n//  }\n//}\n//è¾åºç»æä¸ºç©º\n//\n//@include media-breakpoint-only(lg) {\n//  .test {\n//    color: #ff0000;\n//  }\n//}\n//è¾åºç»æä¸º\n//@media (min-width: 1440px) and (max-width: 1599px) {\n//  .test {\n//    color: #ff0000;\n//  }\n//}\n\n@mixin media-breakpoint-only($name, $breakpoints: $responsive-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name) {\n      @content;\n    }\n  } @else if ($min == null) {\n    @include media-breakpoint-down($name) {\n      @content;\n    }\n  }\n}\n\n// å¦ææä»¬ä¸ä½¿ç¨ååºå¼å¸å±æ¶ï¼å³æåéå¼ $enable-breakpoint è®¾ä¸º false æ¶\n@mixin no-media-breakpoint() {\n  @content;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./components/responsive/_mixin.scss"],"sourceRoot":""}