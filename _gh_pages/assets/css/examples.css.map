{"version":3,"sources":["webpack:///./docs/assets/scss/common/_header.scss","webpack:///./components/theme/_mixin.scss","webpack:///./docs/assets/scss/common/_footer.scss","webpack:///./components/theme/_variable.scss","webpack:///./docs/assets/scss/examples/_main.scss"],"names":[],"mappings":";;;;;AAEA,gBCkCI,iCACA,0DAAuG,CDjC1G,+BCgCG,yBACA,qDAAuG,CD/B3G,qCC8BI,WACA,qCAAuG,CDvBtG,eEPH,oBAAsD,CACvD,QASC,gBAFA,qCC2SuB,SD9Sd,sBC0EsB,eD3E/B,kBAAkB,UAEP,CAKZ,gBEjBC,mBAAoB,CADtB,yDAII,eAAgB,CAJpB,sCAQI,eAAgB,CARpB,iHAgBI,kBAAmB,C","file":"../css/examples.css","sourcesContent":["@import \"../../../../components/theme/mixin\";\n\n.navbar-primary {\n  @include theme-prop(background-color, primary-on-light);\n}\n\n.drawer-toggle {\n  .icon-pure-menu {\n    @include theme-prop(color, secondary-on-dark);\n  }\n\n  &:hover {\n    .icon-pure-menu {\n      @include theme-prop(color, primary-on-dark);\n    }\n  }\n}\n","// theme mixin\n@import \"./variable\";\n@import \"./function\";\n\n/**\n * Applies the correct theme color style to the specified property.\n * $property is typically color or background-color, but can be any CSS property that accepts color values.\n * $style should be one of the map keys in $theme-property-values (_variables.scss).\n */\n\n// 给属性 $property 设置颜色 $style 值\n// 属性 $property 一般用在 color background-color border-color 等，也可用在任何可以设置颜色值的属性上\n// $style 应该是 $theme-property-values 中某个 key\n// 该 mixin 主要用来设置主题颜色值，并且设置了主题 css 变量值\n// 用户通过修改 css 变量值可以动态的修改整个主题值，比如在 body 上修改 css 变量值\n@mixin theme-color-prop($property, $style, $important) {\n  @if $important {\n    #{$property}: map-get($theme-property-values, $style) !important;\n    #{$property}: var(--theme-#{$style}, map-get($theme-property-values, $style)) !important;\n  } @else {\n    #{$property}: map-get($theme-property-values, $style);\n    #{$property}: var(--theme-#{$style}, map-get($theme-property-values, $style));\n  }\n}\n\n// 用来设置主题色对应的对比色调值，浅色还是深色\n// $style 应该是 $theme-contrast-tone-property-values 中某个 key\n// 该 mixin 除了设置了对比色调值，还设置了对应的 css 变量值\n@mixin theme-contrast-tone-prop($property, $style, $important) {\n  // 根据 $style 返回变量，主要是 light 或 dark 变量\n  $theme-var: theme-contrast-tone-var($style);\n\n  @if $important {\n    #{$property}: map-get($theme-contrast-tone-property-values, $style) !important;\n    #{$property}: var(--theme-#{$theme-var}, map-get($theme-contrast-tone-property-values, $style)) !important;\n  } @else {\n    #{$property}: map-get($theme-contrast-tone-property-values, $style);\n    #{$property}: var(--theme-#{$theme-var}, map-get($theme-contrast-tone-property-values, $style));\n  }\n}\n\n// 设置辅助颜色 mixin\n// 根据给定的 $style ($theme-assist-colors 中的 key) 和 $opacity 设置颜色\n@mixin theme-assist($property, $style, $opacity: 1, $important: false) {\n\n  $color: map-get($theme-assist-colors, $style);\n\n  @if ($property == \"backgroud-color\" and $opacity != 1) {\n    // 变量 --theme-#{$style} 在 theme.scss 中定义\n    $css-var: var(--theme-#{$style}, $color);\n\n    @if $important {\n      background-color: rgba($color, $opacity) !important;\n    } @else {\n      background-color: rgba($color, $opacity);\n    }\n\n    // 可以动态的设置颜色透明度，属于 CSS 4 color 范畴，目前浏览器支持的不是很好\n    // 可以用 rgba 来代替，但只能静态设置，不可以随着颜色和透明度的变化动态设置\n    // https://drafts.csswg.org/css-color/#modifying-colors\n    @supports (background-color: color(green a(10%))) {\n      @if $important {\n        background-color: color(#{$css-var} a(#{percentage($opacity)})) !important;\n      } @else {\n        background-color: color(#{$css-var} a(#{percentage($opacity)}));\n      }\n    }\n  } @else {\n    // 也可以使用 alpha($color); 区别是 function alpha 也可以处理 the proprietary Microsoft `alpha(opacity=20)\n    // 而 function opacity 只支持颜色值，如果不是颜色值则报错\n    $alpha: opacity($color);\n\n    @if ($alpha == 1) {\n      @if $important {\n        #{$property}: $color !important;\n      } @else {\n        #{$property}: $color;\n      }\n    } @else {\n      @if $important {\n        #{$property}: rgba($color, $opacity) !important;\n      } @else {\n        #{$property}: rgba($color, $opacity);\n      }\n    }\n  }\n\n  // 因为不支持以下写法，所以只处理 $opacity == 1 的情况\n  // #{$property}: rgba(var(--theme-#{$style}, $color), $opacity);\n  @if ($opacity == 1) {\n    @if $important {\n      #{$property}: var(--theme-#{$style}, $color) !important;\n    } @else {\n      #{$property}: var(--theme-#{$style}, $color);\n    }\n  }\n}\n\n// 糅合 theme-color-prop 和 theme-contrast-tone-prop 和 theme-assist\n// 如果 $style 是颜色值，则直接设置颜色\n@mixin theme-prop($property, $style, $opacity: 1, $important: false) {\n  // 如果是颜色值，则直接设置\n  @if theme-is-valid-theme-prop-value($style) {\n    @if $important {\n      #{$property}: $style !important;\n    } @else {\n      #{$property}: $style;\n    }\n  } @else {\n    // 看是否在 $theme-property-values 中\n    $color: map-get($theme-property-values, $style);\n\n    @if ($color) {\n      @include theme-color-prop($property, $style, $important);\n    } @else {\n      // 再判断是否在 $theme-contrast-tone-property-values 中\n      $color: map-get($theme-contrast-tone-property-values, $style);\n\n      @if ($color) {\n        @include theme-contrast-tone-prop($property, $style, $important);\n      } @else {\n        // 最后判断是否在辅助颜色 $theme-assist-colors 中\n        $color: map-get($theme-assist-colors, $style);\n\n        @if ($color) {\n          @include theme-assist($property, $style, $opacity, $important);\n        } @else {\n          @error \"无效的主题属性值，#{$style} 必须是以下的某一 key $theme-property-values: #{map-keys($theme-property-values)}, $theme-contrast-tone-property-values: #{map-keys($theme-contrast-tone-property-values)}, $theme-assist-colors: #{map-keys($theme-assist-colors)}\";\n        }\n      }\n    }\n  }\n}\n\n// 通过设置前后景来定制主题，该 mixin 只处理简单的 color 和 background-color ，对于更复制的需要组件单独定义\n// $style 指 $theme-property-values 或 $theme-assist-colors 中属性值\n// $fore true 指前景，false 指背景，默认 true\n@mixin theme($style, $fore: true) {\n  $themes: $theme-property-values;\n  $themes: map-merge($theme-assist-colors, $themes);\n  $color: map-get($themes, $style);\n\n  @if ($color == null) {\n    @error \"无效的主题属性值，#{$style} 必须是以下的某一 key $theme-property-values: #{map-keys($theme-property-values)}, $theme-assist-colors: #{map-keys($theme-assist-colors)}\";\n  }\n\n  // 色调，判断是深色还是浅色\n  $tone: theme-tone($color);\n  // 对比色调\n  $contrast-tone: theme-contrast-tone($color);\n\n  @if ($fore) {\n    color: $color;\n    color: var(--theme-#{$style}, $color);\n    background-color: map-get($theme-contrast-tone-property-values, primary-on-#{$tone});\n    background-color: var(--theme-#{$contrast-tone}-primary, map-get($theme-contrast-tone-property-values, primary-on-#{$tone}));\n  } @else {\n    color: map-get($theme-contrast-tone-property-values, primary-on-#{$tone});\n    color: var(--theme-#{$contrast-tone}-primary, map-get($theme-contrast-tone-property-values, primary-on-#{$tone}));\n    background-color: $color;\n    background-color: var(--theme-#{$style}, $color);\n  }\n}\n\n// 设置主题对应的背景和前景颜色 class\n// 如果 $tone 设为 true，则会给出对应的前景或背景对比颜色色调值（深色或浅色），\n// 这样可以突出对比度，方便阅读，在需要的地方可以调用该 mixin ，并且参数 $tone 设为 true 即可\n@mixin theme-classes($tone: false) {\n  @each $style, $color in $theme-property-values {\n    $color-alpha: alpha($color);\n\n    // 设置 primary 和 secondary 以及浅色和深色背景颜色\n    // .theme-primary-bg {background-color: #2196f3; background-color: var(--theme-primary, #2196f3);}\n    // 对于 $style 值为 background 时\n    // .theme-background {background-color: #fff; background-color: var(--theme-background, #fff);}\n    $class-name: if($style == \"background\", $style, #{$style}-bg);\n\n    .theme-#{$class-name} {\n      @include theme-prop(background-color, $style, true);\n\n      @if ($tone) {\n        @if ($color-alpha == 1) {\n          @include theme-prop(color, primary-on-#{$style}, true);\n        } @else {\n          @include theme-prop(color, primary-on-light, true);\n        }\n      }\n    }\n\n    // 设置 primary 和 secondary 以及浅色和深色前景颜色\n    // .theme-primary {color: #2196f3; color: var(--theme-primary, #2196f3);}\n    @if $style != \"background\" {\n      .theme-#{$style} {\n        @include theme-prop(color, $style, true);\n\n        @if ($tone) {\n          @if ($color-alpha == 1) {\n            @include theme-prop(background-color, primary-on-#{$style}, true);\n          } @else {\n            @include theme-prop(background-color, primary-on-dark, true);\n          }\n        }\n      }\n    }\n  }\n}\n\n// 设置辅助颜色对应的背景和前景颜色 class\n// 如果 $tone 设为 true，则会给出对应的前景或背景对比颜色色调值（深色或浅色），\n// 这样可以突出对比度，方便阅读，在需要的地方可以调用该 mixin ，并且参数 $tone 设为 true 即可\n@mixin theme-assist-classes($tone: false) {\n  @each $theme, $color in $theme-assist-colors {\n    $color-alpha: alpha($color);\n\n    // 辅助颜色背景色\n    // .theme-success-bg {background-color: #4caf50; background-color: var(--theme-success, #4caf50);}\n    .theme-#{$theme}-bg {\n      background-color: $color !important;\n      background-color: var(--theme-#{$theme}, $color) !important;\n\n      @if ($tone) {\n        $contrast-tone: if($color-alpha == 1, theme-contrast-tone($color), \"dark\");\n        $color: map-get(map-get($theme-text-colors, $contrast-tone), primary);\n\n        color: $color !important;\n      }\n    }\n\n    // 辅助颜色前景色\n    // .theme-success {color: #4caf50; color: var(--theme-success, #4caf50);}\n    .theme-#{$theme} {\n      color: $color !important;\n      color: var(--theme-#{$theme}, $color) !important;\n\n      @if ($tone) {\n        $contrast-tone: theme-contrast-tone($color);\n        $color: map-get(map-get($theme-text-colors, $contrast-tone), primary);\n\n        background-color: $color !important;\n      }\n    }\n  }\n}\n\n// 设置灰度颜色对应的背景和前景颜色 class\n// 如果 $tone 设为 true，则会给出对应的前景或背景对比颜色色调值（深色或浅色），\n// 这样可以突出对比度，方便阅读，在需要的地方可以调用该 mixin ，并且参数 $tone 设为 true 即可\n@mixin theme-grey-classes($tone: false) {\n  // 灰度颜色前景-背景颜色值\n  @each $theme, $color in $greys {\n    .theme-grey-#{$theme} {\n      color: $color !important;\n\n      @if ($tone) {\n        $contrast-tone: theme-contrast-tone($color);\n        $color: map-get(map-get($theme-text-colors, $contrast-tone), primary);\n\n        background-color: $color !important;\n      }\n    }\n\n    .theme-grey-bg-#{$theme} {\n      background-color: $color !important;\n\n      @if ($tone) {\n        $contrast-tone: theme-contrast-tone($color);\n        $color: map-get(map-get($theme-text-colors, $contrast-tone), primary);\n\n        color: $color !important;\n      }\n    }\n  }\n}\n","// 页面底部样式\n\n@import \"../../../../components/theme/variable\";\n@import \"../../../../components/base/variables/font\";\n\n.footer-assist {\n  // 此处的数值等于 footer 的高度 + 预留的间距\n  margin-top: $font-size-base * $line-height-base + 2rem;\n}\n\n.footer {\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  padding: 1rem 0;\n  border-top: 1px solid $grey-color-300;\n  color: map-get(map-get($theme-text-colors, dark), secondary);\n  background: #fff;\n}\n","// 自定义主题颜色\n@import \"./color-palette\";\n@import \"../base/variables/options\";\n@import \"./function\";\n\n// 定义颜色透明度\n$alpha: .16 !default;\n\n// FIXME 是否把浅色和深色颜色值去掉\n// 主题颜色，换肤一般改变这三个基本颜色即可\n// 这三种基本颜色主题，会用在所有 CSS 组件上，\n$theme-primary: #2196f3 !default; // 主颜色，使用蓝色 $blue-500 #2196f3\n$theme-secondary: #e040fb !default; // 次颜色，也叫强调(accent)颜色，使用紫色 $purple-a-200 #e040fb\n$theme-background: #fff !default; // 背景颜色，默认白色\n\n// 主题颜色浅色\n$theme-primary-light: #64b5f6 !default; // 取 $blue-300\n$theme-secondary-light: #ea80fc !default; // 取 $purple-a-100\n\n// 主题颜色更浅色\n$theme-primary-lighter: #bbdefb !default; // 取 $blue-100\n$theme-secondary-lighter: #e1bee7 !default; // 取 $purple-100\n\n// 主题颜色最浅色\n$theme-primary-lightest: #e3f2fd !default; // 取 $blue-50\n$theme-secondary-lightest: #f3e5f5 !default; // 取 $purple-50\n\n// 主题颜色深色\n$theme-primary-dark: #1976d2 !default; // 取 $blue-700\n$theme-secondary-dark: #d500f9 !default; // 取 $purple-a-400\n\n// 主题颜色更深色\n$theme-primary-darker: #1565c0 !default; // 取 $blue-800\n$theme-secondary-darker: #a0f !default; // 取 $purple-a-700\n\n// 主题颜色最深色\n$theme-primary-darkest: #0d47a1 !default; // 取 $blue-900\n$theme-secondary-darkest: #4a148c !default; // 取 $purple-900\n\n// 主题颜色透明色，有的地方需要设置透明的背景色，这时可以使用该变量，比如波纹组件中\n// 如果浏览器支持了 CSS module，我们可以动态的修改 color 值，直接使用 $theme-primary 加透明参数值即可，只是目前浏览器还不支持。\n// 关于 CSS Color Level 4 提供了大量关于 Color 的处理，只是好多还没有实现，未来这些功能都实现后，CSS Color 的处理将变得更方便，更灵活，期待中......\n// https://www.w3.org/TR/2016/WD-css-color-4-20160705/\n$theme-primary-alpha: rgba($theme-primary, $alpha) !default;\n$theme-secondary-alpha: rgba($theme-secondary, $alpha) !default;\n\n// 浅色或深色色调，给出基本颜色的对比色调， light or dark\n$theme-primary-contrast-tone: theme-contrast-tone($theme-primary);\n$theme-secondary-contrast-tone: theme-contrast-tone($theme-secondary);\n\n// 主题颜色浅色对比色调\n$theme-primary-light-contrast-tone: theme-contrast-tone($theme-primary-light);\n$theme-secondary-light-contrast-tone: theme-contrast-tone($theme-secondary-light);\n\n// 主题颜色更浅色对比色调\n$theme-primary-lighter-contrast-tone: theme-contrast-tone($theme-primary-lighter);\n$theme-secondary-lighter-contrast-tone: theme-contrast-tone($theme-secondary-lighter);\n\n// 主题颜色最浅色对比色调\n$theme-primary-lightest-contrast-tone: theme-contrast-tone($theme-primary-lightest);\n$theme-secondary-lightest-contrast-tone: theme-contrast-tone($theme-secondary-lightest);\n\n// 主题颜色深色对比色调\n$theme-primary-dark-contrast-tone: theme-contrast-tone($theme-primary-dark);\n$theme-secondary-dark-contrast-tone: theme-contrast-tone($theme-secondary-dark);\n\n// 主题颜色更深色对比色调\n$theme-primary-darker-contrast-tone: theme-contrast-tone($theme-primary-darker);\n$theme-secondary-darker-contrast-tone: theme-contrast-tone($theme-secondary-darker);\n\n// 主题颜色最深色对比色调\n$theme-primary-darkest-contrast-tone: theme-contrast-tone($theme-primary-darkest);\n$theme-secondary-darkest-contrast-tone: theme-contrast-tone($theme-secondary-darkest);\n\n// 主题颜色透明色对比色调\n$theme-primary-alpha-contrast-tone: theme-contrast-tone($theme-primary-alpha);\n$theme-secondary-alpha-contrast-tone: theme-contrast-tone($theme-secondary-alpha);\n\n// 背景色对比色调\n$theme-background-contrast-tone: theme-contrast-tone($theme-background);\n\n// 定义文本默认颜色，默认颜色深色用黑色，浅色用白色\n// 分为基本颜色、次要颜色、提示性颜色和禁用颜色，分别用在基础颜色、过渡颜色、提示或暗色和表单 disabled readonly 以及其他禁用\n$theme-text-colors: (\n  dark: (\n    primary: rgba(0, 0, 0, .87),\n    secondary: rgba(0, 0, 0, .54),\n    hint: rgba(0, 0, 0, .38),\n    disabled: rgba(0, 0, 0, .38)\n  ),\n  light: (\n    primary: #fff,\n    secondary: rgba(255, 255, 255, .7),\n    hint: rgba(255, 255, 255, .5),\n    disabled: rgba(255, 255, 255, .5)\n  )\n);\n\n// 主题属性值\n$theme-property-values: (\n  // 主题颜色\n  primary: $theme-primary,\n  secondary: $theme-secondary,\n  background: $theme-background,\n\n  // 主题颜色浅色\n  primary-light: $theme-primary-light,\n  secondary-light: $theme-secondary-light,\n\n  // 主题颜色更浅色\n  primary-lighter: $theme-primary-lighter,\n  secondary-lighter: $theme-secondary-lighter,\n\n  // 主题颜色最浅色\n  primary-lightest: $theme-primary-lightest,\n  secondary-lightest: $theme-secondary-lightest,\n\n  // 主题颜色深色\n  primary-dark: $theme-primary-dark,\n  secondary-dark: $theme-secondary-dark,\n\n  // 主题颜色更深色\n  primary-darker: $theme-primary-darker,\n  secondary-darker: $theme-secondary-darker,\n\n  // 主题颜色最深色\n  primary-darkest: $theme-primary-darkest,\n  secondary-darkest: $theme-secondary-darkest,\n\n  // 主题颜色透明色\n  primary-alpha: $theme-primary-alpha,\n  secondary-alpha: $theme-secondary-alpha,\n\n) !default;\n\n// 主题基本颜色对比色调值集合，根据主题基本颜色计算出对应的对比色调值，浅色还是深色色调值\n$theme-contrast-tone-property-values: (\n  // 可以用在 background-color border-color 或 color 等可以设置颜色的属性上\n  // 当 map-get($theme-text-colors, $theme-primary-contrast-tone) 返回 light 时，对应浅色值\n  // 当 map-get($theme-text-colors, $theme-primary-contrast-tone) 返回 dark 时，对应深色值\n\n  // 用在 $theme-primary 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary: map-get(map-get($theme-text-colors, $theme-primary-contrast-tone), primary),\n  secondary-on-primary: map-get(map-get($theme-text-colors, $theme-primary-contrast-tone), secondary),\n  hint-on-primary: map-get(map-get($theme-text-colors, $theme-primary-contrast-tone), hint),\n  disabled-on-primary: map-get(map-get($theme-text-colors, $theme-primary-contrast-tone), disabled),\n\n  // 用在 $theme-primary-light 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary-light: map-get(map-get($theme-text-colors, $theme-primary-light-contrast-tone), primary),\n  secondary-on-primary-light: map-get(map-get($theme-text-colors, $theme-primary-light-contrast-tone), secondary),\n  hint-on-primary-light: map-get(map-get($theme-text-colors, $theme-primary-light-contrast-tone), hint),\n  disabled-on-primary-light: map-get(map-get($theme-text-colors, $theme-primary-light-contrast-tone), disabled),\n\n  // 用在 $theme-primary-lighter 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary-lighter: map-get(map-get($theme-text-colors, $theme-primary-lighter-contrast-tone), primary),\n  secondary-on-primary-lighter: map-get(map-get($theme-text-colors, $theme-primary-lighter-contrast-tone), secondary),\n  hint-on-primary-lighter: map-get(map-get($theme-text-colors, $theme-primary-lighter-contrast-tone), hint),\n  disabled-on-primary-lighter: map-get(map-get($theme-text-colors, $theme-primary-lighter-contrast-tone), disabled),\n\n  // 用在 $theme-primary-lightest 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary-lightest: map-get(map-get($theme-text-colors, $theme-primary-lightest-contrast-tone), primary),\n  secondary-on-primary-lightest: map-get(map-get($theme-text-colors, $theme-primary-lightest-contrast-tone), secondary),\n  hint-on-primary-lightest: map-get(map-get($theme-text-colors, $theme-primary-lightest-contrast-tone), hint),\n  disabled-on-primary-lightest: map-get(map-get($theme-text-colors, $theme-primary-lightest-contrast-tone), disabled),\n\n  // 用在 $theme-primary-dark 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary-dark: map-get(map-get($theme-text-colors, $theme-primary-dark-contrast-tone), primary),\n  secondary-on-primary-dark: map-get(map-get($theme-text-colors, $theme-primary-dark-contrast-tone), secondary),\n  hint-on-primary-dark: map-get(map-get($theme-text-colors, $theme-primary-dark-contrast-tone), hint),\n  disabled-on-primary-dark: map-get(map-get($theme-text-colors, $theme-primary-dark-contrast-tone), disabled),\n\n  // 用在 $theme-primary-darker 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary-darker: map-get(map-get($theme-text-colors, $theme-primary-darker-contrast-tone), primary),\n  secondary-on-primary-darker: map-get(map-get($theme-text-colors, $theme-primary-darker-contrast-tone), secondary),\n  hint-on-primary-darker: map-get(map-get($theme-text-colors, $theme-primary-darker-contrast-tone), hint),\n  disabled-on-primary-darker: map-get(map-get($theme-text-colors, $theme-primary-darker-contrast-tone), disabled),\n\n  // 用在 $theme-primary-darkest 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-primary-darkest: map-get(map-get($theme-text-colors, $theme-primary-darkest-contrast-tone), primary),\n  secondary-on-primary-darkest: map-get(map-get($theme-text-colors, $theme-primary-darkest-contrast-tone), secondary),\n  hint-on-primary-darkest: map-get(map-get($theme-text-colors, $theme-primary-darkest-contrast-tone), hint),\n  disabled-on-primary-darkest: map-get(map-get($theme-text-colors, $theme-primary-darkest-contrast-tone), disabled),\n\n  // 用在主题颜色主颜色透明色 $theme-primary-alpha 上的 primary secondary hint 和 disabled 对比颜色，深色主题用浅色对比色调\n  primary-on-primary-alpha: map-get(map-get($theme-text-colors, $theme-primary-alpha-contrast-tone), primary),\n  secondary-on-primary-alpha: map-get(map-get($theme-text-colors, $theme-primary-alpha-contrast-tone), secondary),\n  hint-on-primary-alpha: map-get(map-get($theme-text-colors, $theme-primary-alpha-contrast-tone), hint),\n  disabled-on-primary-alpha: map-get(map-get($theme-text-colors, $theme-primary-alpha-contrast-tone), disabled),\n\n  // 用在 $theme-secondary 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary: map-get(map-get($theme-text-colors, $theme-secondary-contrast-tone), primary),\n  secondary-on-secondary: map-get(map-get($theme-text-colors, $theme-secondary-contrast-tone), secondary),\n  hint-on-secondary: map-get(map-get($theme-text-colors, $theme-secondary-contrast-tone), hint),\n  disabled-on-secondary: map-get(map-get($theme-text-colors, $theme-secondary-contrast-tone), disabled),\n\n  // 用在 $theme-secondary-light 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary-light: map-get(map-get($theme-text-colors, $theme-secondary-light-contrast-tone), primary),\n  secondary-on-secondary-light: map-get(map-get($theme-text-colors, $theme-secondary-light-contrast-tone), secondary),\n  hint-on-secondary-light: map-get(map-get($theme-text-colors, $theme-secondary-light-contrast-tone), hint),\n  disabled-on-secondary-light: map-get(map-get($theme-text-colors, $theme-secondary-light-contrast-tone), disabled),\n\n  // 用在 $theme-secondary-lighter 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary-lighter: map-get(map-get($theme-text-colors, $theme-secondary-lighter-contrast-tone), primary),\n  secondary-on-secondary-lighter: map-get(map-get($theme-text-colors, $theme-secondary-lighter-contrast-tone), secondary),\n  hint-on-secondary-lighter: map-get(map-get($theme-text-colors, $theme-secondary-lighter-contrast-tone), hint),\n  disabled-on-secondary-lighter: map-get(map-get($theme-text-colors, $theme-secondary-lighter-contrast-tone), disabled),\n\n  // 用在 $theme-secondary-lightest 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary-lightest: map-get(map-get($theme-text-colors, $theme-secondary-lightest-contrast-tone), primary),\n  secondary-on-secondary-lightest: map-get(map-get($theme-text-colors, $theme-secondary-lightest-contrast-tone), secondary),\n  hint-on-secondary-lightest: map-get(map-get($theme-text-colors, $theme-secondary-lightest-contrast-tone), hint),\n  disabled-on-secondary-lightest: map-get(map-get($theme-text-colors, $theme-secondary-lightest-contrast-tone), disabled),\n\n  // 用在 $theme-secondary-dark 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary-dark: map-get(map-get($theme-text-colors, $theme-secondary-dark-contrast-tone), primary),\n  secondary-on-secondary-dark: map-get(map-get($theme-text-colors, $theme-secondary-dark-contrast-tone), secondary),\n  hint-on-secondary-dark: map-get(map-get($theme-text-colors, $theme-secondary-dark-contrast-tone), hint),\n  disabled-on-secondary-dark: map-get(map-get($theme-text-colors, $theme-secondary-dark-contrast-tone), disabled),\n\n  // 用在 $theme-secondary-darker 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary-darker: map-get(map-get($theme-text-colors, $theme-secondary-darker-contrast-tone), primary),\n  secondary-on-secondary-darker: map-get(map-get($theme-text-colors, $theme-secondary-darker-contrast-tone), secondary),\n  hint-on-secondary-darker: map-get(map-get($theme-text-colors, $theme-secondary-darker-contrast-tone), hint),\n  disabled-on-secondary-darker: map-get(map-get($theme-text-colors, $theme-secondary-darker-contrast-tone), disabled),\n\n  // 用在 $theme-secondary-darkest 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-secondary-darkest: map-get(map-get($theme-text-colors, $theme-secondary-darkest-contrast-tone), primary),\n  secondary-on-secondary-darkest: map-get(map-get($theme-text-colors, $theme-secondary-darkest-contrast-tone), secondary),\n  hint-on-secondary-darkest: map-get(map-get($theme-text-colors, $theme-secondary-darkest-contrast-tone), hint),\n  disabled-on-secondary-darkest: map-get(map-get($theme-text-colors, $theme-secondary-darkest-contrast-tone), disabled),\n\n  // 用在主题颜色次颜色透明色 $theme-secondary-alpha 上的 primary secondary hint 和 disabled 对比颜色，深色主题用浅色对比色调\n  primary-on-secondary-alpha: map-get(map-get($theme-text-colors, $theme-secondary-alpha-contrast-tone), primary),\n  secondary-on-secondary-alpha: map-get(map-get($theme-text-colors, $theme-secondary-alpha-contrast-tone), secondary),\n  hint-on-secondary-alpha: map-get(map-get($theme-text-colors, $theme-secondary-alpha-contrast-tone), hint),\n  disabled-on-secondary-alpha: map-get(map-get($theme-text-colors, $theme-secondary-alpha-contrast-tone), disabled),\n\n  // 用在 $theme-background 上的 primary secondary hint 和 disabled 对比色调\n  primary-on-background: map-get(map-get($theme-text-colors, $theme-background-contrast-tone), primary),\n  secondary-on-background: map-get(map-get($theme-text-colors, $theme-background-contrast-tone), secondary),\n  hint-on-background: map-get(map-get($theme-text-colors, $theme-background-contrast-tone), hint),\n  disabled-on-background: map-get(map-get($theme-text-colors, $theme-background-contrast-tone), disabled),\n\n  // 用在浅色主题上的 primary secondary hint 和 disabled 对比色调，浅色主题用深色对比色调\n  primary-on-light: map-get(map-get($theme-text-colors, dark), primary),\n  secondary-on-light: map-get(map-get($theme-text-colors, dark), secondary),\n  hint-on-light: map-get(map-get($theme-text-colors, dark), hint),\n  disabled-on-light: map-get(map-get($theme-text-colors, dark), disabled),\n\n  // 用在深色主题上的 primary secondary hint 和 disabled 对比颜色，深色主题用浅色对比色调\n  primary-on-dark: map-get(map-get($theme-text-colors, light), primary),\n  secondary-on-dark: map-get(map-get($theme-text-colors, light), secondary),\n  hint-on-dark: map-get(map-get($theme-text-colors, light), hint),\n  disabled-on-dark: map-get(map-get($theme-text-colors, light), disabled),\n) !default;\n\n// 除了三种基本颜色外，又定义了成功 success 、信息 info、警告 warning 、错误 error 四种辅助颜色，\n// 这四种颜色主要用在背景，文本，按钮等上，用来区分文本颜色和背景，以及表单样式（比如校验失败和成功的颜色）等\n$theme-assist: (\"success\", \"info\", \"warning\", \"error\") !default;\n\n// 辅助颜色值\n$theme-assist-colors: (\n  success: #43a047, // $green-600\n  info: #0097a7, // $cyan-700\n  warning: #fbc02d, // $yellow-700\n  error: #f44336, // $red-500\n\n  // 辅助颜色浅色\n  success-light: #81c784, // $green-300\n  info-light: #4dd0e1, // $cyan-300\n  warning-light: #fff176, // $yellow-300\n  error-light: #e57373, // $red-300\n\n  // 辅助颜色更浅色\n  success-lighter: #c8e6c9, // $green-100\n  info-lighter: #b2ebf2, // $cyan-100\n  warning-lighter: #fff9c4, // $yellow-100\n  error-lighter: #ffcdd2, // $red-100\n\n  // 辅助颜色深色\n  success-dark: #2e7d32, // $green-800\n  info-dark: #00838f, // $cyan-800\n  warning-dark: #f9a825, // $yellow-800\n  error-dark: #c62828, // $red-800\n\n  // 辅助颜色透明色\n  success-alpha: rgba(#4caf50, $alpha),\n  info-alpha: rgba(#00bcd4, $alpha),\n  warning-alpha: rgba(#ffeb3b, $alpha),\n  error-alpha: rgba(#f44336, $alpha),\n) !default;\n\n// 常用灰色颜色，提供了黑色透明度和灰色本身颜色两种方案，根据配置项 $enable-transparent 来选择其中一种方案\n// 默认使用黑色透明度，可以通过修改 base/variables/_options.scss 中变量 $enable-transparent 来选择不同的方案\n\n// 灰色颜色，对于灰色颜色，这里没有采用 css 变量处理\n$greys: (\n  50: #fafafa,\n  100: #f5f5f5,\n  200: #eee,\n  300: #e0e0e0,\n  400: #bdbdbd,\n  500: #9e9e9e,\n  600: #757575,\n  700: #616161,\n  800: #424242,\n  900: #212121\n) !default;\n\n// 灰色透明色\n$greys-transparent: (\n  50: rgba(0, 0, 0, .02), // 相当于 #fafafa;\n  100: rgba(0, 0, 0, .04), // 相当于 #f5f5f5\n  200: rgba(0, 0, 0, .065), // 相当于 #eeeeee\n  300: rgba(0, 0, 0, .12), // 相当于 #e0e0e0\n  400: rgba(0, 0, 0, .26), // 相当于 #bdbdbd\n  500: rgba(0, 0, 0, .38), // 相当于 #9e9e9e\n  600: rgba(0, 0, 0, .54), // 相当于 #757575\n  700: rgba(0, 0, 0, .62), // 相当于 #616161\n  800: rgba(0, 0, 0, .74), // 相当于 #424242\n  900: rgba(0, 0, 0, .87) // 相当于 #212121\n) !default;\n\n// 白色、黑色和透明色\n$white: #fff !default;\n$black: #000 !default;\n$transparent: rgba(0, 0, 0, 0) !default; // 透明色\n\n$grey-color-50: if($enable-transparent, map-get($greys-transparent, 50), map-get($greys, 50)) !default;\n$grey-color-100: if($enable-transparent, map-get($greys-transparent, 100), map-get($greys, 100)) !default;\n$grey-color-200: if($enable-transparent, map-get($greys-transparent, 200), map-get($greys, 200)) !default;\n$grey-color-300: if($enable-transparent, map-get($greys-transparent, 300), map-get($greys, 300)) !default;\n$grey-color-400: if($enable-transparent, map-get($greys-transparent, 400), map-get($greys, 400)) !default;\n$grey-color-500: if($enable-transparent, map-get($greys-transparent, 500), map-get($greys, 500)) !default;\n$grey-color-600: if($enable-transparent, map-get($greys-transparent, 600), map-get($greys, 600)) !default;\n$grey-color-700: if($enable-transparent, map-get($greys-transparent, 700), map-get($greys, 700)) !default;\n$grey-color-800: if($enable-transparent, map-get($greys-transparent, 800), map-get($greys, 800)) !default;\n$grey-color-900: if($enable-transparent, map-get($greys-transparent, 900), map-get($greys, 900)) !default;\n",".component-wrap {\n  padding: 0 4rem 1rem;\n\n  h1, h2, h3 {\n    margin-top: 3rem;\n  }\n\n  h4, h5 {\n    margin-top: 2rem;\n  }\n\n  h1, h2, h3, h4, h5 {\n    margin-bottom: 1rem;\n  }\n\n  p {\n    margin-bottom: 1rem;\n  }\n}\n"],"sourceRoot":""}