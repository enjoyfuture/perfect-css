{"version":3,"sources":["scrollSpy.js"],"names":["getUuid","isWheel","offset","position","ScrollSpy","perfect","win","window","doc","document","Array","prototype","forEach","map","element","config","scrollEvent","event","process","scrollElement","tagName","getConfig","menu","menuClsPrefix","extend","menuSelector","offsets","targets","activeTarget","scrollHeight","extendStyle","createElement","innerHTML","getElementsByTagName","append","addEventListener","immedLoad","initMenus","anchor","generateMenus","menuPanel","$menuPanel","querySelector","menuElements","querySelectorAll","call","e","preventDefault","stopPropagation","el","currentTarget","dataset","offsetMethod","container","offsetXY","targetEl","parentNode","top","offsetBase","getScrollTop","scrollTo","blur","pluginConfig","plugins","isArray","plugin","instance","mount","push","style","display","refresh","_config","defaultConfig","id","body","autoMethod","method","menus","entries","level","children","depth","parent","text","root","prevLevel","lastNode","index","entry","parseInt","ancestor","html","generateMenusHtml","prefix","nodes","menuCls","length","i","len","node","newChild","className","href","setAttribute","insertBefore","firstChild","getScrollHeight","target","selector","getAttribute","targetSelector","targetBCR","getBoundingClientRect","width","height","sort","a","b","item","scrollTop","maxScroll","getOffsetHeight","activate","clearActiveCls","isActiveTarget","undefined","queries","split","lastSelector","parentEls","query","catalog","it","join","$link","classList","add","scrollMenu","activeEls","remove","removeEventListener","unmount","pageYOffset","Math","max","documentElement","innerHeight","animation"],"mappings":"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","file":"scrollSpy.js","sourcesContent":["import perfect from './perfect';\nimport util from './util';\nconst {getUuid, isWheel, offset, position} = util;\n\nconst ScrollSpy = ((perfect) => {\n  const win = window;\n  const doc = document;\n  const {forEach, map} = Array.prototype;\n\n  class ScrollSpy {\n    static defaultConfig = {\n      offset: 0,\n      method: 'auto',\n      menu: '', // 菜单导航\n      menuCls: null, // 自定义菜单样式\n      menuClsPrefix: 'menu', // 菜单样式前缀\n      container: null, // 需要监听的内容容器\n      immedLoad: true, // 是否立即监听，如果设为 false， 则通过滑动鼠标来激活监听\n      prefix: 'menu-', // 导航目录前缀\n      anchor: true, // 是否用锚点来控制，默认用锚点处理\n      animation: true, // 是否开启动画\n      extend: false, // 默认菜单没有展开\n    };\n\n    constructor(element, config = {}) {\n      this.element = element;\n      this.scrollElement = element.tagName === 'BODY' ? win : element;\n      this.config = this.getConfig(config);\n      const {menu, menuClsPrefix, extend} = this.config;\n      // 菜单 目录 等选择器\n      this.menuSelector = `${menu} .${menuClsPrefix}-title`;\n      this.offsets = [];\n      this.targets = [];\n      this.activeTarget = null;\n      this.scrollHeight = 0;\n\n      // 如果默认不展开，则用样式来控制\n      if (!extend) {\n        const extendStyle = doc.createElement('style');\n        extendStyle.innerHTML = `\n          .menu-catalogue .menu-catalogue {\n            display: none;\n          }\n          .active + .menu-catalogue {\n            display: block;\n          }`;\n        doc.getElementsByTagName('head')[0].append(extendStyle);\n      }\n\n      // 添加事件，页面滚动时，处理目录和内容对应坐标\n      this.scrollElement.addEventListener(isWheel ? 'mousewheel' : 'DOMMouseScroll', this.scrollEvent, false);\n      const {immedLoad, initMenus, anchor} = this.config;\n      // 需要根据内容动态创建菜单列表\n      if (initMenus) {\n        this.generateMenus();\n      }\n\n      // 菜单面板\n      this.menuPanel = `${menu} .${menuClsPrefix}.${menuClsPrefix}-catalogue`;\n      this.$menuPanel = doc.querySelector(this.menuPanel);\n\n      // 不用锚点处理的情况\n      if (anchor === false) {\n        // fixme 待改进，改成 事件代理模式\n        const menuElements = doc.querySelectorAll(this.menuSelector);\n        forEach.call(menuElements, (element) => {\n          element.addEventListener('click', (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n            const el = e.currentTarget;\n            const {menu} = el.dataset;\n            const {offsetMethod, container} = this.config;\n            const offsetXY = this.config.offset;\n\n            const targetEl = doc.querySelector(`${container} [data-target=\"${menu}\"]`).parentNode;\n            const top = offsetMethod === 'offset' ? offset(targetEl).top : position(targetEl).top;\n            const offsetBase = offsetMethod === 'position' ? this.getScrollTop() : 0;\n\n            // fixme\n            this.scrollElement.scrollTo(0, top + offsetBase - offsetXY);\n            el.blur();\n            this.process();\n          }, false);\n        });\n      }\n\n      // 加载插件\n      const {pluginConfig} = this.config;\n      let {plugins} = this.config;\n      if (plugins) {\n        if (!Array.isArray(plugins)) {\n          plugins = [plugins];\n        }\n        this.plugins = [];\n        const {container} = this.config;\n        plugins.forEach((plugin) => {\n          // 把当前实例传给插件\n          const instance = new plugin(this, pluginConfig);\n          instance.mount();\n          this.plugins.push(instance);\n        });\n      }\n\n      // 显示菜单\n      doc.querySelector(menu).style.display = 'block';\n      if (immedLoad) {\n        this.refresh();\n        this.process();\n      }\n    }\n\n    getConfig(config) {\n      const _config = {...ScrollSpy.defaultConfig, ...config};\n\n      const {menu} = _config;\n      let {container} = _config;\n\n      if (typeof menu !== 'string') { // dom 对象\n        let {id} = menu;\n        if (!id) {\n          id = getUuid('scrollspy');\n          menu.id = id;\n        }\n        _config.menu = `#${id}`\n      }\n\n      if (!container) {\n        container = doc.body; // 默认取 body\n      }\n      if (typeof container !== 'string') {\n        let {id} = container;\n        if (!id) {\n          id = getUuid('scrollspy');\n          container.id = id;\n        }\n        _config.container = `#${id}`\n      }\n\n      const autoMethod = this.scrollElement !== this.scrollElement.window ?\n        'position' : 'offset';\n\n      const offsetMethod = _config.method === 'auto' ?\n        autoMethod : _config.method;\n\n      _config.offsetMethod = offsetMethod;\n\n      return _config;\n    }\n\n    /**\n     * 动态创建菜单\n     */\n    generateMenus() {\n      const menus = this.element.querySelectorAll('h1,h2,h3,h4,h5,h6');\n      // 初始化根节点\n      const entries = {\n        level: 0,\n        children: [],\n        depth: 0,\n        parent: null,\n        text: null,\n        root: true\n      };\n\n      // 前一个元素 level\n      let prevLevel = 0;\n      // 上一个节点\n      let lastNode = null;\n\n      forEach.call(menus, (el, index) => {\n        let entry = null;\n        const level = 7 - parseInt(el.tagName[1], 10);\n        const text = el.innerHTML;\n\n        if (index === 0) {\n          // 初始化第一个元素\n          entry = {\n            level,\n            children: [],\n            depth: 1,\n            parent: entries,\n            text,\n            el\n          };\n          entries.children.push(entry);\n        } else {\n          if (level === prevLevel) { // 相等的话\n            entry = {\n              level,\n              children: [],\n              depth: lastNode.depth,\n              parent: lastNode.parent,\n              text,\n              el\n            };\n            lastNode.parent.children.push(entry);\n          } else if (level < prevLevel) { // 如果当前级别小于前一个\n            entry = {\n              level,\n              children: [],\n              depth: lastNode.depth + 1,\n              parent: lastNode,\n              text,\n              el\n            };\n            lastNode.children.push(entry);\n          } else { // 如果当前级别大于前一个 查找祖先节点\n            let ancestor = lastNode.parent;\n            while (ancestor.level <= level && !ancestor.root) {\n              ancestor = ancestor.parent;\n            }\n            entry = {\n              level,\n              children: [],\n              depth: ancestor.depth + 1,\n              parent: ancestor,\n              text,\n              el\n            };\n            ancestor.children.push(entry);\n          }\n        }\n        lastNode = entry;\n        prevLevel = level;\n      });\n\n      const html = this.generateMenusHtml(entries.children, this.config.prefix);\n      doc.querySelector(this.config.menu).innerHTML = html;\n    }\n\n    /**\n     * 根据 nodes 节点 生成 html\n     * @param nodes\n     * @param prefix\n     * @return {string}\n     */\n    generateMenusHtml(nodes, prefix) {\n      const {menuClsPrefix, menuCls} = this.config;\n      let html = '';\n      if (nodes && nodes.length > 0) {\n        html = `<ul class=\"${menuClsPrefix} ${menuClsPrefix}-catalogue${menuCls ? ` ${menuCls}` : ''}\">`;\n        for (let i = 0, len = nodes.length; i < len; i++) {\n          const node = nodes[i];\n          // 为对应的内容加锚点\n          const newChild = document.createElement('a');\n          newChild.id = prefix + (i + 1);\n          newChild.className = `${menuClsPrefix}-anchor`;\n          if (this.config.anchor) {\n            newChild.href = `#${prefix + (i + 1)}`;\n          } else {\n            newChild.dataset.menu = `${prefix + (i + 1)}`;\n          }\n\n          newChild.setAttribute('aria-hidden', true);\n          node.el.insertBefore(newChild, node.el.firstChild);\n\n          html += '<li>';\n          if (this.config.anchor) {\n            html += `<a class=\"${menuClsPrefix}-title\" href=\"#${prefix}${i + 1}\">${node.text}</a>`;\n          } else { // 用 data-target 来控制，需要结合 js 来控制\n            html += `<a class=\"${menuClsPrefix}-title\" data-target=\"${prefix}${i + 1}\" href=\"#\">${node.text}</a>`;\n          }\n          if (node.children && node.children.length > 0) {\n            html += this.generateMenusHtml(node.children, `${prefix}${i + 1}-`);\n          }\n          html += '</li>';\n        }\n        html += '</ul>';\n      }\n      return html;\n    }\n\n    /**\n     * 滚动页面时，刷新相关数据\n     */\n    refresh() {\n      const {offsetMethod} = this.config;\n      const offsetBase = offsetMethod === 'position' ? this.getScrollTop() : 0;\n\n      this.offsets = [];\n      this.targets = [];\n      this.scrollHeight = this.getScrollHeight();\n\n\n      // 把滚动监听的元素和坐标保存到offsets和targets中\n      const menuElements = doc.querySelectorAll(this.menuSelector);\n\n      map.call(menuElements, (element) => {\n        // 目标元素\n        let target = null;\n        const {anchor, container} = this.config;\n        const selector = anchor ? element.getAttribute('href') : element.dataset.menu;\n        const targetSelector = anchor ? element.getAttribute('href') :\n          `${container} [data-target=\"${element.dataset.menu}\"]`;\n\n        if (targetSelector) {\n          target = doc.querySelector(targetSelector).parentNode;\n          const targetBCR = target.getBoundingClientRect();\n          if (targetBCR.width || targetBCR.height) {\n            return [\n              (offsetMethod === 'offset' ? offset(target).top : position(target).top) + offsetBase,\n              selector\n            ]\n          }\n        }\n        return null;\n      }).sort((a, b) => {\n        if (!a || !b) {\n          return 0;\n        }\n        return a[0] - b[0];\n      }).forEach((item) => {\n        if (item) {\n          this.offsets.push(item[0]);\n          this.targets.push(item[1]);\n        }\n      });\n    }\n\n    // 鼠标滚动事件\n    scrollEvent = (event) => {\n      this.process();\n    };\n\n    /**\n     * 滚动时触发该方法\n     * @returns {boolean|*}\n     */\n    process() {\n      const scrollTop = this.getScrollTop() + this.config.offset;\n      const scrollHeight = this.getScrollHeight();\n      const maxScroll = this.config.offset\n        + scrollHeight\n        - this.getOffsetHeight();\n\n      // 不相等的话，重新刷新，比如改变页面窗口后\n      if (this.scrollHeight !== scrollHeight) {\n        this.refresh();\n      }\n\n      // 滑到底部\n      if (scrollTop >= maxScroll) {\n        // 取最后一个\n        const target = this.targets[this.targets.length - 1];\n\n        if (this.activeTarget !== target) {\n          this.activate(target);\n        }\n        return;\n      }\n\n      // 滑到头部\n      if (this.activeTarget && scrollTop < this.offsets[0] && this.offsets[0] > 0) {\n        this.activeTarget = null;\n        this.clearActiveCls();\n        return\n      }\n\n      for (let i = this.offsets.length; i--;) {\n        const isActiveTarget = this.activeTarget !== this.targets[i]\n          && scrollTop >= this.offsets[i]\n          && (this.offsets[i + 1] === undefined ||\n          scrollTop < this.offsets[i + 1]);\n\n        if (isActiveTarget) {\n          this.activate(this.targets[i]);\n        }\n      }\n    }\n\n    /**\n     * 设置当前活动的内容\n     * @param target\n     */\n    activate(target) {\n      this.activeTarget = target;\n\n      this.clearActiveCls();\n\n      const {anchor} = this.config;\n      let queries = this.menuSelector.split(',');\n      const lastSelector = []; // 最后一个菜单项，即当前的子节点\n      // 当前选中的和父目录都添加活动样式\n      const parentEls = target.split('-');\n      queries = queries.map((query) => {\n        const selector = [];\n        let catalog = '';\n        parentEls.forEach((it, index) => {\n          if (index === 0) {\n            catalog += it;\n          } else {\n            catalog += `-${it}`;\n            selector.push(anchor ? `${query}[href=\"${catalog}\"]` : `${query}[data-menu=\"${catalog}\"]`);\n          }\n        });\n        lastSelector.push(selector[selector.length - 1]);\n        return selector.join(',');\n      });\n\n      const $link = doc.querySelectorAll(queries.join(','));\n\n      for (let i = 0, len = $link.length; i < len; i++) {\n        $link[i].classList.add('active');\n      }\n\n      this.plugins.forEach((plugin) => {\n        if (typeof plugin.scrollMenu === 'function') {\n          plugin.scrollMenu(lastSelector);\n        }\n      });\n\n      // todo 事件，待补充\n\n      /* $(this._scrollElement).trigger(Event.ACTIVATE, {\n       relatedTarget: target\n       }) */\n    }\n\n    clearActiveCls() {\n      // 删除当前活动样式\n      const activeEls = doc.querySelectorAll(`${this.menuSelector}.active`);\n      if (activeEls) {\n        for (let i = 0, len = activeEls.length; i < len; i++) {\n          activeEls[i].classList.remove('active');\n        }\n      }\n    }\n\n    // 卸载\n    unmount() {\n      // $.removeData(this._element, DATA_KEY)\n      this.scrollElement.removeEventListener(isWheel ? 'mousewheel' : 'DOMMouseScroll', this.scrollEvent, false);\n\n      this.element = null;\n      this.scrollElement = null;\n      this.config = null;\n      this.menu = null;\n      this.menuSelector = null;\n      this.container = null;\n      this.offsets = null;\n      this.targets = null;\n      this.activeTarget = null;\n      this.scrollHeight = null;\n\n      // 卸载插件\n      if (this.plugins) {\n        this.plugins.forEach((plugin) => {\n          plugin.unmount();\n        });\n        this.plugins = null;\n      }\n    }\n\n    getScrollTop() {\n      return this.scrollElement === win ?\n        this.scrollElement.pageYOffset : this.scrollElement.scrollTop;\n    }\n\n    getScrollHeight() {\n      return this.scrollElement.scrollHeight || Math.max(\n          doc.body.scrollHeight,\n          doc.documentElement.scrollHeight\n        );\n    }\n\n    getOffsetHeight() {\n      return this.scrollElement === win ?\n        win.innerHeight : this.scrollElement.getBoundingClientRect().height;\n    }\n\n  }\n\n  perfect.ScrollSpy = ScrollSpy;\n  return ScrollSpy;\n})(perfect);\n\nexport default ScrollSpy;\n"]}